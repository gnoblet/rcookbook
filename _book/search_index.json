[["index.html", "R cookbook for analysis with IMPACT 1 Hello", " R cookbook for analysis with IMPACT R CoP 1 Hello Hello, This is book aims to be a small collection of code used across different mission. It will show you examples of different problems you can face and you could solve them. Those codes are not exhaustive but just examples. "],["meta-information.html", "2 Meta information 2.1 Creating the questionnaire object", " 2 Meta information There should be here the libraries, dataset, odk and sampling frame and any other thing. Note that some variables were NA’ed (age, etc.) In addition, it seems the weights are already added, and both loops where combined already. ## Importing dataset and questionnaire library(magrittr) library(dplyr) library(readxl) library(hypegrammaR) main_dataset &lt;- read.csv(&quot;inputs/UKR2007_MSNA20_HH_dataset_main_rcop.csv&quot;, na.strings = &quot;&quot;) loop_dataset &lt;- read.csv(&quot;inputs/UKR2007_MSNA20_HH_dataset_loop_rcop.csv&quot;, na.strings = &quot;&quot;) main_dataset &lt;- main_dataset %&gt;% select_if(~ !(all(is.na(.x)) | all(. == &quot;&quot;))) questions &lt;- read_xlsx(&quot;inputs/UKR2007_MSNA20_HH_Questionnaire_24JUL2020.xlsx&quot;,sheet=&quot;survey&quot;) choices &lt;- read_xlsx(&quot;inputs/UKR2007_MSNA20_HH_Questionnaire_24JUL2020.xlsx&quot;,sheet=&quot;choices&quot;) 2.1 Creating the questionnaire object questionnaire &lt;- load_questionnaire(data = main_dataset, questions = questions, choices = choices, choices.label.column.to.use = &quot;label::English&quot;) "],["downloading-data-from-kobo-server.html", "3 Downloading data from kobo server 3.1 Defining the needed functions 3.2 Creating data url and credentials variables 3.3 Fetching the data from the server", " 3 Downloading data from kobo server 3.1 Defining the needed functions kobohr_getforms_csv &lt;-function(url,u,pw){ rawdata&lt;-GET(url,authenticate(u,pw),progress()) d_content_csv &lt;-read_csv(content(rawdata,&quot;raw&quot;,encoding = &quot;UTF-8&quot;)) } download_data &lt;-function(url,u,pw){ rawdata&lt;- GET(url,authenticate(u,pw),progress()) d_content &lt;- read_csv(content(rawdata,&quot;raw&quot;,encoding = &quot;UTF-8&quot;),na = c(&quot;n/a&quot;,&quot;&quot;)) %&gt;% setNames(gsub(&quot;/&quot;,&quot;.&quot;,names(.))) d_content } create_export &lt;-function(type,lang,fields_from_all_versions,hierarchy_in_labels,group_sep,asset_uid,kobo_user,Kobo_pw){ api_url_export&lt;-paste0(kobo_server_url,&quot;exports/&quot;) api_url_asset&lt;-paste0(kobo_server_url,&quot;assets/&quot;,asset_uid,&quot;/&quot;) api_url_export_asset&lt;-paste0(kobo_server_url,&quot;exports/&quot;,asset_uid,&quot;/&quot;) # d&lt;-list(source=api_url_asset, type=type, lang=lang, fields_from_all_versions=fields_from_all_versions, hierarchy_in_labels=hierarchy_in_labels, group_sep=group_sep) #fetch data result&lt;-httr::POST(url=api_url_export, body=d, authenticate(kobo_user,Kobo_pw), progress() ) print(paste0(&quot;status code:&quot;,result$status_code)) d_content &lt;- rawToChar(result$content) print(d_content) d_content &lt;- fromJSON(d_content) return(d_content) } 3.2 Creating data url and credentials variables kobo_server_url&lt;-&quot;https://kobo.humanitarianresponse.info/&quot; url &lt;-&quot;https://kc.humanitarianresponse.info/api/v1/data.csv&quot; kobo_user = &quot;rcop_test&quot; kobo_pw = &quot;e4#xV8zKAU)A)h58&quot; list_forms &lt;- as.data.frame(kobohr_getforms_csv (url,kobo_user, kobo_pw)) ## | | | 0% | |======================================================================| 100% #### Create a variable with the form id and create to dataurl link form_id = &quot;965004&quot; asset_uid = &quot;a9XVuozs7VQ2bvbvMwKSdS&quot; dataurl&lt;- paste0(&quot;https://kc.humanitarianresponse.info/api/v1/data/&quot;,form_id,&quot;.csv&quot;) 3.3 Fetching the data from the server #### Download data as csv df &lt;- download_data(dataurl,kobo_user,kobo_pw) #### Create an export and download it type &lt;- &quot;xls&quot; lang &lt;- &quot;xml&quot; fields_from_all_versions &lt;- &quot;TRUE&quot; hierarchy_in_labels &lt;- &quot;FALSE&quot; group_sep = &quot;/&quot; d_exports&lt;-create_export(type=type, lang=lang, fields_from_all_versions=fields_from_all_versions, hierarchy_in_labels=hierarchy_in_labels, group_sep=group_sep, asset_uid=asset_uid, kobo_user, kobo_pw) result&lt;-httr::GET (url=paste0(as.character(d_exports$url),&quot;?format=json&quot;), authenticate(kobo_user,kobo_pw), progress() ) result_file&lt;-httr::GET (url=jsonlite::fromJSON(rawToChar(result$content))$result, authenticate(kobo_user,kobo_pw), progress() ) httr::GET (result_file$url, authenticate(kobo_user,kobo_pw), progress(), write_disk(tf &lt;- tempfile(fileext = &quot;.xlsx&quot;)) ) df2 &lt;- read_excel(tf) "],["pre-analysis.html", "4 Pre analysis 4.1 Checking the XLS kobo tools for constraints errors 4.2 Sampling", " 4 Pre analysis This section will show you different steps or tools that can be used before the analysis takes place such as checking your KOBO tool or following up your data collection. 4.1 Checking the XLS kobo tools for constraints errors This function checks the relevant column in the questionnaire and flag issues with constraints of type (selected(question_name,question_answer)). library(stringr) library(purrr) library(readxl) library(qdapRegex) library(sf) library(tidyr) library(magrittr) library(dplyr) questions &lt;- read_xlsx(&quot;inputs/UKR2007_MSNA20_HH_Questionnaire_24JUL2020.xlsx&quot;,sheet=&quot;survey&quot;) choices &lt;- read_xlsx(&quot;inputs/UKR2007_MSNA20_HH_Questionnaire_24JUL2020.xlsx&quot;,sheet=&quot;choices&quot;) check_answer_in_list &lt;- function(constraint) { if(!str_detect(constraint,&quot;,&quot;)){ return(TRUE) } question_regex &lt;- &quot;\\\\{([^()]+)\\\\}&quot; answer_regex &lt;- &quot;\\\\&#39;([^()]+)\\\\&#39;&quot; question &lt;- gsub(question_regex, &quot;\\\\1&quot;, str_extract_all(constraint, question_regex)[[1]]) answer &lt;- gsub(answer_regex, &quot;\\\\1&quot;, str_extract_all(constraint, answer_regex)[[1]]) question_type &lt;- questions %&gt;% filter(name==question) %&gt;% filter(!grepl(&quot;^(begin|end)\\\\s+group$&quot;,type)) %&gt;% pull(type) listname &lt;- gsub(&quot;^.*\\\\s&quot;,&quot;&quot;,question_type) choices_list &lt;- choices %&gt;% filter(list_name==listname) %&gt;% pull(name) return(answer %in% choices_list) } check_constraints &lt;- function(questions,choices) { questions &lt;- mutate_at(questions, c(&quot;name&quot;, &quot;type&quot;), ~str_trim(.)) choices &lt;- mutate_at(choices, c(&quot;list_name&quot;, &quot;name&quot;), ~str_trim(.)) all_contraints &lt;- questions %&gt;% filter(grepl(&quot;selected&quot;,relevant)) %&gt;% pull(relevant) all_contraints &lt;- gsub(&#39;&quot;&#39;,&quot;&#39;&quot;,all_contraints) rs_list &lt;- map(all_contraints,~map_lgl(unlist(ex_default(.x, pattern = &quot;selected\\\\s*\\\\([^\\\\)]*\\\\)&quot;)),check_answer_in_list)) map2(rs_list,seq_along(rs_list), ~ if(length(which(!.x))!=0) { return(unlist(ex_default(all_contraints[.y], pattern = &quot;selected\\\\s*\\\\([^\\\\)]*\\\\)&quot;))[which(!.x)]) } ) %&gt;% unlist() %&gt;% unique() } Call this function by passing the questionnaire and choices and the output will be the list of wrong constraints of type (selected(question_name,question_answer)) if any. An error means that the answer does not exist in the choices sheet check_constraints(questions,choices) ## [1] &quot;selected(${b10_hohh_vulnerability}, &#39;older_person_60plus&#39;)&quot; 4.2 Sampling 4.2.1 Simple Random sampling 4.2.2 Stratified Random sampling 4.2.3 Cluster sampling 4.2.4 2 stages random sampling 4.2.5 Sample distribution usin population raster 4.2.6 Generation of random sample points It is quite common practice to select survey locations before data collection, using randomly distributed points. In this case, the enumerator finds the location of a certain sample point using mobile device navigation tools and conducts an interview near that location. That practice ensures that all survey locations were selected in a random manner. First, let’s join our sampling frame (in this case it was generated with Probability sampling tool) to the settlement polygons and generate a random set of points within each polygon. We will use settlement polygons but it’s possible to use rectangle or hexagon fishnet with interview numbers distributed using population raster to obtain sample size that will correspond with settlement population density. ADM4 &lt;- st_read(dsn = &quot;inputs/MSNA20_ADM4.geojson&quot;) ## Reading layer `MSNA20_ADM4&#39; from data source ## `C:\\Users\\Yann SAY\\Desktop\\git\\rcookbook\\inputs\\MSNA20_ADM4.geojson&#39; ## using driver `GeoJSON&#39; ## Simple feature collection with 335 features and 6 fields ## Geometry type: MULTIPOLYGON ## Dimension: XY ## Bounding box: xmin: 37.24611 ymin: 47.02683 xmax: 39.73611 ymax: 48.98579 ## Geodetic CRS: WGS 84 sampling_frame &lt;- read.csv(&quot;inputs/sampling_frame20200701-132150.csv&quot;) ADM4_for_sample &lt;- ADM4 %&gt;% right_join(sampling_frame, by = c(&quot;adm4Pcd&quot; = &quot;adm4Pcode&quot;)) sample_all_pnt &lt;- st_sample(ADM4_for_sample, rep(ADM4_for_sample$Survey, nrow(ADM4_for_sample)))%&gt;% st_as_sf Now we would need to transfer attributes from the settlement layer to our random points. #first we should generate indexes that will be used for this transfer index &lt;- rep(seq_along(ADM4_for_sample$Survey), ADM4_for_sample$Survey) #now we should add indexes to the settlement layer and then join this layer to the random points ADM4_for_sample &lt;- ADM4_for_sample %&gt;% st_drop_geometry()%&gt;% as.data.frame(row.names = 1:nrow(.))%&gt;% tibble::rownames_to_column(var = &quot;index&quot;)%&gt;% mutate_at(1, as.numeric) sample_all_pnt &lt;- st_coordinates(sample_all_pnt)%&gt;% as.data.frame()%&gt;% bind_cols(index)%&gt;% set_colnames(c(&quot;Longitude_pnt&quot;,&quot;Latitude_pnt&quot;,&quot;index&quot;))%&gt;% left_join(ADM4_for_sample, by = &quot;index&quot;) #with the code below we will get the unique id for each point that will have a settlement name and point number sample_all_pnt$GPS_id &lt;- paste(sample_all_pnt$adm4NmL, data.table::rowid(sample_all_pnt$adm4NmL), sep = &quot;_&quot;) sample_all_pnt &lt;- st_as_sf(x = sample_all_pnt, coords = c(&quot;Longitude_pnt&quot;, &quot;Latitude_pnt&quot;), crs = &quot;+proj=longlat +datum=WGS84&quot;) #and now we can visualize our random points for some settlement to check their distribution sample_all_pnt %&gt;% filter(adm4NmL == &quot;Bakhmut&quot;)%&gt;% select(adm4NmL)%&gt;% plot() The last step will be to export the sample points into any suitable GIS format (GeoJSON, Shapefile, KML, etc.) and transfer that file to the mobile devices of the enumerators. #check if there are directory for the outputs and write there output geojson file if(!dir.exists(&quot;outputs&quot;)) { dir.create(&quot;outputs&quot;) } st_write(sample_all_pnt, &quot;outputs/sample_points.geojson&quot;, delete_dsn = TRUE) ## Deleting source `outputs/sample_points.geojson&#39; using driver `GeoJSON&#39; ## Writing layer `sample_points&#39; to data source ## `outputs/sample_points.geojson&#39; using driver `GeoJSON&#39; ## Writing 1610 features with 25 fields and geometry type Point. "],["data-collection-and-processing.html", "5 Data Collection and Processing 5.1 Testing the tool 5.2 Download data 5.3 Data collection follow-up 5.4 Data falsification 5.5 Data checks 5.6 cleaninginspectoR - inspect_all 5.7 Data cleaning 5.8 Data cleaning - miscellaneous 5.9 Spatial verification checks", " 5 Data Collection and Processing library(magrittr) library(dplyr) library(kableExtra) library(readxl) library(sjmisc) library(purrr) library(tidyr) library(sf) library(nngeo) main_dataset &lt;- read.csv(&quot;inputs/UKR2007_MSNA20_HH_dataset_main_rcop.csv&quot;, na.strings = &quot;&quot;, stringsAsFactors = F) questions &lt;- read_xlsx(&quot;inputs/UKR2007_MSNA20_HH_Questionnaire_24JUL2020.xlsx&quot;,sheet=&quot;survey&quot;) choices &lt;- read_xlsx(&quot;inputs/UKR2007_MSNA20_HH_Questionnaire_24JUL2020.xlsx&quot;,sheet=&quot;choices&quot;) #** un-comment those if you need them to be installed # devtools::install_github(&quot;https://github.com/impact-initiatives/xlsformfill/&quot;) # devtools::install_github(&quot;https://github.com/impact-initiatives/cleaninginspectoR/&quot;) Notes on cleaninginspectoR: The function will return a dataframe with indexes not the uuid. cleanninginspectoR uses function from the magrittr and dplyr packages. Don’t forget to load them before using it. 5.1 Testing the tool 5.1.1 Creating dummy data xlsformfill has a function xlsform_fill that will create dataset based on your KOBO questionnaire. It takes 3 arguments: your questions, your choices and how many rows you want. Notes: - All questions will be filled. - Skip logic are not implemented. - Constraints are not implemented. - Integers and text will be generated randomly dummy_dataset &lt;- xlsformfill::xlsform_fill(questions = questions, choices = choices, n = 300) dummy_dataset %&gt;% head(10) start end deviceid enum_office_city enum_id a1_informed_consent a2_hh_representative_name a3_consent_to_follow_up_calls a3_1_phone a4_are_you_hohh a5_respond_behalf_hh b4_gender b5_age b7_hohh_age b8_hohh_sex b9_hohh_marital_status b10_hohh_vulnerability b10_hohh_vulnerability/no b10_hohh_vulnerability/older_person b10_hohh_vulnerability/disability_not_including_chronic_illness b10_hohh_vulnerability/unemployed b10_hohh_vulnerability/veteran_of_war_ato b10_hohh_vulnerability/single_parent b10_hohh_vulnerability/family_with_3_or_more_children b10_hohh_vulnerability/family_with_foster_children b10_hohh_vulnerability/chronic_illness b10_hohh_vulnerability/other_specify b10_1_hohh_vulnerability_other b11_hohh_chronic_illness b11_hohh_chronic_illness/blood_pressure_diseases b11_hohh_chronic_illness/cardiovascular_disease b11_hohh_chronic_illness/diabetes_need_insulin b11_hohh_chronic_illness/diabetes_does_not_need_insulin b11_hohh_chronic_illness/chronic_respiratory_condition b11_hohh_chronic_illness/musculoskeletal_system_and_joints b11_hohh_chronic_illness/cancer b11_hohh_chronic_illness/neurological b11_hohh_chronic_illness/sensory_disorder b11_hohh_chronic_illness/gastrointestinal_digestive_tract_incl_liver_gallbladder_pancreas_diseases b11_hohh_chronic_illness/genitourinary_system_diseases b11_hohh_chronic_illness/endocrine_system_thyroid_gland_and_other_diseases b11_hohh_chronic_illness/other_specify b11_1_hohh_chronic_illness_other b12_situation_description b12_1_situation_description_other b13_why_hohh_unemployed b13_1_why_hohh_unemployed_other b14_sector_hohh_employed b14_1_sector_hohh_employed_other b15_hohh_income b16_hohh_pension_eligible b17_hohh_pension_receive b18_hohh_benefit_eligible b19_hohh_benefit_receive b20_hohh_level_education hohh_age_18 age_18 b21_num_additional_hh_members c1_hh_memb_age age_5_18 age_5_12 age_13_15 age_16_18 c2_hh_memb_sex c3_hh_member_description c4_hh_member_description_other c5_hh_memb_income age_5_18_number age_5_12_number age_13_15_number age_16_18_number d1_hh_displacement_status d2_year_first_displaced d2_1_year_first_displaced_other e1_shelter_type e1_1_shelter_type_other e2_home_type e2_1_home_type_other e3_shelter_enclosure_issues e3_shelter_enclosure_issues/no_issues e3_shelter_enclosure_issues/lack_of_insulation_from_cold e3_shelter_enclosure_issues/leaks_during_light_rain_snow e3_shelter_enclosure_issues/leaks_during_heavy_rain_snow e3_shelter_enclosure_issues/limited_ventilation_less_than_05m2_ventilation_in_each_room_including_kitchen e3_shelter_enclosure_issues/presence_of_dirt_or_debris_removable e3_shelter_enclosure_issues/presence_of_dirt_or_debris_nonremovable e3_shelter_enclosure_issues/none_of_the_above e3_shelter_enclosure_issues/other_specify e3_shelter_enclosure_issues/dont_know e3_1_shelter_enclosure_issues_other e4_damaged_accomodation e4_damaged_accomodation/none e4_damaged_accomodation/opening_or_cracks_in_roof e4_damaged_accomodation/roof_partially_collapsed e4_damaged_accomodation/broken_or_cracked_windows e4_damaged_accomodation/exterior_doors_broken_unable_to_shut_properly e4_damaged_accomodation/exterior_doors_or_windows_missing e4_damaged_accomodation/large_cracks_openings_in_most_walls e4_damaged_accomodation/some_cracks_in_some_walls e4_damaged_accomodation/some_walls_fully_collapsed e4_damaged_accomodation/damaged_floors e4_damaged_accomodation/severe_structural_damage_and_unsafe_for_living e4_damaged_accomodation/total_structural_collapse e4_damaged_accomodation/foundation_damaged_or_shifted e4_damaged_accomodation/gas_water_or_sewage_system_damaged e4_damaged_accomodation/electricity_supply_line_damaged_and_not_functional e4_damaged_accomodation/other_specify_none_of_the_above e4_damaged_accomodation/dont_know_prefer_not_to_say e4_1_damaged_accomodation_other e5_damaged_accomodation_severity e6_ownership_documents e7_rent_agreement e8_ownership_documents_name e9_cost_of_month_rent e9_1_hh_have_ability_to_pay_rent e10_gpc_eviction_risk e11_items_do_not_have_per_hh e11_items_do_not_have_per_hh/refigerator e11_items_do_not_have_per_hh/functional_stove e11_items_do_not_have_per_hh/functional_heater_movable e11_items_do_not_have_per_hh/hh_has_all_items e12_items_not_every_hh_member e12_items_not_every_hh_member/mattress e12_items_not_every_hh_member/bedsheets e12_items_not_every_hh_member/towel e12_items_not_every_hh_member/blanket e12_items_not_every_hh_member/winter_jacket e12_items_not_every_hh_member/warm_winter_boots e12_items_not_every_hh_member/thick_socks e12_items_not_every_hh_member/warm_gloves e12_items_not_every_hh_member/warm_scarf e12_items_not_every_hh_member/thermal_underwear e12_items_not_every_hh_member/adult_warm_clothing e12_items_not_every_hh_member/child_warm_clothing e12_items_not_every_hh_member/each_member_has_all_items e13_need_but_do_not_have e13_need_but_do_not_have/adult_diapers e13_need_but_do_not_have/child_diapers e13_need_but_do_not_have/sanitary_pads e13_need_but_do_not_have/none_needed f1_utility_services_used f1_utility_services_used/central_heating f1_utility_services_used/centralised_piped_hot_water_supply f1_utility_services_used/centralised_piped_cold_water_supply f1_utility_services_used/electricity f1_utility_services_used/gas f1_utility_services_used/none f2_spend_on_utilities f2_1_why_if_spend_on_utilities_0 f3_spend_on_heating f3_1_if_0_for_heating f4_type_fuel_heating f4_type_fuel_heating/central_heating f4_type_fuel_heating/electricity f4_type_fuel_heating/gas f4_type_fuel_heating/kerosene f4_type_fuel_heating/wood f4_type_fuel_heating/coal f4_type_fuel_heating/briquettes_not_coal f4_type_fuel_heating/briquettes_coal f4_type_fuel_heating/other_specify f4_2_type_fuel_heating_other f5_type_fuel_heating_amount f6_how_many_wood_hh_consumed_last_winter f7_how_many_briquettes_hh_consumed_last_winter f7_1_how_many_briquettes_coal_hh_consumed_last_winter f8_do_you_receive_state_subsidies_for_utilities_gas f9_electricity_shortages f10_gas_shortages f11_dinking_water_source f11_1_dinking_water_source_other f12_drinking_water_treat f12_drinking_water_treat/do_not_process_purify f12_drinking_water_treat/cleaning_with_chemicals_chlorination f12_drinking_water_treat/water_precipitation f12_drinking_water_treat/filtering_the_water_pitcher_filter f12_drinking_water_treat/filtering_the_water_reverse_osmosis_filter f12_drinking_water_treat/boiling f12_drinking_water_treat/percolation f12_drinking_water_treat/other_specify f12_drinking_water_treat/dont_know_ns f12_drinking_water_treat/refuse_to_answer f12_1_drinking_water_treat_other f13_treatment_whynot f13_1_treatment_whynot_other f14_technical_water_source f14_1_technical_water_source_other f15_water_shortages f16_duration_water_shortages f17_store_drinking_water f17_store_drinking_water/do_not_store_water f17_store_drinking_water/plastic_bottles f17_store_drinking_water/glass_bottles f17_store_drinking_water/a_bucket_with_a_lid f17_store_drinking_water/a_bucket_without_a_lid f17_store_drinking_water/a_canister f17_store_drinking_water/a_barrel_tank f17_store_drinking_water/we_fill_in_the_bathtub f17_store_drinking_water/other_specify f17_store_drinking_water/dont_know_ns f17_store_drinking_water/refuse_to_answer f17_1_store_drinking_water_other f18_water_sufficient f18_water_sufficient/drinking f18_water_sufficient/cooking f18_water_sufficient/personal_hygiene f18_water_sufficient/other_domestic_purposes f18_water_sufficient/none_of_the_previous f18_water_sufficient/dont_know_ns f19_type_toilets f19_1_type_toilets_other f20_problms_pump_sewage f21_method_garbage_dispose g1_cereals_consumption g2_roots_consumption g3_vegetables_consumption g4_fruits_consumption g5_meat_consumption g6_eggs_consumption g7_pulses_consumption g8_dairy_consumption g9_oil_consumption g10_sugar_consumption g11_condiments_consumption h1_nofood_noresources h1_1_how_often_nofood_noresources h2_sleep_hungry h2_1_how_often_sleep_hungry h3_day_and_night_hungry h3_1_how_often_day_and_night_hungry i1_coping_strategies i2_spent_savings i3_borrowed_food i4_live_another_family i5_sold_assets i6_removed_children_from_school_kindergarten i7_reduced_health_care i8_reduced_education i9_sold_house i10_hh_migrated i11_moved_for_work i12_risk_job j1_edu_facility_hh_access j1_edu_facility_hh_access/none j1_edu_facility_hh_access/kindergarten j1_edu_facility_hh_access/school j1_edu_facility_hh_access/boarding_school j1_edu_facility_hh_access/specialized_school_for_children_with_disabilities j1_edu_facility_hh_access/vocational_school j1_1_edu_facility_not_access_why j1_1_edu_facility_not_access_why/school_too_far_and_no_transport j1_1_edu_facility_not_access_why/cannot_afford_supplies j1_1_edu_facility_not_access_why/children_at_home_as_carer j1_1_edu_facility_not_access_why/children_working_at_home j1_1_edu_facility_not_access_why/children_in_paid_employment j1_1_edu_facility_not_access_why/children_has_disability_that_school_does_not_have_infrastructure_for j1_1_edu_facility_not_access_why/other_specify j1_2_other_edu_facility_not_access_why j2_precovid_number_children_school j2_1_boys_5_12_precovid_attend j2_2_girls_5_12_precovid_attend j2_3_boys_13_15_precovid_attend j2_4_girls_13_15_precovid_attend j2_5_boys_16_18_precovid_attend j2_6_girls_16_18_precovid_attend j3_precovid_number_children_dropped j3_1_boys_5_12_precovid_dropped j3_2_girls_5_12_precovid_dropped j3_3_boys_13_15_precovid_dropped j3_4_girls_13_15_precovid_dropped j3_5_boys_16_18_precovid_dropped j3_6_girls_16_18_precovid_dropped j4_number_children_follow_curriculum j4_1_boys_5_12_follow_curriculum j4_2_girls_5_12_follow_curriculum j4_3_boys_13_15_follow_curriculum j4_4_girls_13_15_follow_curriculum j4_5_boys_16_18_follow_curriculum j4_6_girls_16_18_follow_curriculum j5_unable_attend_school_more_than_month j5_1_boys_5_12_unable_attend_school_more_than_month j5_2_girls_5_12_unable_attend_school_more_than_month j5_3_boys_13_15_unable_attend_school_more_than_month j5_4_girls_13_15_unable_attend_school_more_than_month j5_5_boys_16_18_unable_attend_school_more_than_month j5_6_girls_16_18_unable_attend_school_more_than_month j6_reason_gap_education j6_reason_gap_education/school_closed_due_to_security j6_reason_gap_education/school_closed_other j6_reason_gap_education/insufficient_teachers j6_reason_gap_education/security_concerns_by_parent j6_reason_gap_education/school_is_damaged j6_reason_gap_education/health_issues j6_reason_gap_education/family_personal_reasons j6_reason_gap_education/too_expensive_school_fees_supplies_transport_etc j6_reason_gap_education/transport_unavavailable j6_reason_gap_education/a_child_contributes_to_hh_income j6_reason_gap_education/other_specify j6_reason_gap_education/refuse_to_answer j6_1_reason_gap_education_other j7_gap_education_length j8_problems_school j8_problems_school/no_problems j8_problems_school/distance_to_school j8_problems_school/quality_of_teaching_staff j8_problems_school/quantity_of_teaching_staff j8_problems_school/lack_of_pss j8_problems_school/price_for_service j8_problems_school/conditions_of_the_venue j8_problems_school/overcrowded_classrooms j8_problems_school/lack_of_medical_support j8_problems_school/school_is_unsafe j8_problems_school/problems_with_distance_learning_due_to_closure_of_school_for_covid_eg_bad_internet_connection j8_problems_school/other_specify j8_1_problems_school_other j9_education_security_concerns_childs_commute_to_school j9_education_security_concerns_childs_commute_to_school/none j9_education_security_concerns_childs_commute_to_school/uxos j9_education_security_concerns_childs_commute_to_school/shelling j9_education_security_concerns_childs_commute_to_school/shooting j9_education_security_concerns_childs_commute_to_school/military_presence j9_education_security_concerns_childs_commute_to_school/danger_at_checkpoints j9_education_security_concerns_childs_commute_to_school/wildanimals_stray_dogs j9_education_security_concerns_childs_commute_to_school/other_specify j9_1_education_security_concerns_childs_commute_to_school_other j10_education_security_concerns_in_the_vicinity_of_facility j10_education_security_concerns_in_the_vicinity_of_facility/none j10_education_security_concerns_in_the_vicinity_of_facility/uxos_on_school_grounds j10_education_security_concerns_in_the_vicinity_of_facility/shelling_in_the_vicinity_of_the_school j10_education_security_concerns_in_the_vicinity_of_facility/shooting_in_the_vicinity_of_the_school j10_education_security_concerns_in_the_vicinity_of_facility/military_presence_inside_of_schools j10_education_security_concerns_in_the_vicinity_of_facility/military_presence_in_the_vicinity_of_schools j10_education_security_concerns_in_the_vicinity_of_facility/other_specify j10_1_education_security_concerns_in_the_vicinity_of_facility_other j11_school_supplies_affordable j12_children_under18_absent j12_1_number_children_under18_absent j12_2_why l1_specialist_care_available l1_specialist_care_available/obstetricgynaecological l1_specialist_care_available/paediatrics l1_specialist_care_available/gastroentrology l1_specialist_care_available/mental_health_care l1_specialist_care_available/ear_nose_throat_ent l1_specialist_care_available/ambulance l1_specialist_care_available/inpatient_facility l1_specialist_care_available/outpatient_care l1_specialist_care_available/laboratory l1_specialist_care_available/x_ray l1_specialist_care_available/ultrasound l1_specialist_care_available/chest_photofluorography l1_specialist_care_available/post_trauma_rehabilitation l1_specialist_care_available/dont_know_ns l1_specialist_care_available/none_of_listed l2_HH_access_healthcare l3_difficult_access_health l4_which_difficult_access_health l4_which_difficult_access_health/lack_of_facilities l4_which_difficult_access_health/cost_of_medicine l4_which_difficult_access_health/distance_to_facility l4_which_difficult_access_health/cost_of_travel_to_facility l4_which_difficult_access_health/lack_of_documents l4_which_difficult_access_health/security_problems_in_travelling_to_facility l4_which_difficult_access_health/cost_of_appointment l4_which_difficult_access_health/lack_of_referral_system l4_which_difficult_access_health/have_to_pass_through_entry_exit_checkpoint_for_medical_facility_in_the_ngca l4_which_difficult_access_health/irregular_presence_of_doctors l4_which_difficult_access_health/required_a_covid_test_prior_to_treatment l4_which_difficult_access_health/unable_to_leave_the_house_due_to_covid19 l4_which_difficult_access_health/other_specify l4_which_difficult_access_health/lack_of_doctors l4_which_difficult_access_health/insufficient_qualifications_of_doctors l4_which_difficult_access_health/long_queues l4_1_which_difficult_access_health_other l5_state_medication_aware l6_state_medication_received l7_pss l8_trauma_rehab l9_time_walk_health_facility m1_probl_food_market_access m2_probl3_food_market_access m2_probl3_food_market_access/no_problems m2_probl3_food_market_access/opening_hours_insufficient m2_probl3_food_market_access/items_not_available m2_probl3_food_market_access/items_too_expensive m2_probl3_food_market_access/items_poor_quality m2_probl3_food_market_access/market_damaged m2_probl3_food_market_access/distance m2_probl3_food_market_access/security m2_probl3_food_market_access/other_specify m2_1_probl3_food_market_access_other m3_items_too_expensive m3_items_too_expensive/cereals_grains_bread_pasta m3_items_too_expensive/roots_and_tubers_potato_onion_beet m3_items_too_expensive/vegetables_and_leaves_tomato_lettuce_spinach_carrot m3_items_too_expensive/fruits_apple_orange_strawberry m3_items_too_expensive/meat_or_fish_chicken_pork_beef_fish m3_items_too_expensive/eggs m3_items_too_expensive/pulses_nuts_seeds_lentils_beans_nuts m3_items_too_expensive/dairy_products m3_items_too_expensive/oil_and_fat_salo_butter_sunflower_oil m3_items_too_expensive/sugar_or_sweets_cakes_chocolate_sugary_cold_drinks m3_items_too_expensive/condiments_and_spices_tea_coffee_spices m3_items_too_expensive/other_specify m3_1_other n1_HH_total_expenditure n2_spend_on_food n3_in_debt n4_spend_debt n4_1_if_0_for_debt n5_current_debt_of_hh n6_hhmember_security_incident_30days n7_gpc_docs_passport n8_HHmembers_ID_missing n9_gpc_docs_passport_obtain n10_gpc_docs_birthcert n11_birth_certificates_issued n12_HHmembers_birth_certificate_missing n13_gpc_docs_birthcert_obtain n14_docs_legal_assistance_needed n15_legal_assistance_needed n16_gpc_access_justice n17_community_affectedby_mines n18_aware_mine_incident n19_extent_mines_affect n20_mines_affect_reason n20_mines_affect_reason/fear_for_physical_safety n20_mines_affect_reason/movement_and_access_constraints n20_mines_affect_reason/psychological_safety n20_mines_affect_reason/has_affected_hh_budget n20_mines_affect_reason/other_specify n20_1_mines_affect_reason_other n21_ewr_report n21_ewr_report/administration_head_of_the_village) n21_ewr_report/state_emergency_services n21_ewr_report/mine_clearance_ngo n21_ewr_report/police n21_ewr_report/army n21_ewr_report/to_relatives n21_ewr_report/other_specify n21_ewr_report/dont_know_ns n21_1_ewr_report_other o1_restrictions_impact_hh o1_restrictions_impact_hh/diminished_lost_source_of_income o1_restrictions_impact_hh/limited_access_to_food o1_restrictions_impact_hh/loss_of_or_severely_diminished_access_to_basic_services o1_restrictions_impact_hh/loss_of_or_diminished_access_to_education o1_restrictions_impact_hh/loss_of_or_diminished_access_to_clean_water_and_sanitation o1_restrictions_impact_hh/sickness_of_household_members o1_restrictions_impact_hh/death_of_household_members o1_restrictions_impact_hh/other_specify o1_restrictions_impact_hh/no_covid19_impacts_on_my_household o1_restrictions_impact_hh/restriction_in_movement o1_restrictions_impact_hh/breaking_up_with_family_or_relatives o1_restrictions_impact_hh/psychological_deterioration o1_1_restrictions_impact_hh_other o2_hh_action_prevent_covid o2_hh_action_prevent_covid/no_no_action_taken_cannot_select_with_any_other_option o2_hh_action_prevent_covid/not_leaving_the_house_at_all o2_hh_action_prevent_covid/reducing_movement_outside_the_house o2_hh_action_prevent_covid/stopping_handshakes_or_physical_contact o2_hh_action_prevent_covid/keeping_distance_from_people o2_hh_action_prevent_covid/avoiding_public_places_and_gatherings o2_hh_action_prevent_covid/avoiding_public_transport o2_hh_action_prevent_covid/wearing_a_face_mask o2_hh_action_prevent_covid/wearing_gloves o2_hh_action_prevent_covid/washing_hands_more_regularly o2_hh_action_prevent_covid/keeping_surfaces_clean o2_hh_action_prevent_covid/praying_to_god o2_hh_action_prevent_covid/staying_away_from_animals o2_hh_action_prevent_covid/other_specify o2_hh_action_prevent_covid/dont_know o2_1_hh_action_prevent_covid_other o3_hh_activity_member_ill_or_deceased o5_treatment_member_of_household_was_ill_or_deceased o6_pay_for_health_care_at_clinic o7_going_into_debt_to_pay_at_clinic o8_seeking_community_support_to_pay_at_clinic o9_free_healthcare_service o10_home_treatment_due_to_lack_of_money o11_home_treatment_due_to_fear_of_contracting_covid o12_home_treatment_due_to_inaccessibility_of_treatment_other_than_covid o13_home_treatment_due_to_fear_if_tested_positive_for_covid o14_home_treatment_for_other_reasons o15_seeking_cheaper_health_care p1_informed_availability p2_informed_rights p3_informed_registration p4_informed_behaviour p5_priority_needs p5_priority_needs/shelter_housing p5_priority_needs/food p5_priority_needs/healthcare p5_priority_needs/seeds_or_other_agricultural_inputs p5_priority_needs/livelihoods_support_employment p5_priority_needs/drinking_water p5_priority_needs/hygiene_nfis_eg_soap_sanitary_pads_and_sanitation_services_eg_latrines p5_priority_needs/need_to_repay_debt p5_priority_needs/education_for_children_under_18 p5_priority_needs/psychosocial_support p5_priority_needs/fuel_for_heating p5_priority_needs/none p5_priority_needs/other_specify p5_priority_needs/house_repairs p5_1_priority_needs_other p6_HH_received_aid_12_months p7_hh_received_aid_30_days p8_satisfaction_sufficiency p9_satisfaction_behaviour p10_complaint_system p11_needs_consulted p12_type_information p12_type_information/dont_want_to_get_information p12_type_information/how_to_register_for_aid p12_type_information/how_to_get_water p12_type_information/how_to_get_food p12_type_information/how_to_get_shelter_accomodation_shelter_materials p12_type_information/how_to_get_healthcare_medical_attention p12_type_information/how_to_get_help_after_attack_or_harassment p12_type_information/how_to_stay_safe_to_prevent_attack_harassment p12_type_information/how_to_access_education p12_type_information/how_to_find_work p12_type_information/how_to_provide_feedback_on_aid_you_are_receiving p12_type_information/other p12_1_type_information_other p13_information_source p13_1_information_source_other p14_preferred_means_information p14_1_preferred_means_information_other p15_delivery_mode_type p15_delivery_mode_type/do_not_want_to_receive_humanitarian_assistance p15_delivery_mode_type/inkind_food p15_delivery_mode_type/inkind_nfis p15_delivery_mode_type/physical_cash p15_delivery_mode_type/cash_via_bank_transfer p15_delivery_mode_type/cash_via_prepaid_cards p15_delivery_mode_type/cash_via_mobile_money p15_delivery_mode_type/vouchers p15_delivery_mode_type/services_eg_healthcare_education_etc p15_delivery_mode_type/other_please_specify p15_delivery_mode_type/dont_know p15_delivery_mode_type/prefer_not_to_answer p15_delivery_mode_type/fuel_for_heating p15_delivery_mode_type/construction_materials p15_1_delivery_mode_type_other p16_soap_household p17_follow_up q1_comments_enumerators r1_current_oblast r2_current_raion r3_current_settlement r4_current_rectangle_id r5_gps_work uuid 2022-12-20T12:52:32+0100 2022-12-20T12:59:54+0100 deviceID00000001 mariupol siev_012 no CvoHpsMAYRiswXdjOpJHFKNjteGnNfwEzpdUPPNxgSFrmVUFpkMichWExFqSgLd cgogcOqRefFq yes RCPBLQWzwclCqDNxwwgnLGmHuxEtDEtCz IKEYsqXvGOPVFVwpdvBXihkwSFYAKeoIiyUZUy yes yes female 21 23 male unmarried_but_living_together single_parent family_with_foster_children other_specify FALSE FALSE FALSE FALSE FALSE TRUE FALSE TRUE FALSE TRUE NnzdJqmr VcJlVmduVnkFScIVzhQUNoVwsyUYjcCAadIIvkmqRlvWIEonlXvqXkorASCeaopDXXCfMqDQXYHfk blood_pressure_diseases diabetes_does_not_need_insulin musculoskeletal_system_and_joints cancer sensory_disorder genitourinary_system_diseases endocrine_system_thyroid_gland_and_other_diseases other_specify TRUE FALSE FALSE TRUE FALSE TRUE TRUE FALSE TRUE FALSE TRUE TRUE TRUE dSzVPEdDPwOKtvFzqNtFGoWFTBBlUgUjJyGzFkdVuccdGpjwmmwFrZfpBuMtOHAko lLKXfBgnWxrWhonjB unemployed_looking_for MrMrfwPvYcvMKbTTBOxmbVfghGD closing_the_enterprise tgSV industry HHMULLrYwgLulUOklujMWkLrSpUgOoJGeQONhRWhinIhbrRnfRnUqYhClPmXxKBlLQEpMJb 22 dont_know_ns refuse_to_answer yes yes preschool 0 0 24 21 0 0 0 0 male permanently_sick_or_disabled_cant_work acGqXzlXMIdVGzJPdcCSNQwaFcdEnxQ 17 0 0 0 0 partially_displaced_and_dont_have_idp_status 2019 VurTxsYCkZakfBDFDXXPZ makeshift_shelter KZCTTcsZupsc bEEgxyIJLAamETrHvKlxQRqbVXWkEJObacuiZyKPVsRrhawlBaQeAzwLlItuuJetaqsr c dormitory zxJuqtAOo uahITxqYyippLiCxktlUROQArIHhPVDfjZkBHbbSjqzbXKlbXbWyMGYzpUEWLMrkwuqy yNMxvixKINJQDOCUBXly no_issues leaks_during_light_rain_snow other_specify dont_know TRUE FALSE TRUE FALSE FALSE FALSE FALSE FALSE TRUE TRUE IaAayingPTPXTlkmcxgfEcf b IcdmNCnqmvtLkNwHuEJdCSEaVxbXhHdFKLjcLocUHBQxpQrmKqxlFJZwAgmW roof_partially_collapsed broken_or_cracked_windows exterior_doors_broken_unable_to_shut_properly large_cracks_openings_in_most_walls some_cracks_in_some_walls severe_structural_damage_and_unsafe_for_living gas_water_or_sewage_system_damaged electricity_supply_line_damaged_and_not_functional FALSE FALSE TRUE TRUE TRUE FALSE TRUE TRUE FALSE FALSE TRUE FALSE FALSE TRUE TRUE FALSE FALSE afmATXONNgqNpjGYAPzMjRxcMStQguwobhqbjsAjlfDFHwbwZNiMUKYOvzIHnLwutkW no dont_know_ns no yes 19 no no functional_stove functional_heater_movable FALSE TRUE TRUE FALSE thick_socks warm_scarf thermal_underwear child_warm_clothing each_member_has_all_items FALSE FALSE FALSE FALSE FALSE FALSE TRUE FALSE TRUE TRUE FALSE TRUE TRUE adult_diapers child_diapers none_needed TRUE TRUE FALSE TRUE centralised_piped_hot_water_supply electricity FALSE TRUE FALSE TRUE FALSE FALSE 20 VjtgL 20 OdUonxEWObPqaG UXKsVNII central_heating kerosene briquettes_not_coal other_specify TRUE FALSE FALSE TRUE FALSE FALSE TRUE FALSE TRUE xvmKRnDstlkIxdOcSLFCdFwvCTdrSxlLAPRvoykYGVFFCZANUZrNjJDJ gjBmUKSNwZtGDmYJlVQLLkMIXJwICX 20.32204 21.75730 19.82959 16.52088 yes yes_weekly_min_once_per_week no_shortages trucked_in_water_truck_with_a_tank_etc nWohQJA anxTLdlvDkJQoeJKkCXSlpSTrkLLNJLRuPaNJFjrUektD RjZiQ water_precipitation percolation dont_know_ns FALSE FALSE TRUE FALSE FALSE FALSE TRUE FALSE TRUE FALSE EkWrrlFeklYSCROCh XpBxlRzUVpixYqxPdsBIRZvMmvpSjQHGjYQKyXBFZaM UjYZDwwJwUFwrlIa no_need QfIXJBxM FtNUGknJkYlsbMCbltyJlgdGHfBmbatZAjvrFAYNd EuhkgCpsDJTtvbnBNPkGei tap_water_centralized_water_supply_appropriate_for_drinking BJYqcbrXhQVkroklsKbSjVKTJP 1_time_a_week 19 plastic_bottles glass_bottles a_bucket_with_a_lid a_canister we_fill_in_the_bathtub other_specify dont_know_ns FALSE TRUE TRUE TRUE FALSE TRUE FALSE TRUE TRUE TRUE FALSE yPSnGv iIXeEUJRJCCRAODHCwYfeSzMPrlPtndvVqUtnVFih cooking none_of_the_previous FALSE TRUE FALSE FALSE TRUE FALSE pit_latrine_without_a_slab_or_platform yMTgnbiDthswh IsjyABFVVCjYQcMtX QydUw not_applicable we_sort_garbage_and_submit_it_for_recycling 4 5 0 3 0 1 0 1 3 6 1 1_yes 1_rarely_1_2 0_no 2_sometimes_3_10 0_no 3_often_10plus_times yes no_was_not_needed yes yes no_already_done_so_cant_do_it_anymore no_but_needed yes no_was_not_needed no_already_done_so_cant_do_it_anymore no_already_done_so_cant_do_it_anymore no_but_needed no_already_done_so_cant_do_it_anymore none kindergarten specialized_school_for_children_with_disabilities vocational_school TRUE TRUE FALSE FALSE TRUE TRUE children_at_home_as_carer children_working_at_home children_has_disability_that_school_does_not_have_infrastructure_for FALSE FALSE TRUE TRUE FALSE TRUE FALSE CJWVNgsXEIHEyzZLqSLPAcVtkuoRuWXfOwxjwHcgbwhypmzNrgNNuS 25 21 18 19 20 23 23 19 21 22 21 22 22 16 20 20 21 22 17 20 18 dont_know_ns 18 20 20 21 21 18 school_closed_due_to_security health_issues family_personal_reasons other_specify TRUE FALSE FALSE FALSE FALSE TRUE TRUE FALSE FALSE FALSE TRUE FALSE NMWcUyGHlc 1_2_months no_problems distance_to_school quality_of_teaching_staff lack_of_pss conditions_of_the_venue lack_of_medical_support school_is_unsafe problems_with_distance_learning_due_to_closure_of_school_for_covid_eg_bad_internet_connection TRUE TRUE TRUE FALSE TRUE FALSE TRUE FALSE TRUE TRUE TRUE FALSE cFMBeXNaHvKmpazyOznJZemhoBykspI uINlLpTMKAThCrgKlfhaIsS none shooting military_presence wildanimals_stray_dogs TRUE FALSE FALSE TRUE TRUE FALSE TRUE FALSE EYfvyUj uxos_on_school_grounds shelling_in_the_vicinity_of_the_school shooting_in_the_vicinity_of_the_school military_presence_inside_of_schools military_presence_in_the_vicinity_of_schools FALSE TRUE TRUE TRUE TRUE TRUE FALSE YJPEyjtfSviCyxOchKKF sWfMXQppNejEJpdoDrezdDh yes no 22 xqFAM gastroentrology mental_health_care ear_nose_throat_ent ambulance inpatient_facility outpatient_care x_ray ultrasound post_trauma_rehabilitation dont_know_ns FALSE FALSE TRUE TRUE TRUE TRUE TRUE TRUE FALSE TRUE TRUE FALSE TRUE TRUE FALSE refuse_to_answer dont_know_ns lack_of_documents security_problems_in_travelling_to_facility cost_of_appointment have_to_pass_through_entry_exit_checkpoint_for_medical_facility_in_the_ngca irregular_presence_of_doctors required_a_covid_test_prior_to_treatment unable_to_leave_the_house_due_to_covid19 lack_of_doctors insufficient_qualifications_of_doctors long_queues FALSE FALSE FALSE FALSE TRUE TRUE TRUE FALSE TRUE TRUE TRUE TRUE FALSE TRUE TRUE TRUE zdmyHarYbBKrkvkx g dont_know refuse_to_answer dont_know_ns dont_know_ns more_than_3h no no_problems opening_hours_insufficient items_not_available items_poor_quality security other_specify TRUE TRUE TRUE FALSE TRUE FALSE FALSE TRUE TRUE SkmxjOMVxavnIdqoclVOvabwQTzPQpdrTkL roots_and_tubers_potato_onion_beet vegetables_and_leaves_tomato_lettuce_spinach_carrot meat_or_fish_chicken_pork_beef_fish eggs oil_and_fat_salo_butter_sunflower_oil FALSE TRUE TRUE FALSE TRUE TRUE FALSE FALSE TRUE FALSE FALSE FALSE zSEtPkd 17 21 yes 19 ZdKKpSjenLUGfAzDGcBIauokoNGCtcXsYDwwxFXHBcPCPkYhBPtnZRgUderQoQJx 21 dont_want_to_say yes_we_all_have_ids_but_they_are_not_in_our_possession 21 yes yes_in_our_possession government_of_ukraine 21 yes no dont_know_ns yes dont_know yes 1_not_at_all fear_for_physical_safety TRUE FALSE FALSE FALSE FALSE GhxiWKAvCGseICcPqHsHEwGNKdLzoN y mine_clearance_ngo FALSE FALSE TRUE FALSE FALSE FALSE FALSE FALSE vwIfwqGJtMPNpakUpGO pAi bQu kbAcGoCkhrrPTRallQBmVrBvdmRQvEmVeVXihfkHHxxLISPdNb loss_of_or_severely_diminished_access_to_basic_services sickness_of_household_members death_of_household_members other_specify breaking_up_with_family_or_relatives psychological_deterioration FALSE FALSE TRUE FALSE FALSE TRUE TRUE TRUE FALSE FALSE TRUE TRUE gRxquLcFLeicVhLSWxbsxvZ keeping_distance_from_people avoiding_public_transport wearing_gloves washing_hands_more_regularly other_specify FALSE FALSE FALSE FALSE TRUE FALSE TRUE FALSE TRUE TRUE FALSE FALSE FALSE TRUE FALSE MUEoGbvmtvoIWxAWqYlrfHyNeSJdoCYNd KRLquArbiAGQVEYneadoSjZplhddvwvxHVbLnH ODwcMieaQjtuCPBhWk refuse_to_answer refuse_to_answer yes refuse_to_answer refuse_to_answer refuse_to_answer refuse_to_answer yes refuse_to_answer no no refuse_to_answer yes yes refuse_to_answer refuse_to_answer shelter_housing food healthcare seeds_or_other_agricultural_inputs education_for_children_under_18 fuel_for_heating none TRUE TRUE TRUE TRUE FALSE FALSE FALSE FALSE TRUE FALSE TRUE TRUE FALSE FALSE qxkcQDopGuenbhaOKgSwUuVQlTisdXBl pSHnpGiMwDXUjXTnuZWbcxznWjXfNDddxRwgeMMDPczLj refuse_to_answer dont_know_ns no yes no no dont_want_to_get_information how_to_register_for_aid how_to_get_water how_to_get_shelter_accomodation_shelter_materials how_to_get_healthcare_medical_attention how_to_stay_safe_to_prevent_attack_harassment how_to_access_education how_to_find_work other TRUE TRUE TRUE FALSE TRUE TRUE FALSE TRUE TRUE TRUE FALSE TRUE noeRoCjxXDZuPKMOQjfUaewMnZjT places_of_worship tfdhyEiQWbezbSSuKsJhgoPObDKb newspapers vt inkind_food inkind_nfis cash_via_mobile_money prefer_not_to_answer construction_materials FALSE TRUE TRUE FALSE FALSE FALSE TRUE FALSE FALSE FALSE FALSE TRUE FALSE TRUE qiGyUiRNVTRThunq UnEq yes_soap_is_shown dont_know_ns kYUceIneRyEnSLIPOeTeGqy zFDwXqytCjhjPNRlUCl UA44 UA14227 UKR1422483001 EA_3 no 086bc327-014b-404941-999698-c57e389a24db 2022-12-20T13:01:33+0100 2022-12-20T12:34:19+0100 deviceID00000010 mariupol mari_002 yes GPfjFphN yes FEKERnYLvLIdUnwV cIGAGucYezdLtfWIIIehZrlAmxXRrQKgfSDWGddpiBSaiWjlUrz yes yes male 18 20 female unmarried_but_living_together no veteran_of_war_ato family_with_3_or_more_children family_with_foster_children other_specify TRUE FALSE FALSE FALSE TRUE FALSE TRUE TRUE FALSE TRUE BHgG rbJJJlrOk JyQTwTtmMMLuWYWqMdRfjfJcgVwHFtdeFtbkrCHFlSjtvNoCzkoDjI diabetes_does_not_need_insulin musculoskeletal_system_and_joints cancer endocrine_system_thyroid_gland_and_other_diseases other_specify FALSE FALSE FALSE TRUE FALSE TRUE TRUE FALSE FALSE FALSE FALSE TRUE TRUE PtVLrP gSTmvJPJwqDFQvbPtfMBctAuKziuctzVpO zxQTcmapPTUSyZEpyxwTavQaT retired_not_working VDzSOclzSqUNoNYkuqajzyOHPmkVVIWSTR cost_cutting_by_employer sSraxFyLwMBUAyOcADbDakgrqipiBgUcjJKqUCYBC kwcLZMcvqRjbJLRajiyXqvfIzDTlOjYVlR agriculture OfOeURj QTKobWmg 19 no refuse_to_answer no refuse_to_answer none 0 1 18 20 0 0 0 0 male permanently_sick_or_disabled_cant_work qWredCLRqxNwwKaarpKxsaPKfSdwqNnbfHBrSNVUdnbbbAorHDfbpeZsFeNeEbkCBdeeVrlwETjgWVojGQROeYlWsG 13 0 0 0 0 no 2018 WzeancjjTASoqBQuXcjAUTYHrAZiXHTAFGnxafnirrGFjM collective_shelter XzzAZybcQmoyHXvSHfPz btaeCGKnUlq no_rented_accommodation lSc no_issues lack_of_insulation_from_cold leaks_during_light_rain_snow leaks_during_heavy_rain_snow limited_ventilation_less_than_05m2_ventilation_in_each_room_including_kitchen dont_know TRUE TRUE TRUE TRUE TRUE FALSE FALSE FALSE FALSE TRUE aJWyFRSQFkxdzGmlLdaeOpBncumNSIIgBaQNlBEfwAQSYCDNAynpoKaEcUcWuFJZEezgFgcz none opening_or_cracks_in_roof some_cracks_in_some_walls some_walls_fully_collapsed total_structural_collapse gas_water_or_sewage_system_damaged electricity_supply_line_damaged_and_not_functional dont_know_prefer_not_to_say TRUE TRUE FALSE FALSE FALSE FALSE FALSE TRUE TRUE FALSE FALSE TRUE FALSE TRUE TRUE FALSE TRUE ZUzVqzRqcVAyYNnOcggHZOgnVwjyaJQhtOSgtxNlEZxwXYCjXIQXR kfAxSBxgiLIwOnThnn zkTFTinggbnXVbTaDv dont_know_ns dont_know_ns dont_know_ns dont_know_ns 22 no yes_after_3_months refigerator functional_stove hh_has_all_items TRUE TRUE FALSE TRUE towel blanket winter_jacket thick_socks warm_gloves warm_scarf adult_warm_clothing child_warm_clothing FALSE FALSE TRUE TRUE TRUE FALSE TRUE TRUE TRUE FALSE TRUE TRUE FALSE sanitary_pads none_needed FALSE FALSE TRUE TRUE centralised_piped_hot_water_supply centralised_piped_cold_water_supply none FALSE TRUE TRUE FALSE FALSE TRUE 19 CEIQqzCIq nRArlpTCKMoBKntvZtHVnABJcidYehuT P 22 NOQCgKKpj TJwLoOpoozaBlbWoKzLvNDnfccdpAsEVPjEgsyBPexCaIOlARncojVcKqjyvNi electricity wood briquettes_not_coal briquettes_coal FALSE TRUE FALSE FALSE TRUE FALSE TRUE TRUE FALSE CkPnNqKbHBmzGSCAHjnDMEPydVrWfyHQxEIBurLjOThCHwjpADileQbdxzFAL 17.89881 24.19452 18.77500 21.49785 refuse_to_answer difficult_to_say not_connected_to_this_service bottled_water_water_purchased_in_bottles fS yTUWynjDzwiS water_precipitation filtering_the_water_pitcher_filter filtering_the_water_reverse_osmosis_filter boiling other_specify dont_know_ns refuse_to_answer FALSE FALSE TRUE TRUE TRUE TRUE FALSE TRUE TRUE TRUE jopSvXXGyg BcaFkkhiVWVbzqfBfGZAIQxkjNhHvMlzvpJpfnHMLPNL dont_know_ns gZiKvvjeybUjvsFKGXrbXRCI uWqwQBfxMibwEWbrMWnJLASAnvCZfINtWyhJMLEPxCdpFNVsUQRcsEx trucked_in_water_truck_with_a_tank_etc iAbeOcoelZLZfJk cBgixHzLPbxNUAISR JjQuqVvtqGynIfkDVVexyefwSlJ ZueQ dont_know_ns 21 do_not_store_water plastic_bottles glass_bottles a_bucket_without_a_lid a_canister a_barrel_tank TRUE TRUE TRUE FALSE TRUE TRUE TRUE FALSE FALSE FALSE FALSE ryrUlLL rXVaLOYkwDRqmFkPCuJkaWTPaQoygplDFBoOrfOfiMKlmxDYnQhYYgIIvGNehIIFd drinking cooking personal_hygiene other_domestic_purposes none_of_the_previous TRUE TRUE TRUE TRUE TRUE FALSE none_of_the_above OEQMJrONstoBJLCWekpuILVjgYHwUwrLeadRjFGxGpzgzNBYO vSZVEnYEcLHnJRFhZiHRXs dont_know we_burn_all_the_garbage 1 1 6 4 4 3 5 3 2 0 7 0_no 1_rarely_1_2 0_no 1_rarely_1_2 0_no 1_rarely_12 no_was_not_needed yes yes no_already_done_so_cant_do_it_anymore no_but_needed no_was_not_needed no_but_needed no_already_done_so_cant_do_it_anymore no_already_done_so_cant_do_it_anymore no_already_done_so_cant_do_it_anymore no_but_needed no_already_done_so_cant_do_it_anymore kindergarten boarding_school specialized_school_for_children_with_disabilities FALSE TRUE FALSE TRUE TRUE FALSE school_too_far_and_no_transport children_working_at_home children_has_disability_that_school_does_not_have_infrastructure_for other_specify TRUE FALSE FALSE TRUE FALSE TRUE TRUE uRJo 19 23 19 22 22 20 21 17 18 19 18 21 21 17 18 18 18 17 19 21 22 dont_know_ns 18 20 18 19 21 19 school_closed_due_to_security insufficient_teachers school_is_damaged health_issues refuse_to_answer TRUE FALSE TRUE FALSE TRUE TRUE FALSE FALSE FALSE FALSE FALSE TRUE QSLuPcAYzUeFrguUvwhGNipxTmzVEjOHwJmzxINs refuse_to_answer no_problems quality_of_teaching_staff price_for_service conditions_of_the_venue overcrowded_classrooms lack_of_medical_support other_specify TRUE FALSE TRUE FALSE FALSE TRUE TRUE TRUE TRUE FALSE FALSE TRUE HAvvvhkZHcmIKEdtm nLaiRrRLuUZVbGhbxjQFxtDbu ewFrMtxCbNkuvYPzplGNVFwQsRPoE none military_presence danger_at_checkpoints wildanimals_stray_dogs TRUE FALSE FALSE FALSE TRUE TRUE TRUE FALSE NMxfcaATVbciOdzZmuwlXjldbhuHAFTz shelling_in_the_vicinity_of_the_school shooting_in_the_vicinity_of_the_school other_specify FALSE FALSE TRUE TRUE FALSE FALSE TRUE ESEvuOMPuWKfYmptapggbXFJtQtzVHBEMIcFpSBl bSKJSjcEGchTxcF refuse_to_answer no 19 XoiClLdJSMcGPNhdqYhfmMleQpyoFOPHgrKrEaUlsOMyPMcmPvQtIyNOOZybFDxAwVVywvtTvJtIVwhyRXTBK obstetricgynaecological paediatrics gastroentrology mental_health_care ear_nose_throat_ent ambulance outpatient_care laboratory post_trauma_rehabilitation none_of_listed TRUE TRUE TRUE TRUE TRUE TRUE FALSE TRUE TRUE FALSE FALSE FALSE TRUE FALSE TRUE refuse_to_answer often cost_of_travel_to_facility cost_of_appointment lack_of_referral_system irregular_presence_of_doctors required_a_covid_test_prior_to_treatment lack_of_doctors insufficient_qualifications_of_doctors long_queues FALSE FALSE FALSE TRUE FALSE FALSE TRUE TRUE FALSE TRUE TRUE FALSE FALSE TRUE TRUE TRUE xBzGpRBOfFDeWNBCbGEIwcNCfDjdEHcFSIzvQqTUmEMWBMbtZwRAAwMaQAnPtMuDr refuse_to_answer dont_know_ns dont_know_ns no more_than_3h yes opening_hours_insufficient items_not_available items_poor_quality market_damaged distance FALSE TRUE TRUE FALSE TRUE TRUE TRUE FALSE FALSE kUzUzHQOjfNGzfloSvvrk roots_and_tubers_potato_onion_beet vegetables_and_leaves_tomato_lettuce_spinach_carrot meat_or_fish_chicken_pork_beef_fish eggs dairy_products oil_and_fat_salo_butter_sunflower_oil sugar_or_sweets_cakes_chocolate_sugary_cold_drinks FALSE TRUE TRUE FALSE TRUE TRUE FALSE TRUE TRUE TRUE FALSE FALSE wCOVGMgADGrwjHzmeeAB 18 15 yes 20 iRfKnQDwZ mKQcQTtfCoqryGSUxvUruRNyRMHUtTmkGzs jHcSSmsBcralnZychBYajXsUxzyLUOwywuaKEmFAdfJEFfazTcahF 20 no dont_know 21 yes no_some_hh_members_are_missing_birth_certificates government_of_ukraine 21 no no dont_know_ns dont_know no no 3_sometimes_i_need_to_change_my_behaviour_due_to_mines movement_and_access_constraints psychological_safety FALSE TRUE TRUE FALSE FALSE bumjpRlrhChcYMeyx qhcOmbiLzWwsRPTFj mine_clearance_ngo police army other_specify FALSE FALSE TRUE TRUE TRUE FALSE TRUE FALSE IvWacdRynmnH bWaeB BehtTiKQvE limited_access_to_food loss_of_or_diminished_access_to_education loss_of_or_diminished_access_to_clean_water_and_sanitation death_of_household_members no_covid19_impacts_on_my_household breaking_up_with_family_or_relatives FALSE TRUE FALSE TRUE TRUE FALSE TRUE FALSE TRUE FALSE TRUE FALSE aXEWntNfXMTCQOGqIvVCyCszALcFAE ICM no_no_action_taken_cannot_select_with_any_other_option not_leaving_the_house_at_all stopping_handshakes_or_physical_contact keeping_distance_from_people wearing_a_face_mask praying_to_god dont_know TRUE TRUE FALSE TRUE TRUE FALSE FALSE TRUE FALSE FALSE FALSE TRUE FALSE FALSE TRUE HwbYc YvVUn yes_other_non_covid_related_reason no yes refuse_to_answer yes yes yes refuse_to_answer no no yes no refuse_to_answer yes dont_know_ns refuse_to_answer shelter_housing healthcare seeds_or_other_agricultural_inputs livelihoods_support_employment hygiene_nfis_eg_soap_sanitary_pads_and_sanitation_services_eg_latrines none other_specify house_repairs TRUE FALSE TRUE TRUE TRUE FALSE TRUE FALSE FALSE FALSE FALSE TRUE TRUE TRUE zPlHkPhYrwct no yes dont_know_ns dont_know_ns yes dont_know_ns how_to_get_water how_to_get_shelter_accomodation_shelter_materials how_to_get_help_after_attack_or_harassment how_to_stay_safe_to_prevent_attack_harassment FALSE FALSE TRUE FALSE TRUE FALSE TRUE TRUE FALSE FALSE FALSE FALSE PXOJvYUeEtNSPK aid_workers_from_international_ngos jUjNWUDmNPStluzZzTSzUIWAIebRFkasEvErbFdqwuUlZzdTjbEmbljAzlDERZdrrPcbLNtWGgPNWDdXQvNJIRedmudOehH in_person_facetoface mhlisGtgkpGFJRXWaIWZjDBpeSRNzmeCNySHMbCDMg physical_cash cash_via_prepaid_cards vouchers other_please_specify fuel_for_heating FALSE FALSE FALSE TRUE FALSE TRUE FALSE TRUE FALSE TRUE FALSE FALSE TRUE FALSE itrfJaLbp no refuse_to_answer AlgCltAKzkjAIriKjACTdOfgFNveuigjuLUJlbRiDUsgX UA44 UA14138 UKR1422783405 JP_4 yes 69dca5e1-cd35-4b474f-9d989f-271856c3f40a 2022-12-20T12:10:49+0100 2022-12-20T11:44:55+0100 deviceID00000002 sievero mari_012 no ygNdF czbL bUZzTdBmgIYrhBwZdTXAxqOEUSOsgSrTuYaoxRMGXQLapKJjkeedsTYPyweUlRwvMbxcYyU no OWdxFZImCLPhWvJsgxUe NTgedoaCeiEeNDhwKTCsN yes no male 21 20 male single disability_not_including_chronic_illness veteran_of_war_ato single_parent other_specify FALSE FALSE TRUE FALSE TRUE TRUE FALSE FALSE FALSE TRUE aVdy eoPQqRAa hLpYAHphdHeuUfHOrTIeQeNrVQfRKk gcQKRRxmU PGsbnbt qMAFrYTpYFlFFozSImZicqG cardiovascular_disease chronic_respiratory_condition neurological genitourinary_system_diseases FALSE TRUE FALSE FALSE TRUE FALSE FALSE TRUE FALSE FALSE TRUE FALSE FALSE XLjOmSXnTliamtEhnaAOKrliCKNyKiyYzibuTmTbriXWbMrNerBSmjiZCFVN doing_housework_looking_after_children_or_other_persons_unpaid xAxfESBRDxykVJgqsgNCVCOBNpKxe other_specify HngCVOtnIOOrTLBscueMxcZFVfyGjlXKRycnCAhoIZJzhHWSnbceByZU military vtnFwQbdYP 20 dont_know_ns refuse_to_answer yes refuse_to_answer complete_higher 0 0 21 19 0 0 0 0 male military_service zCoMJUSVvRuhcvJFOOKCJZSQCngTT 20 0 0 0 0 used_to_be_displaced_but_returned_and_has_no_status_of_idp 2018 NkCTsBZFOmKWgsNJceOMYnQNSwWfkbHDEekeaCNjczqAYd other_specify U dormitory kMliGjUoyasizaHpIeZKCLspY zlnPTOuW YtGQSSIb WIjnBVelojUVL no_issues presence_of_dirt_or_debris_nonremovable dont_know TRUE FALSE FALSE FALSE FALSE FALSE TRUE FALSE FALSE TRUE ykJsWyJLcNimvTFCMbLtBVkcgwXbAdEhqlFBVMgQxWURTnwjGnUSAUeGKzwdcYwrfPnuDXwweazEnRHQvzSBEQRewzJB roof_partially_collapsed damaged_floors total_structural_collapse foundation_damaged_or_shifted gas_water_or_sewage_system_damaged FALSE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE TRUE FALSE TRUE TRUE TRUE FALSE FALSE FALSE JdYItJNXJVuQeiSPRrmtrSTYcZlIMjcaSNKRydFyZiyauvrhOfAUUWrraSsrHFJwKLblIyAzdKTGqUC ClbPi yes dont_know_ns dont_know_ns yes 20 no yes_within_the_next_3_months functional_stove functional_heater_movable hh_has_all_items FALSE TRUE TRUE TRUE mattress towel blanket warm_winter_boots thick_socks warm_gloves warm_scarf child_warm_clothing TRUE FALSE TRUE TRUE FALSE TRUE TRUE TRUE TRUE FALSE FALSE TRUE FALSE adult_diapers child_diapers sanitary_pads TRUE TRUE TRUE FALSE centralised_piped_hot_water_supply centralised_piped_cold_water_supply electricity none FALSE TRUE TRUE TRUE FALSE TRUE 18 C bIPWrsuAczysOtcZzokjtEdZOSJVeMrRDYQ 19 hxdxqoRKFcxpdQYK miRtSkHRdLbaNQPjBuXpjIGiHysIluMHLumBjijcQk central_heating electricity gas kerosene wood briquettes_not_coal briquettes_coal other_specify TRUE TRUE TRUE TRUE TRUE FALSE TRUE TRUE TRUE WdywGAwhmhgqnNLSQLGFq PEbRuvWB eQRjchKOfpYYyEsjcvkctiZITWxadltf 23.19927 18.93430 22.47155 20.86919 refuse_to_answer yes_daily_every_day dont_know_ns public_well_or_boreholes_shared_access XuaynlFfqPdZVWfuRaPERz zHZvYnKpQQzpbN do_not_process_purify water_precipitation filtering_the_water_reverse_osmosis_filter boiling dont_know_ns TRUE FALSE TRUE FALSE TRUE TRUE FALSE FALSE TRUE FALSE qpbrlRpPvnqOgwnTIviIayiaNoeeRCcgNSzSLGjlyHdiyImGjpVd hilimjwaVaeUArLqAcxVljyAYcvWAaodtJHEfT GueeI we_cant_afford_necessary_means_filters_chemicals_for_chlorination ozLoZXFQrEfAlXUpoMLnjUOkpUajjADcV bottled_water_water_purchased_in_bottles tnmnsBEPiMFImWXpnnGJwnTHbEUBZGilANsCbqTMyOCofZwJXDNWUaeQmeAXNoMTI dont_know_ns 20 plastic_bottles glass_bottles a_bucket_with_a_lid a_canister we_fill_in_the_bathtub other_specify dont_know_ns refuse_to_answer FALSE TRUE TRUE TRUE FALSE TRUE FALSE TRUE TRUE TRUE TRUE oWMrFhABV drinking cooking none_of_the_previous TRUE TRUE FALSE FALSE TRUE FALSE other_specify D yes we_will_take_garbage_to_the_places_unsuitable_for_that_a_forest_a_field_etc_by_ourselves 5 3 5 2 3 2 1 2 5 7 5 1_yes 3_often_10plus_times 0_no 3_often_10plus_times 0_no 1_rarely_12 yes no_but_needed no_but_needed no_already_done_so_cant_do_it_anymore no_but_needed no_but_needed yes no_was_not_needed no_but_needed yes no_already_done_so_cant_do_it_anymore no_but_needed none school specialized_school_for_children_with_disabilities vocational_school TRUE FALSE TRUE FALSE TRUE TRUE school_too_far_and_no_transport cannot_afford_supplies children_working_at_home children_has_disability_that_school_does_not_have_infrastructure_for other_specify TRUE TRUE FALSE TRUE FALSE TRUE TRUE lxcuCtYCYZVSjcuwREhkkAQTVxIAMcEcyPjtWtCArNcwRfn 23 19 19 20 21 18 23 18 19 16 18 20 20 21 20 20 20 17 22 23 21 dont_know_ns 22 19 22 18 20 22 insufficient_teachers too_expensive_school_fees_supplies_transport_etc other_specify FALSE FALSE TRUE FALSE FALSE FALSE FALSE TRUE FALSE FALSE TRUE FALSE NGPuATZsdWQVkSPESJNnViFaYFoEa DTGuEXMiobujwpFJ 1_2_months quality_of_teaching_staff price_for_service problems_with_distance_learning_due_to_closure_of_school_for_covid_eg_bad_internet_connection other_specify FALSE FALSE TRUE FALSE FALSE TRUE FALSE FALSE FALSE FALSE TRUE TRUE AtgDQFWAEiAAhZSraeDcMwYaBJmLyIpUBhGevCYZQBCsEnlxfaEB WezIqgKxnFikXSrvXJJmoqbmxd none shelling military_presence wildanimals_stray_dogs other_specify TRUE FALSE TRUE FALSE TRUE FALSE TRUE TRUE EaeAutgpIoOJ jBrKboadRUksiGxDsrHbLZCSEDwSU QrflengFpOCnSireGfCXUHVNcIOmzQpwnM uxos_on_school_grounds shelling_in_the_vicinity_of_the_school shooting_in_the_vicinity_of_the_school military_presence_inside_of_schools other_specify FALSE TRUE TRUE TRUE TRUE FALSE TRUE eTinOTxfGepBeHkfM tfmVrUeGeXcsFNlHRzmWQXRotrINmYXYMROAyxYJ refuse_to_answer no 18 VOBgmmpMeLhQtyMA obstetricgynaecological paediatrics gastroentrology mental_health_care outpatient_care laboratory x_ray ultrasound post_trauma_rehabilitation none_of_listed TRUE TRUE TRUE TRUE FALSE FALSE FALSE TRUE TRUE TRUE TRUE FALSE TRUE FALSE TRUE refuse_to_answer never lack_of_facilities cost_of_medicine have_to_pass_through_entry_exit_checkpoint_for_medical_facility_in_the_ngca insufficient_qualifications_of_doctors long_queues TRUE TRUE FALSE FALSE FALSE FALSE FALSE FALSE TRUE FALSE FALSE FALSE FALSE FALSE TRUE TRUE uugjuoIcwAAstRHQvhayUjbcxekknirT refuse_to_answer no dont_know_ns no more_than_3h yes no_problems items_too_expensive items_poor_quality market_damaged other_specify TRUE FALSE FALSE TRUE TRUE TRUE FALSE FALSE TRUE FnWxsLZtumvvJugJpeKlhrMeVKiiTTaQfRVPSC nPz roots_and_tubers_potato_onion_beet vegetables_and_leaves_tomato_lettuce_spinach_carrot eggs pulses_nuts_seeds_lentils_beans_nuts dairy_products oil_and_fat_salo_butter_sunflower_oil other_specify FALSE TRUE TRUE FALSE FALSE TRUE TRUE TRUE TRUE FALSE FALSE TRUE CdnfGbYFWbkHgGsnYHJiVoA 21 18 no 19 kZYDm POoCDbhUwiNtwpHdVwvreOxhuNGZoMBFkxULJLDhIWOEiLsAxCgXAaGobD 19 dont_know yes_we_all_have_ids_but_they_are_not_in_our_possession 19 no yes_in_our_possession government_of_ukraine 19 yes refuse_to_answer dont_know_ns yes dont_know refuse_to_answer 4_i_have_to_change_my_everyday_habits movement_and_access_constraints psychological_safety has_affected_hh_budget other_specify FALSE TRUE TRUE TRUE TRUE aeruWIm uEQmTbzzPc rJlrdLBqBYvYRrLkAKEjgqanvwQGdGMwD state_emergency_services police army FALSE TRUE FALSE TRUE TRUE FALSE FALSE FALSE bKZbbPDxYQejGceKGRcpkKzgoJccicYgeFFGgpcPvSKstsvZvCZSLbwlhqShcIEvQRfhgJtVpHTYvFgtCSXLKaHzTw diminished_lost_source_of_income loss_of_or_severely_diminished_access_to_basic_services loss_of_or_diminished_access_to_clean_water_and_sanitation sickness_of_household_members death_of_household_members no_covid19_impacts_on_my_household restriction_in_movement TRUE FALSE TRUE FALSE TRUE TRUE TRUE FALSE TRUE TRUE FALSE FALSE Cb POZeHftaKRpFlztJMTAwjtCYplrazJEAVkhxkMAsFuMGMvrIHXKrGEuNIbPgJadpGhcJrkvim no_no_action_taken_cannot_select_with_any_other_option reducing_movement_outside_the_house keeping_distance_from_people avoiding_public_transport washing_hands_more_regularly keeping_surfaces_clean praying_to_god dont_know TRUE FALSE TRUE FALSE TRUE FALSE TRUE FALSE FALSE TRUE TRUE TRUE FALSE FALSE TRUE uujvDgYlGNIJuHKMymaU kfajn refuse_to_answer yes no refuse_to_answer refuse_to_answer yes no no refuse_to_answer yes no yes yes refuse_to_answer no dont_know_ns healthcare drinking_water hygiene_nfis_eg_soap_sanitary_pads_and_sanitation_services_eg_latrines need_to_repay_debt education_for_children_under_18 other_specify house_repairs FALSE FALSE TRUE FALSE FALSE TRUE TRUE TRUE TRUE FALSE FALSE FALSE TRUE TRUE suITaEJfp refuse_to_answer refuse_to_answer refuse_to_answer refuse_to_answer no refuse_to_answer dont_want_to_get_information how_to_register_for_aid how_to_get_water how_to_get_shelter_accomodation_shelter_materials how_to_stay_safe_to_prevent_attack_harassment how_to_provide_feedback_on_aid_you_are_receiving TRUE TRUE TRUE FALSE TRUE FALSE FALSE TRUE FALSE FALSE TRUE FALSE PlvezzVkf other ZPIInsFeivrkDHoj mugNAFU social_media_twitter_facebook_etc NcXD RtRKLSIIlVGuABxBn do_not_want_to_receive_humanitarian_assistance inkind_food cash_via_bank_transfer services_eg_healthcare_education_etc other_please_specify dont_know prefer_not_to_answer fuel_for_heating TRUE TRUE FALSE FALSE TRUE FALSE FALSE FALSE TRUE TRUE TRUE TRUE TRUE FALSE SXxYzsRvThNlRXcJFLbarGYEWCxAInRsoSF VsU C aAFOQVrJEzcysHcmyUEQLsDfYCC dont_know_refuse_to_answer yes fEFzHFpcjvjsvGmauxavYStwFniIuhzrceIjRSDWGGCFYpaehOMdUaapDMPLhnYxdNHjElEjHcQcqQisP UA44 UA14224 UKR1421586403 ID_1 yes be4f8572-0d36-434b40-bfb2bc-907e8f43b651 2022-12-20T13:09:53+0100 2022-12-20T13:25:45+0100 deviceID00000000 sievero mari_003 no e no TPPYe lVFVazinCQgVrlaSzUJdZWOihRLlgfHHRdxzg zFMuYksgDoTqDdGPKFpSGnjLDcsyvVlDiAeOyRfmVHLe no no female 21 21 female single disability_not_including_chronic_illness veteran_of_war_ato single_parent family_with_3_or_more_children family_with_foster_children chronic_illness other_specify FALSE FALSE TRUE FALSE TRUE TRUE TRUE TRUE TRUE TRUE GBsffZeHkSnpNcmoKYbTcgDPAZGKOAEhzdbVqTnbBAnQcdKKbLQIdjv blood_pressure_diseases cardiovascular_disease diabetes_does_not_need_insulin chronic_respiratory_condition musculoskeletal_system_and_joints neurological sensory_disorder gastrointestinal_digestive_tract_incl_liver_gallbladder_pancreas_diseases other_specify TRUE TRUE FALSE TRUE TRUE TRUE FALSE TRUE TRUE TRUE FALSE FALSE TRUE KUrIeMcgJltumrhbOjGzqMLMJEnVAMHmbgmUjdOGxgskZVkTyBXnqiJdvrXZsnKPDdoVbmmprtWxyMsPN RoRPfNrAaetSIa unemployed_looking_for e zWXLbFusKKEgbBKgbKLsxgvKhVdsBKtb lPRDSdamBAorqKtVjvIBOkd other_specify GTFrAQeHKdQvHHzdgiiVgIaeojFNGWpKvXNsKlDEpTtbuCsAyJwXoTcm weUOkhQCGvKOVKL social_service 20 yes refuse_to_answer no no primary_education 0 0 23 18 1 0 0 1 male retired_but_still_working uNZTNcXuVvQAENNhAERkCWiXUyoHzMuJK 19 1 0 0 1 used_to_be_displaced_but_returned_and_has_no_status_of_idp 2014 sgpxbNJdQRCRivIkumfggQtxvEEwDny KWSUtEnp other_specify boraDoBCuicYqtcmJmAeTNdoWpmsTygCf oVWTiddWHfPrysa no_hotel x cooolDhFzbBZHWbTrnZHPgudoqHx no_issues leaks_during_light_rain_snow leaks_during_heavy_rain_snow presence_of_dirt_or_debris_nonremovable none_of_the_above TRUE FALSE TRUE TRUE FALSE FALSE TRUE TRUE FALSE FALSE ZjYZk broken_or_cracked_windows exterior_doors_broken_unable_to_shut_properly large_cracks_openings_in_most_walls some_walls_fully_collapsed severe_structural_damage_and_unsafe_for_living gas_water_or_sewage_system_damaged other_specify_none_of_the_above dont_know_prefer_not_to_say FALSE FALSE FALSE TRUE TRUE FALSE TRUE FALSE TRUE FALSE TRUE FALSE FALSE TRUE FALSE TRUE TRUE AdLKFhyQfGaSrIeWiWRRbUWEOfRVMCKWKqhHpXMtktAjXzJQcQavkCDDcBvRaVX no yes dont_know_ns yes 16 no yes_after_3_months refigerator functional_stove functional_heater_movable hh_has_all_items TRUE TRUE TRUE TRUE mattress towel blanket winter_jacket warm_scarf adult_warm_clothing child_warm_clothing each_member_has_all_items TRUE FALSE TRUE TRUE TRUE FALSE FALSE FALSE TRUE FALSE TRUE TRUE TRUE child_diapers FALSE TRUE FALSE FALSE centralised_piped_cold_water_supply FALSE FALSE TRUE FALSE FALSE FALSE 20 THMu tHmwxpmkulCfAEDqiVxGU 22 uOAeJTrwzQHUSwmCAIzFkKOyo central_heating gas kerosene briquettes_not_coal briquettes_coal other_specify TRUE FALSE TRUE TRUE FALSE FALSE TRUE TRUE TRUE ErJmSZxvGAJGqiUiZEuOwtO NvlDvDwsdvewmZfWzCEfxkiMOxWZEvr GlgqYePNkfiuBFTqArhxEyOIhHRFqa 20.69023 19.61683 17.70102 19.85000 no difficult_to_say yes_daily_every_day public_well_or_boreholes_shared_access do_not_process_purify boiling percolation TRUE FALSE FALSE FALSE FALSE TRUE TRUE FALSE FALSE FALSE xcfMPYbpxGWouNUyBxGUlM no_need Jta iqqZmNYfYZafhjBAvxyca technical_piped_water_not_appropriate_for_drinking dgcIsoHuMhGdMkDJfbItQsie yKth s 2_3_times_a_week 20 plastic_bottles glass_bottles a_bucket_with_a_lid a_canister dont_know_ns FALSE TRUE TRUE TRUE FALSE TRUE FALSE FALSE FALSE TRUE FALSE LMHGjQwmugvPldaaaIodtoAKQqKOSSUJvPHzWbVAkrbsPKLnUqTdhWMDDahokFos personal_hygiene other_domestic_purposes dont_know_ns FALSE FALSE TRUE TRUE FALSE TRUE other_specify mhnmqqcDSGLstTXfqqjdQvZUb refuse_to_answer we_will_take_garbage_to_the_places_unsuitable_for_that_a_forest_a_field_etc_by_ourselves 7 6 0 5 7 6 4 0 7 2 7 1_yes 2_sometimes_3_10 1_yes 3_often_10plus_times 1_yes 3_often_10plus_times yes yes no_was_not_needed yes no_but_needed no_already_done_so_cant_do_it_anymore no_but_needed yes no_was_not_needed no_already_done_so_cant_do_it_anymore no_already_done_so_cant_do_it_anymore no_was_not_needed none kindergarten boarding_school specialized_school_for_children_with_disabilities vocational_school TRUE TRUE FALSE TRUE TRUE TRUE school_too_far_and_no_transport children_at_home_as_carer children_working_at_home children_in_paid_employment children_has_disability_that_school_does_not_have_infrastructure_for TRUE FALSE TRUE TRUE TRUE TRUE FALSE QVnrPyRoGgFGKYtPLUPFBwMjTjsAdENhhgnZYJAwkPJqHaoGyGuZITfZSQRdbl 19 21 17 21 21 21 20 20 20 21 21 20 18 21 18 18 18 20 18 22 19 no 16 19 21 20 26 22 school_closed_other health_issues family_personal_reasons too_expensive_school_fees_supplies_transport_etc transport_unavavailable a_child_contributes_to_hh_income refuse_to_answer FALSE TRUE FALSE FALSE FALSE TRUE TRUE TRUE TRUE TRUE FALSE TRUE UULxvnrKQwqsErysJrThqG refuse_to_answer quality_of_teaching_staff quantity_of_teaching_staff overcrowded_classrooms school_is_unsafe other_specify FALSE FALSE TRUE TRUE FALSE FALSE FALSE TRUE FALSE TRUE FALSE TRUE NokN MqLcfhczCSGJyrFkLeFEUnfOaMDvhxXxNKn shelling shooting military_presence danger_at_checkpoints other_specify FALSE FALSE TRUE TRUE TRUE TRUE FALSE TRUE HUsjHxwKEHKAiVAfQMztUctefMAnKpZdcLpGCVrIRDlStIhklifhgZLKhh shooting_in_the_vicinity_of_the_school military_presence_inside_of_schools military_presence_in_the_vicinity_of_schools FALSE FALSE FALSE TRUE TRUE TRUE FALSE YesugcBnpVKurzpRPFUYQuWoeAyHn aAbmeFIyTDGFTREtqMskTagAybMcEnWjVZtfPQmzEnMxkv no yes 19 CWHGYrJJgcWrHxirefIgZcpNwiEbhFeFFPivNDMxVPfsSKMPXMzGOwsXCkztuchuPkExUhJsVnfdrgKaE paediatrics gastroentrology ear_nose_throat_ent inpatient_facility laboratory post_trauma_rehabilitation FALSE TRUE TRUE FALSE TRUE FALSE TRUE FALSE TRUE FALSE FALSE FALSE TRUE FALSE FALSE no all_of_the_time lack_of_facilities cost_of_medicine distance_to_facility lack_of_documents cost_of_appointment required_a_covid_test_prior_to_treatment unable_to_leave_the_house_due_to_covid19 other_specify lack_of_doctors long_queues TRUE TRUE TRUE FALSE TRUE FALSE TRUE FALSE FALSE FALSE TRUE TRUE TRUE TRUE FALSE TRUE bNMIiMTBDhpxMVoKZoepjhdTdoAErjSkktivqWOHmaArMQEClEKwThG refuse_to_answer no no dont_know_ns less_than_1h no opening_hours_insufficient items_too_expensive items_poor_quality market_damaged distance security other_specify FALSE TRUE FALSE TRUE TRUE TRUE TRUE TRUE TRUE xsODtQHGRVPqqOXKjcDa WkvtDxHEpQXWAieZwcSTYJ fruits_apple_orange_strawberry meat_or_fish_chicken_pork_beef_fish eggs condiments_and_spices_tea_coffee_spices FALSE FALSE FALSE TRUE TRUE TRUE FALSE FALSE FALSE FALSE TRUE FALSE lBNMWEznvWqoSpahTaWfD 21 19 no 21 IbbLUETIztgDVTgLRerIjIcqUQXLPEhaGWHOSgNqUrhZl ZhnZva bhkkmUnTItibg 16 dont_know yes_we_all_have_ids_but_they_are_not_in_our_possession 20 no no_some_hh_members_are_missing_birth_certificates both 18 no refuse_to_answer yes yes refuse_to_answer dont_know 1_not_at_all psychological_safety FALSE FALSE TRUE FALSE FALSE PwqFVGGoxQrhxDTfTodUc TAMeBRPHXKyFcazlvmujZSKjoOXXMBx llHDugVppPiWUvLlXlL PwcoVIxypsrCnjNrgvKJfIUG mine_clearance_ngo police army to_relatives dont_know_ns FALSE FALSE TRUE TRUE TRUE TRUE FALSE TRUE mpExC geg aCdYPigGhvuFh wTSEPjzJrLGFMuuMasigNcBhZldXm loss_of_or_severely_diminished_access_to_basic_services loss_of_or_diminished_access_to_clean_water_and_sanitation sickness_of_household_members no_covid19_impacts_on_my_household restriction_in_movement FALSE FALSE TRUE FALSE TRUE TRUE FALSE FALSE TRUE TRUE FALSE FALSE sK not_leaving_the_house_at_all reducing_movement_outside_the_house keeping_distance_from_people avoiding_public_transport wearing_gloves praying_to_god staying_away_from_animals other_specify dont_know FALSE TRUE TRUE FALSE TRUE FALSE TRUE FALSE TRUE FALSE FALSE TRUE TRUE TRUE TRUE AWeBimbUVWLEUGWHVidNWaneApQQDvsnJuyQGtuGLvbtvNuac no no yes refuse_to_answer refuse_to_answer yes refuse_to_answer refuse_to_answer no yes no yes refuse_to_answer no no dont_know_ns shelter_housing healthcare livelihoods_support_employment hygiene_nfis_eg_soap_sanitary_pads_and_sanitation_services_eg_latrines need_to_repay_debt psychosocial_support fuel_for_heating none TRUE FALSE TRUE FALSE TRUE FALSE TRUE TRUE FALSE TRUE TRUE TRUE FALSE FALSE omPsLeqJCcCErUKqmNlpeApvgTnGFhT dont_know_ns yes no refuse_to_answer refuse_to_answer refuse_to_answer how_to_stay_safe_to_prevent_attack_harassment how_to_find_work how_to_provide_feedback_on_aid_you_are_receiving FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE FALSE TRUE TRUE FALSE smOfzrBAXFQzz UyLBjwaBGtIPIvNK TAvAroxxELmPoGMAvypbxyvHvMfEbIrXtOysTPRORkgXIIKZe aid_workers_from_international_ngos OPkEiLXHGerNhoiTNJjruwlVNuBlihaVDOddnugQhKaWMnyDYXeRNAcKvCQuGgLtDKyzovbaBsAcZlrIKgkpF sms sSTjLDxkstZcZ ElwYpbUUmV do_not_want_to_receive_humanitarian_assistance cash_via_prepaid_cards cash_via_mobile_money fuel_for_heating construction_materials TRUE FALSE FALSE FALSE FALSE TRUE TRUE FALSE FALSE FALSE FALSE FALSE TRUE TRUE ujLWwmtAEyLp GuIKeZicViOwsKHGeKRyGngqHdngYYgiQi yes_soap_is_not_shown dont_know_ns bWJKUWiNhXRddeScHEag UA44 UA44129 UKR1423382501 IU_1 yes f08de12b-6e8d-44494a-a1a8a6-2cfd09765a4b 2022-12-20T12:18:50+0100 2022-12-20T12:46:49+0100 deviceID00000006 sloviansk slov_002 yes NjOkmtFbZfkvaDXEcguJVPmmSLsPfdSPIfpRzcILef yes kDuRgQZf yes no male 21 19 female married no veteran_of_war_ato family_with_foster_children chronic_illness TRUE FALSE FALSE FALSE TRUE FALSE FALSE TRUE TRUE FALSE CIOgYsinNNFSFxbxSBTbSeJCFhLAZBsETdvWZDkzyGqHSFCGagDUnoZXQhlmArblegXmjgHNsrJsMPsXjiJbTPkT blood_pressure_diseases diabetes_does_not_need_insulin chronic_respiratory_condition musculoskeletal_system_and_joints neurological gastrointestinal_digestive_tract_incl_liver_gallbladder_pancreas_diseases TRUE FALSE FALSE TRUE TRUE TRUE FALSE TRUE FALSE TRUE FALSE FALSE FALSE aawIaEIhvXoGJLpAHRhnWktWDQZmbTrrw fSBbfZkMYiTwxmFTLlR other_specify MusaZkRtIxJa Vv NbJXPkShyskmRXQRAm AgfRuPbythaqrnMWvdwIgeVLDwvDYaNWKeyWzLhokmBOsdsUiiWXiOjpfl end_of_the_contract kuyCzwJXFxOjbtsPgwpDsxWpiAfOXxaf pNGgVcmQHwzoJsZNbxTcCQhCI OFZTJwavcA aBibhUhje other_specify VkObaYBvPBCnGlbyguYsATqhZKSsTZCzsOpPkYPmwkMWZGSrNlLumyVHFCuUGoLwFJWTiROZRLzhVCC 23 dont_know_ns no refuse_to_answer no basic_higher 0 0 21 21 0 0 0 0 male doing_housework_looking_after_children_or_other_persons_unpaid XXmWkbHlwurdAEJCrGSHHzXLMntBGnjALxx T yuVYQKI 22 0 0 0 0 refuse_to_answer 2016 nUk tent oxgiLXNYMPoLzVTQUJeTcPebdDkSJtIfJxTptrIZHUhcRL VBsamrfvRH I dormitory EtCuixYBrRVMqnuPafdZbRiknQIOXb HbCxXjQX no_issues lack_of_insulation_from_cold leaks_during_heavy_rain_snow limited_ventilation_less_than_05m2_ventilation_in_each_room_including_kitchen presence_of_dirt_or_debris_removable none_of_the_above dont_know TRUE TRUE FALSE TRUE TRUE TRUE FALSE TRUE FALSE TRUE mOnXJCQBtAdEGuPZlqe DTgxUCDlysjXCIELxssAcVwTubNrRiMDoWfddPnHHlxVzHAvoWlzngFbNHTxkONrbZIwnZYaAFn exterior_doors_broken_unable_to_shut_properly large_cracks_openings_in_most_walls some_cracks_in_some_walls damaged_floors severe_structural_damage_and_unsafe_for_living foundation_damaged_or_shifted gas_water_or_sewage_system_damaged electricity_supply_line_damaged_and_not_functional FALSE FALSE FALSE FALSE TRUE FALSE TRUE TRUE FALSE TRUE TRUE FALSE TRUE TRUE TRUE FALSE FALSE EMaZwzUIOTtwy mfPHV dont_know_ns yes dont_know_ns no 20 yes yes_within_the_next_3_months refigerator functional_stove functional_heater_movable TRUE TRUE TRUE FALSE mattress bedsheets towel winter_jacket warm_winter_boots thick_socks warm_gloves adult_warm_clothing TRUE TRUE TRUE FALSE TRUE TRUE TRUE TRUE FALSE FALSE TRUE FALSE FALSE sanitary_pads FALSE FALSE TRUE FALSE centralised_piped_hot_water_supply electricity none FALSE TRUE FALSE TRUE FALSE TRUE 18 rh fBlsFJGHXLlLuiwhdsJHfOiYArGGhkgpEpEcirAhJanDHqldJRIjRuzGndKAoWdzzMmNUE XIk MLkBIrTRMveNM 21 TPpPEUx briquettes_not_coal briquettes_coal other_specify FALSE FALSE FALSE FALSE FALSE FALSE TRUE TRUE TRUE lFQaJgfLHgKULPYQXqxMaElAeNdcwytGGiulziTAQSrpBfSJNUQnnhAP tIWDkqdrGUqoYcLfYvnNanC qJIutDJAiFINKpwndU 19.36001 18.81609 22.43648 21.84208 refuse_to_answer yes_daily_every_day yes_weekly_min_once_per_week drinking_water_from_water_kiosk_booth_with_water_for_bottling TeaCrsFLzYLSgHzWNvv sEtOxKlvSrkIcKrZQVCckbhhDlYdbm filtering_the_water_reverse_osmosis_filter other_specify dont_know_ns refuse_to_answer FALSE FALSE FALSE FALSE TRUE FALSE FALSE TRUE TRUE TRUE OuwxIyVCQzNIGBlajhTglppHIgnuC JzRxAMwPGr other_specify RdJlDhQeMsfPnYfybqetMEYxiD ZyEIQZPoUCzDCYUEejMruyhlMYOz KgRtnmDXkysqvEFzhUzb technical_piped_water_not_appropriate_for_drinking UgnmCNcJgWNZpuiYoEPbiaZBjLOSXmWYirDnOyQNqmIkONTxDDBPjGkpgyTvLN no_shortages 21 do_not_store_water glass_bottles a_bucket_with_a_lid a_canister a_barrel_tank we_fill_in_the_bathtub other_specify dont_know_ns refuse_to_answer TRUE FALSE TRUE TRUE FALSE TRUE TRUE TRUE TRUE TRUE TRUE IiRgXIzmeRZsiPRPNPpCVXzMzjjctz drinking other_domestic_purposes dont_know_ns TRUE FALSE FALSE TRUE FALSE TRUE bucket_toilet WuQLJ vWpaWnDIiXdZKxHkSWLu LoPOsU no we_use_services_of_a_special_service_which_regularly_takes_out_garbage 7 4 0 1 4 4 0 1 7 3 3 0_no 2_sometimes_3_10 0_no 3_often_10plus_times 1_yes 1_rarely_12 no_was_not_needed no_but_needed no_already_done_so_cant_do_it_anymore yes no_already_done_so_cant_do_it_anymore yes no_but_needed no_already_done_so_cant_do_it_anymore no_was_not_needed no_already_done_so_cant_do_it_anymore no_was_not_needed no_already_done_so_cant_do_it_anymore boarding_school vocational_school FALSE FALSE FALSE TRUE FALSE TRUE school_too_far_and_no_transport cannot_afford_supplies children_at_home_as_carer children_working_at_home TRUE TRUE TRUE TRUE FALSE FALSE FALSE LgsZkHQGqByeSKXINEyaVVJtMsJLgtDdGWKTSAThbpFkqaacwAviSaeTKzsP 22 21 18 20 19 19 19 22 19 20 16 19 20 22 24 23 21 20 14 17 19 no 19 14 18 19 19 21 school_closed_other insufficient_teachers health_issues FALSE TRUE TRUE FALSE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE lBujuAEGaAPfZqIxnNhJDxclPGEviAbUunknMXyCvKHSKvSnhHBpZqhEcnsPgdpmbvcrUHSQfWfMduImACkeOeg 1_2_months no_problems quality_of_teaching_staff price_for_service school_is_unsafe problems_with_distance_learning_due_to_closure_of_school_for_covid_eg_bad_internet_connection other_specify TRUE FALSE TRUE FALSE FALSE TRUE FALSE FALSE FALSE TRUE TRUE TRUE CosgFEVoJHNBueVlTDzakfeHBZQEDFlduIVMEzqyobWaVlXoyrEQWUaLTJFDuNsFAdLF shooting military_presence FALSE FALSE FALSE TRUE TRUE FALSE FALSE FALSE svbNiTQJouFSJVjUaYtDuJImfhQXnUzYVmCqbpp none shelling_in_the_vicinity_of_the_school TRUE FALSE TRUE FALSE FALSE FALSE FALSE GgBgglAsPmjeW jPg no yes 19 mIQJSHXOLqKcROBqvfkUHqOBkPumXXmxrOcvxWJbtGlJrOHoKPbdXxXhdfrJqZgTopK gastroentrology ambulance ultrasound dont_know_ns none_of_listed FALSE FALSE TRUE FALSE FALSE TRUE FALSE FALSE FALSE FALSE TRUE FALSE FALSE TRUE TRUE refuse_to_answer sometimes lack_of_facilities cost_of_appointment have_to_pass_through_entry_exit_checkpoint_for_medical_facility_in_the_ngca irregular_presence_of_doctors required_a_covid_test_prior_to_treatment unable_to_leave_the_house_due_to_covid19 lack_of_doctors long_queues TRUE FALSE FALSE FALSE FALSE FALSE TRUE FALSE TRUE TRUE TRUE TRUE FALSE TRUE FALSE TRUE wbYbmkDQEQApbeduGvYNTXtMpINJYJQrT ifVrkOuvBADByqOxqMAhXhlJURBDgTtsNXJHvoy dont_know no refuse_to_answer yes less_than_15_mins yes items_poor_quality market_damaged distance security FALSE FALSE FALSE FALSE TRUE TRUE TRUE TRUE FALSE AYBMTLUNhXXpZAXoGpBwxAStNWssLrgK cereals_grains_bread_pasta roots_and_tubers_potato_onion_beet vegetables_and_leaves_tomato_lettuce_spinach_carrot fruits_apple_orange_strawberry meat_or_fish_chicken_pork_beef_fish eggs oil_and_fat_salo_butter_sunflower_oil condiments_and_spices_tea_coffee_spices TRUE TRUE TRUE TRUE TRUE TRUE FALSE FALSE TRUE FALSE TRUE FALSE gKCOrW 20 20 dont_know_ns 22 GScFiYeZsPit kjKpcezpGSsvpbmpHtRFnGAgkiRDutVHF 19 dont_know dont_know 22 no no_some_hh_members_are_missing_birth_certificates authorities_in_non_government_controlled_area 19 no dont_know_ns no dont_know no dont_know 1_not_at_all psychological_safety FALSE FALSE TRUE FALSE FALSE vTGNBtwGOOSYrFcaLP iSvHNMNCKQgwnjlPEdaOKWlyBfj suvKBjjhvqTMZpOtnTCjidDSWPIaLtPDfv VifauDnGphPGGCxk administration_head_of_the_village) state_emergency_services mine_clearance_ngo police army to_relatives other_specify TRUE TRUE TRUE TRUE TRUE TRUE TRUE FALSE MUOJWPPYnnFxitFzTBQqsSguKKnLsgMpyeVZsizujJSwKLEsOuDHNBlYEABzDZgeSZGsvC limited_access_to_food loss_of_or_severely_diminished_access_to_basic_services loss_of_or_diminished_access_to_education loss_of_or_diminished_access_to_clean_water_and_sanitation sickness_of_household_members death_of_household_members restriction_in_movement breaking_up_with_family_or_relatives FALSE TRUE TRUE TRUE TRUE TRUE TRUE FALSE FALSE TRUE TRUE FALSE KudFzPkgRXtGpOSnGNwOEhnQPlyoWjHlMlLbdPpKoqmrznYWyhchJXIYpqaIPgOMmCimCgeKPaS lzkNTXEbOSe no_no_action_taken_cannot_select_with_any_other_option stopping_handshakes_or_physical_contact avoiding_public_places_and_gatherings wearing_a_face_mask wearing_gloves washing_hands_more_regularly praying_to_god other_specify dont_know TRUE FALSE FALSE TRUE FALSE TRUE FALSE TRUE TRUE TRUE FALSE TRUE FALSE TRUE TRUE jnNuvaxHoAlmJHSDBVxQOZMxCZxYikfzNpx KjHowARLIIQYygdWZFtOuXnOjYhKErmoiErruZOHlCX refuse_to_answer refuse_to_answer refuse_to_answer no no refuse_to_answer no refuse_to_answer no refuse_to_answer no refuse_to_answer yes dont_know_ns refuse_to_answer refuse_to_answer shelter_housing livelihoods_support_employment fuel_for_heating other_specify house_repairs TRUE FALSE FALSE FALSE TRUE FALSE FALSE FALSE FALSE FALSE TRUE FALSE TRUE TRUE jpv HElVdXmAzTKMlGCXQTVigGXRELflwKgEgQRQFPWVIUKyXcBJJTXmhotMSNHkckJfbQBNrUuqbXlKMVHz dont_know_ns no no refuse_to_answer dont_know_ns dont_know_ns dont_want_to_get_information how_to_register_for_aid how_to_get_water how_to_get_food how_to_get_help_after_attack_or_harassment how_to_provide_feedback_on_aid_you_are_receiving TRUE TRUE TRUE TRUE FALSE FALSE TRUE FALSE FALSE FALSE TRUE FALSE ksPjuOJuhqlNKkBWVXdd government_officials RuERqcHrCQHjqROWvySgBFIftgfoErSfkiHYUSBJXZYvhlKyEECzioJRSKqdCeUisKEmGTkzUaqa film_or_theatre TQbKGqjA hhWOotswqWlNeQwXEn inkind_food physical_cash cash_via_prepaid_cards vouchers services_eg_healthcare_education_etc dont_know prefer_not_to_answer fuel_for_heating construction_materials FALSE TRUE FALSE TRUE FALSE TRUE FALSE TRUE TRUE FALSE TRUE TRUE TRUE TRUE EQCsmbjMnjuftNdDKBDLAQYOxIcpSuSHFoRbTQ JrejDYObBkME EYkPVsIUToAWUbSDsFhTDRJNBQBOSebGEbrpxdaGfaDIn yes_soap_is_not_shown refuse_to_answer ekdkiKGmPbKpgIjtFWTe lzpZvhyPkMmJCYR UA14 UA14112 UKR4424886001 EN_3 yes 5a306cd2-b15f-404e4a-969998-e05916a38b27 2022-12-20T14:12:38+0100 2022-12-20T13:58:01+0100 deviceID00000008 mariupol mari_002 yes yaePuvHycFSlTfduzAodLxEUOIszdvXFfzerXGrTUinITzGQKlMvpQQaFiiDCmnxnBlBpBvgEH NVLQXcvKfFUAUHDifx yes GTFBkZMwHbFvPfhk cVoXK miulDzzbkeQiSXEmgrNXWWQiM no no male 23 20 male single no unemployed veteran_of_war_ato family_with_foster_children chronic_illness other_specify TRUE FALSE FALSE TRUE TRUE FALSE FALSE TRUE TRUE TRUE MfpLVOjyreXobAFJDVxgmAjm diabetes_does_not_need_insulin neurological genitourinary_system_diseases endocrine_system_thyroid_gland_and_other_diseases FALSE FALSE FALSE TRUE FALSE FALSE FALSE TRUE FALSE FALSE TRUE TRUE FALSE wU g retired_but_still_working zczLkIBYGjsLLkjdHrFV EFt BGlJRk other_specify YKDMRAUS yFeJgNeXIBdUcICdBVloXsjNPbXESkaeoggMYBIWlJcmQUsYeDUSGyvp CcKB construction FtFZbFjImlngbCkCTFsKLMDhcWrOMArkgBtY r 24 dont_know_ns refuse_to_answer dont_know_ns no none 0 0 22 23 0 0 0 0 male in_education_doesnt_work heJlM GZbE jgwnOslGayBGtBZiENGdvWfTvyZpqBNAtdykofHPS LNQiCiHKUSpIowmZmadYJMPCnRaQABPAqKqtFMm 20 0 0 0 0 displaced_but_does_not_have_idp_status 2017 zyzAgat SRqTJzRtxZtOVqwisPcfXXBSRCFNVLqZ rahXPUKX uSJgCFTA solid_finished_apartment UHOuEnFwdgwCuTvlrEjiWYPIxpvuKRDTeKhlleVJQMPbEKz jvGZMLjmeOkdKpo ClvDEmC no_hotel tUyevzrTOx OUBJHTZwuNddMZTacQCCDCbjEpaSVzItWOZDQXbjyGkFTjmukhJuvymLMLO no_issues leaks_during_light_rain_snow leaks_during_heavy_rain_snow presence_of_dirt_or_debris_removable none_of_the_above TRUE FALSE TRUE TRUE FALSE TRUE FALSE TRUE FALSE FALSE vQfDGegALQUJK vuPkfKMioCIePnWkDYiHjpBXGJvDGUDgtOZbFcXPfwRsLWKCNmymrryhQSFKLJtkoLJEjIva none broken_or_cracked_windows exterior_doors_broken_unable_to_shut_properly exterior_doors_or_windows_missing damaged_floors severe_structural_damage_and_unsafe_for_living foundation_damaged_or_shifted gas_water_or_sewage_system_damaged electricity_supply_line_damaged_and_not_functional other_specify_none_of_the_above TRUE FALSE FALSE TRUE TRUE TRUE FALSE FALSE FALSE TRUE TRUE FALSE TRUE TRUE TRUE TRUE FALSE ljjQmHKeiawvLpqNxJZXEjU WCzHAntBPFsS zqnaHixS owDgMZQsQxKZyqbIOrPgzBwCvngNHhpUHitklSoLfz PqD dont_know_ns dont_know_ns yes yes 24 refuse_to_answer yes_within_the_next_3_months hh_has_all_items FALSE FALSE FALSE TRUE bedsheets towel winter_jacket thick_socks warm_scarf thermal_underwear child_warm_clothing each_member_has_all_items FALSE TRUE TRUE FALSE TRUE FALSE TRUE FALSE TRUE TRUE FALSE TRUE TRUE child_diapers sanitary_pads none_needed FALSE TRUE TRUE TRUE centralised_piped_cold_water_supply none FALSE FALSE TRUE FALSE FALSE TRUE 19 DBugU bJGuAbHSnZYdDQQCDTHBSFsca xtwWRPgtPpIxItQOh IpBGmh 17 ardefxaJaeva electricity gas kerosene briquettes_not_coal other_specify FALSE TRUE TRUE TRUE FALSE FALSE TRUE FALSE TRUE cZaDcimbPz JKktrIlQYyIvKliKtoaGAeKdmAVXenEubZEBxySUstbLuuWiAWoANzuSxZ 20.05476 21.66300 17.72283 20.96809 yes yes_infrequently_irregularly not_connected_to_this_service bottled_water_water_purchased_in_bottles qVqLPQHvfvSEb do_not_process_purify boiling dont_know_ns TRUE FALSE FALSE FALSE FALSE TRUE FALSE FALSE TRUE FALSE WxeVY dont_know_ns UpsFlSFMJuThoASBTeteZPuMuUVsZxr public_well_or_boreholes_shared_access NpepGpHzrauocJOLeoahReLqYdvnOQVRGRwRcVLqqXZfmYNcXMsuzUEHAE every_day 16 plastic_bottles a_bucket_without_a_lid a_barrel_tank we_fill_in_the_bathtub refuse_to_answer FALSE TRUE FALSE FALSE TRUE FALSE TRUE TRUE FALSE FALSE TRUE SUFjzCO GVbsTS drinking cooking other_domestic_purposes none_of_the_previous dont_know_ns TRUE TRUE FALSE TRUE TRUE TRUE open_hole URVpGxzxdxORXOhLzOCgPHCVHnogwnCfBHiHcfbrmQAlAxIOuDQ not_applicable we_sort_garbage_and_submit_it_for_recycling 6 7 7 4 5 3 6 2 3 3 2 0_no 2_sometimes_3_10 1_yes 2_sometimes_3_10 1_yes 3_often_10plus_times no_but_needed no_already_done_so_cant_do_it_anymore no_but_needed no_already_done_so_cant_do_it_anymore no_but_needed yes no_was_not_needed no_but_needed no_but_needed yes no_was_not_needed yes none school specialized_school_for_children_with_disabilities vocational_school TRUE FALSE TRUE FALSE TRUE TRUE school_too_far_and_no_transport cannot_afford_supplies children_working_at_home children_in_paid_employment children_has_disability_that_school_does_not_have_infrastructure_for other_specify TRUE TRUE FALSE TRUE TRUE TRUE TRUE cqIE 17 21 19 21 20 19 20 19 19 19 23 21 17 20 23 18 19 19 22 21 20 dont_know_ns 19 20 20 22 23 16 school_is_damaged health_issues too_expensive_school_fees_supplies_transport_etc transport_unavavailable other_specify refuse_to_answer FALSE FALSE FALSE FALSE TRUE TRUE FALSE TRUE TRUE FALSE TRUE TRUE fAAdhZzggqvMOLuqjiZbpxahZZaVKjvFsPgEOzR refuse_to_answer distance_to_school quality_of_teaching_staff quantity_of_teaching_staff lack_of_pss price_for_service lack_of_medical_support other_specify FALSE TRUE TRUE TRUE TRUE TRUE FALSE FALSE TRUE FALSE FALSE TRUE h DJWZbBPDoyLEAcLqYVzsFxlQETqHpAcelGOITGukBfdGJKHLo uxos shelling shooting wildanimals_stray_dogs other_specify FALSE TRUE TRUE TRUE FALSE FALSE TRUE TRUE lRhhHpUIcWpWNsbhEsfBobCJZgoXqNceWYqMriDxMMdLzmFDbOhvDsdbrMRx AamIsGSHjALnSjxjhYrGQoNBtheCC none uxos_on_school_grounds shooting_in_the_vicinity_of_the_school other_specify TRUE TRUE FALSE TRUE FALSE FALSE TRUE XoeNTskfMduBNXKkWpvi yes yes 19 xcEpMcATluBfhKsGqMmWnptttJlX paediatrics outpatient_care laboratory dont_know_ns none_of_listed FALSE TRUE FALSE FALSE FALSE FALSE FALSE TRUE TRUE FALSE FALSE FALSE FALSE TRUE TRUE yes never lack_of_facilities cost_of_travel_to_facility lack_of_documents irregular_presence_of_doctors required_a_covid_test_prior_to_treatment unable_to_leave_the_house_due_to_covid19 other_specify long_queues TRUE FALSE FALSE TRUE TRUE FALSE FALSE FALSE FALSE TRUE TRUE TRUE TRUE FALSE FALSE TRUE refuse_to_answer refuse_to_answer dont_know_ns yes less_than_30_mins yes no_problems items_poor_quality market_damaged distance other_specify TRUE FALSE FALSE FALSE TRUE TRUE TRUE FALSE TRUE CSNBVsOHYaZMSuFTnbOX cereals_grains_bread_pasta vegetables_and_leaves_tomato_lettuce_spinach_carrot meat_or_fish_chicken_pork_beef_fish sugar_or_sweets_cakes_chocolate_sugary_cold_drinks condiments_and_spices_tea_coffee_spices TRUE FALSE TRUE FALSE TRUE FALSE FALSE FALSE FALSE TRUE TRUE FALSE ayvGmpBhFpcgCNwDgVLKcwEcNwbqtjkFvuTKObKxIyGnUDJPysPyaqgBBj 21 17 refuse_to_answer 19 TmTbguqQbAPWdOBftjZALxBPBmVHN 16 no yes_in_our_possession 20 yes yes_in_our_possession authorities_in_non_government_controlled_area 19 yes dont_know_ns dont_know_ns no no no 1_not_at_all movement_and_access_constraints psychological_safety FALSE TRUE TRUE FALSE FALSE VPixG gxeKeenylzsorTLcuoTQbiqKgpEFnawYhnghMTOnGqVHWKrpWNrQXYbPHWfn state_emergency_services mine_clearance_ngo police to_relatives FALSE TRUE TRUE TRUE FALSE TRUE FALSE FALSE gCMeRsuADQNqAIophquiIYYURieQoYBDnSMlYxjDPLwBYuMnLwhkgXeYcTxEyIGGpwOOZgnKdWEEwdWnD loss_of_or_diminished_access_to_education sickness_of_household_members restriction_in_movement breaking_up_with_family_or_relatives FALSE FALSE FALSE TRUE FALSE TRUE FALSE FALSE FALSE TRUE TRUE FALSE TKDkjIsjjkuCnuXXKD no_no_action_taken_cannot_select_with_any_other_option reducing_movement_outside_the_house praying_to_god staying_away_from_animals other_specify dont_know TRUE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE TRUE TRUE TRUE ogMeRToUuyYWaIbbBxxQxXdYDAbtQDkaXEkRmHecCjvtzQivVpNDehPCVpFx refuse_to_answer yes refuse_to_answer yes refuse_to_answer no no no no yes refuse_to_answer no refuse_to_answer refuse_to_answer no no need_to_repay_debt psychosocial_support fuel_for_heating none house_repairs FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE FALSE TRUE TRUE TRUE FALSE TRUE gfZbdLvjdpjIcMCeSyVfBjFExpFiUBBbzKNUqmOssQbFHtzyjomPujwthrANcHAwInpERuvUGtOrHkBsKjnyhsesg dont_know_ns no yes refuse_to_answer refuse_to_answer dont_know_ns how_to_register_for_aid how_to_get_water how_to_stay_safe_to_prevent_attack_harassment how_to_access_education how_to_find_work FALSE TRUE TRUE FALSE FALSE FALSE FALSE TRUE TRUE TRUE FALSE FALSE ziQYPR aid_workers_from_international_ngos u CnQkKMiGlUjyeyi EwdMSbpXAuhKciehudykALIev xQUcVLMkIPPznsKrqKfSdohzJqHEwGIHuiKuFO magazines VCsLbaPCVfwcfIdbqfakwezMKDzMPbvasNRFhisWYe inkind_food physical_cash cash_via_prepaid_cards cash_via_mobile_money vouchers services_eg_healthcare_education_etc prefer_not_to_answer fuel_for_heating FALSE TRUE FALSE TRUE FALSE TRUE TRUE TRUE TRUE FALSE FALSE TRUE TRUE FALSE kjzTNiqdMh dont_know_refuse_to_answer no vItluYwTUYrLBTjDh iANWzbylUhOqGrEe EIXxaFASjYjNGxUYJmKUXQMqPoOaVennuyywCTbAlTEaVExiVQJDdtPD UA14 UA44248 UKR1421555100 HE_2 no a8cbd490-a8c9-41404c-868589-e1a47b20d9f6 2022-12-20T12:01:40+0100 2022-12-20T12:25:22+0100 deviceID00000005 sloviansk mari_008 yes pUCRaHlgkOnHnkHDQRGdjKRUhICjiamwAQxStvvYWyBlqwVpTwAcD iXzbMafi nQlGqrTdUdjnSVTDBIq yes sbEYuTcCsdoqVcBy yes no male 20 21 female married older_person disability_not_including_chronic_illness family_with_3_or_more_children family_with_foster_children chronic_illness other_specify FALSE TRUE TRUE FALSE FALSE FALSE TRUE TRUE TRUE TRUE rGzrxdwdLzXetaGOhkWAkCrSMaCdnCoNL QnCGaIpHINSWMYmgWeKKUuYvYDWrffaNTzWOKLbKqvdLiWTqLLdCpee cardiovascular_disease diabetes_need_insulin cancer sensory_disorder genitourinary_system_diseases endocrine_system_thyroid_gland_and_other_diseases other_specify FALSE TRUE TRUE FALSE FALSE FALSE TRUE FALSE TRUE FALSE TRUE TRUE TRUE apHQdaGNBgwwpLMfhQZeIWLYHJp CaQadsWjBmYGOYieoZMRvofvUuXXTNfuAnCL retired_not_working jCwQFntiyDXJoUpvvouAMpVZkKRqlyVqPdaKEzrmr pay_too_low kBGvgBVBhyFiqeaRvsJViVifihxwkNNDJNbYDkjQgC wvDhlvL other_specify xkLaZKWcUXJyzXPQHmKVfQJowNHAWshXM 22 dont_know_ns refuse_to_answer yes no complete_higher 0 0 21 19 0 0 0 0 male unemployed_and_actively_looking_for_a_job_in_the_last_30_days reqVihKdyXHByKXuaROmtGOYCNYvcKmFz 20 0 0 0 0 refuse_to_answer 2020 paNtPHLsLYDXDFFC solid_finished_apartment no_rented_accommodation CKm lack_of_insulation_from_cold leaks_during_light_rain_snow leaks_during_heavy_rain_snow limited_ventilation_less_than_05m2_ventilation_in_each_room_including_kitchen none_of_the_above other_specify FALSE TRUE TRUE TRUE TRUE FALSE FALSE TRUE TRUE FALSE bXFfuzmIaWqNBdDWGOZHepbfheEQoyNTTgbZyUJZrTO broken_or_cracked_windows exterior_doors_broken_unable_to_shut_properly large_cracks_openings_in_most_walls some_walls_fully_collapsed severe_structural_damage_and_unsafe_for_living foundation_damaged_or_shifted gas_water_or_sewage_system_damaged other_specify_none_of_the_above FALSE FALSE FALSE TRUE TRUE FALSE TRUE FALSE TRUE FALSE TRUE FALSE TRUE TRUE FALSE TRUE FALSE BWUGJPmiJxKJwqOOJGtXIbPzPgKsRoaLPSKdfuvDzZB yes no dont_know_ns no 22 no no functional_heater_movable FALSE FALSE TRUE FALSE mattress bedsheets thick_socks warm_gloves warm_scarf child_warm_clothing each_member_has_all_items TRUE TRUE FALSE FALSE FALSE FALSE TRUE TRUE TRUE FALSE FALSE TRUE TRUE child_diapers FALSE TRUE FALSE FALSE centralised_piped_hot_water_supply centralised_piped_cold_water_supply none FALSE TRUE TRUE FALSE FALSE TRUE 20 MyYIDowbumIcTaThlVKG prPYBOMuLiK vYzynBsJAZ bXWNG krl ahvdc 20 iZOwwxaxxdHwSBZHIJplyvKLYAIddpXRBmkQSGgf central_heating electricity gas coal other_specify TRUE TRUE TRUE FALSE FALSE TRUE FALSE FALSE TRUE aYfZNBXfsxMGLcfqsgCTaWzPMMVPjmShhsXIdipeCcbBcbODli 21.99794 20.40784 20.45563 22.11164 yes yes_daily_every_day yes_daily_every_day public_well_or_boreholes_shared_access ZiJyGOHnGtngFujwylGFbTloJwlbVF nCFTzi do_not_process_purify water_precipitation filtering_the_water_pitcher_filter filtering_the_water_reverse_osmosis_filter other_specify dont_know_ns TRUE FALSE TRUE TRUE TRUE FALSE FALSE TRUE TRUE FALSE sSQszBpBDbNFwNQUTlVEarlFFPxrinODGcNenMzlXhoeBxzMiLKUyOUzDVnLZzTOLXHDm no_need CWngDZufofGFAZbXyQTwaT bottled_water_water_purchased_in_bottles uYLxeRALJfuHMrkYritrsrXuWmEbxOwcNCcjOCETU 2_3_times_a_week 23 do_not_store_water plastic_bottles glass_bottles a_bucket_with_a_lid a_bucket_without_a_lid a_barrel_tank we_fill_in_the_bathtub other_specify refuse_to_answer TRUE TRUE TRUE TRUE TRUE FALSE TRUE TRUE TRUE FALSE TRUE bkPUylaEsJNWSmOQSwFkznlpnAWLLTyseWpHTRdszEFgKYoZRvcpVBpyjBYewZmdblBHAHL drinking cooking personal_hygiene dont_know_ns TRUE TRUE TRUE FALSE FALSE TRUE dont_know_refuse_to_answer sg Qy refuse_to_answer refuse_to_answer 6 2 2 7 5 5 6 0 2 5 6 0_no 3_often_10plus_times 1_yes 3_often_10plus_times 1_yes 1_rarely_12 no_but_needed no_already_done_so_cant_do_it_anymore no_was_not_needed yes no_was_not_needed yes no_was_not_needed no_but_needed yes yes no_but_needed yes none kindergarten TRUE TRUE FALSE FALSE FALSE FALSE children_at_home_as_carer children_working_at_home children_in_paid_employment children_has_disability_that_school_does_not_have_infrastructure_for other_specify FALSE FALSE TRUE TRUE TRUE TRUE TRUE BFbf HDIwTBpYqwx NRgblmjtwmJlDBtdPkMPCtPXBkpKNsCidRz DFTaDIHlEfuhzGKkcasjXwVfgXqGdaXEvrjoX 19 22 21 22 21 24 22 20 20 20 22 17 22 20 20 20 19 23 23 22 22 no 22 20 19 19 22 20 school_closed_other security_concerns_by_parent school_is_damaged family_personal_reasons transport_unavavailable other_specify FALSE TRUE FALSE TRUE TRUE FALSE TRUE FALSE TRUE FALSE TRUE FALSE CGgstIMilvqkiFryXqkPvOFmVwAbjYo 2_4_months no_problems distance_to_school quantity_of_teaching_staff lack_of_pss price_for_service conditions_of_the_venue overcrowded_classrooms school_is_unsafe problems_with_distance_learning_due_to_closure_of_school_for_covid_eg_bad_internet_connection other_specify TRUE TRUE FALSE TRUE TRUE TRUE TRUE TRUE FALSE TRUE TRUE TRUE cMekM cVkqXBR UMKkyqGkOMdBFARyNFgGOLELFyuEzfLPfhBPyGxPjQhiUbVYxvYn uxos shelling danger_at_checkpoints other_specify FALSE TRUE TRUE FALSE FALSE TRUE FALSE TRUE XaJL none shelling_in_the_vicinity_of_the_school military_presence_inside_of_schools other_specify TRUE FALSE TRUE FALSE TRUE FALSE TRUE FIJrHS refuse_to_answer refuse_to_answer 20 gNKCOoWDSgJuxJRWlPRRuJXSBmDDGulGFfMqQsNgbwgKwoKWZKMBGYkvIrqJDxmOwqgsTuifDdQCOULeYr ZJ paediatrics gastroentrology mental_health_care ear_nose_throat_ent ambulance inpatient_facility outpatient_care laboratory x_ray ultrasound post_trauma_rehabilitation dont_know_ns none_of_listed FALSE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE FALSE TRUE TRUE TRUE no dont_know_ns distance_to_facility security_problems_in_travelling_to_facility cost_of_appointment lack_of_referral_system irregular_presence_of_doctors FALSE FALSE TRUE FALSE FALSE TRUE TRUE TRUE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE TdeubOgLYYiYqtFhgCVUPQPRjpcVgQkVKUJtXaEiHmdtnAnZqxLFrkgQwewBOLkyTUzUmGAnLqx no dont_know_ns refuse_to_answer refuse_to_answer less_than_15_mins no items_poor_quality market_damaged distance other_specify FALSE FALSE FALSE FALSE TRUE TRUE TRUE FALSE TRUE XvyuuPbDpqBvzARHw PCKmAwkBkiApqKeubcgrwTFUaiCdEBP yNgWBIchJDujuBLDHG lwt roots_and_tubers_potato_onion_beet meat_or_fish_chicken_pork_beef_fish dairy_products oil_and_fat_salo_butter_sunflower_oil sugar_or_sweets_cakes_chocolate_sugary_cold_drinks other_specify FALSE TRUE FALSE FALSE TRUE FALSE FALSE TRUE TRUE TRUE FALSE TRUE KesUqdNcJPVqpVfPKrYxMtWnjb nkylQacnRusdjA yEHjlxBGmASjIOSG 19 23 no 24 bXGhEHiKECIVGiiSnyFFtTqoZvEZZJwsprPRAYbMmLH 20 dont_want_to_say yes_we_all_have_ids_but_they_are_not_in_our_possession 21 no dont_know refuse_to_answer 18 no no no yes yes yes 3_sometimes_i_need_to_change_my_behaviour_due_to_mines FALSE FALSE FALSE FALSE FALSE cfnRKIGKOtHgyvynzpJGdVAO administration_head_of_the_village) state_emergency_services mine_clearance_ngo army to_relatives dont_know_ns TRUE TRUE TRUE FALSE TRUE TRUE FALSE TRUE RrtdnwrZqZqtifrgJTmNqTZgbXqdvSuyPsWXUaHlzKshYOykvoBRZbgBbveciNFgp diminished_lost_source_of_income loss_of_or_severely_diminished_access_to_basic_services loss_of_or_diminished_access_to_clean_water_and_sanitation death_of_household_members no_covid19_impacts_on_my_household restriction_in_movement breaking_up_with_family_or_relatives psychological_deterioration TRUE FALSE TRUE FALSE TRUE FALSE TRUE FALSE TRUE TRUE TRUE TRUE jRXTuJXbihHQEVgzwsyeXNQvtjbXspAFjtyaB WXnGkyyYab LHMtfMSIiK no_no_action_taken_cannot_select_with_any_other_option stopping_handshakes_or_physical_contact keeping_distance_from_people avoiding_public_transport wearing_a_face_mask washing_hands_more_regularly keeping_surfaces_clean praying_to_god TRUE FALSE FALSE TRUE TRUE FALSE TRUE TRUE FALSE TRUE TRUE TRUE FALSE FALSE FALSE eMYGZH no no yes yes yes no yes no yes no no yes dont_know_ns refuse_to_answer yes no shelter_housing food livelihoods_support_employment drinking_water need_to_repay_debt psychosocial_support fuel_for_heating none TRUE TRUE FALSE FALSE TRUE TRUE FALSE TRUE FALSE TRUE TRUE TRUE FALSE FALSE cUZrcZJPLlVfYYKvhWWzvLFEykGAabrOsjMcPteltHHLgloWsqaN HnKmtJTJDApKzIy n refuse_to_answer yes dont_know_ns no yes yes how_to_register_for_aid how_to_get_shelter_accomodation_shelter_materials how_to_get_healthcare_medical_attention how_to_get_help_after_attack_or_harassment how_to_stay_safe_to_prevent_attack_harassment how_to_find_work how_to_provide_feedback_on_aid_you_are_receiving other FALSE TRUE FALSE FALSE TRUE TRUE TRUE TRUE FALSE TRUE TRUE TRUE NSFUFoBdUjNLqPSPbpHuGZzjYJjUtrnmHLxEoeWEftnwMLTQpbMQuDkrbmCdzSxGTaJ BcESTyKByjRPtKmTuIQ friends_family_members yyERlxVzvtjGiawzMdhRmEcbnLmsObCrahpFgYFdaGgPpUaXPCDSiWyIiHTlD wGqirulUdlOGbRRKoHbjYzReJRVP billboards_posters_leaflets eu MQDsPRFWairMNFpdKHwBYx clMmaorPzBQNfIFF TTGIAckzX BOrDVuuUFFTrFG BedVvmbvuZWXsvAAeypYXerTNV do_not_want_to_receive_humanitarian_assistance inkind_food inkind_nfis physical_cash cash_via_mobile_money services_eg_healthcare_education_etc other_please_specify dont_know fuel_for_heating construction_materials TRUE TRUE TRUE TRUE FALSE FALSE TRUE FALSE TRUE TRUE TRUE FALSE TRUE TRUE sPDHEbT LkEGOuKcKjYCqqoEknlupGDSckQgLRWpMunhvXLInXawZTz yes_soap_is_shown refuse_to_answer oXqkyStdBCRfBQzHQXAGrH mTCJJrDrVVyJv UA44 UA14102 UKR1421588202 HF_3 no e69417ac-64e2-484246-bbb4bc-c059b31d62e4 2022-12-20T13:38:39+0100 2022-12-20T13:09:19+0100 deviceID00000009 sloviansk slov_003 yes EJZcCewHkOSRAWIjFGeiDlOCqIPLdXgRYhGsCoMQBe no oDZQUATVYcbenKGINKQxhajGoaSlHhwJYjjOXzQVLGpkXreWQFvjAhYpzwVQrSNbVuYSG yes yes female 18 20 male separated_married_but_not_living_together no disability_not_including_chronic_illness family_with_foster_children chronic_illness TRUE FALSE TRUE FALSE FALSE FALSE FALSE TRUE TRUE FALSE NtzdmSUBFjzrgHaVYn tQZxzSaH HwnnkTVwYTiPNLARgvRVvDaqcNPeBkaGNoHUlwBfRScfANSGXfJdsOngrO blood_pressure_diseases cardiovascular_disease diabetes_need_insulin diabetes_does_not_need_insulin chronic_respiratory_condition musculoskeletal_system_and_joints cancer neurological TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE FALSE FALSE FALSE FALSE FALSE OQEWEIymRVfPXZTWcMfM nZkINhXydCQitiyYW other_specify FCcZbBmMJoqzdoSKtXIFMrnxuXyLIJvZlUiUZfqyOgGurcexjYHgMdQfEnuOnZJFrjw cost_cutting_by_employer OwaguIBHVtK other_specify EKxJmHqQHvmpFpTULEbPDNQlLPtagYflxSuDvjF 17 no yes yes no complete_secondary 0 1 20 18 1 0 0 1 female unemployed_and_actively_looking_for_a_job_in_the_last_30_days xXxDKiEWYbsqbHftdcXQFsUUwIgKwlLGEbrthRMtrAXUrSciQhAwfGwYEukCLrlWPXijAdIZLGYlMAbAQ 19 1 0 0 1 no 2015 pO BxMRXecH dont_know_refuse_to_answer vaPYnWnleLhEqGygoLmjZLW other_specify kfAuGmKAj QElMBflcXpjDHTlcZQPxiHLZOcSbnnTknPQNbvmdUg lack_of_insulation_from_cold presence_of_dirt_or_debris_removable other_specify dont_know FALSE TRUE FALSE FALSE FALSE TRUE FALSE FALSE TRUE TRUE rYlcFBvLu nPEPPJhS broken_or_cracked_windows exterior_doors_broken_unable_to_shut_properly some_walls_fully_collapsed damaged_floors severe_structural_damage_and_unsafe_for_living FALSE FALSE FALSE TRUE TRUE FALSE FALSE FALSE TRUE TRUE TRUE FALSE FALSE FALSE FALSE FALSE FALSE qMrXPSvo tfhWuWwnbnkmriWgrcPDahNTqLElsOZcrbxXtCNNcLNkslavYMSwJOOTYHZdftJxAZtimQwkxQCEUHkXqRJGsdLo dont_know_ns dont_know_ns dont_know_ns yes 22 yes yes_after_3_months refigerator functional_stove hh_has_all_items TRUE TRUE FALSE TRUE mattress warm_scarf adult_warm_clothing each_member_has_all_items TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE FALSE TRUE FALSE TRUE child_diapers FALSE TRUE FALSE FALSE central_heating centralised_piped_cold_water_supply none TRUE FALSE TRUE FALSE FALSE TRUE 19 vLsrXxoxdconFPNVP 20 iYbHQLTSOztOzezEZpYinpHUWsQFauUAhpVxpdFIB central_heating briquettes_not_coal briquettes_coal TRUE FALSE FALSE FALSE FALSE FALSE TRUE TRUE FALSE mXKKTRWeTwe bOzhvAoilpbkKjcYmBDZnwtANUqImtWvaWSykfUzIHTrtRCsE 23.47583 20.96755 18.93947 22.38780 yes yes_infrequently_irregularly dont_know_ns bottled_water_water_purchased_in_bottles MJAkmeFFancCSTLUsOBmRyC tS water_precipitation filtering_the_water_pitcher_filter filtering_the_water_reverse_osmosis_filter other_specify dont_know_ns FALSE FALSE TRUE TRUE TRUE FALSE FALSE TRUE TRUE FALSE VxIJkdaQql qZbZoYaAJVhUAopJrRyfOpeGpnIjZYLsrLITorrAiE ugz wxqaCoNHWrnCnzZZAv no_need LHUHOSzmMSTs UvkZLfTecmmEWHawECFEaSbWoYffJfZLCfVW water_from_water_kiosk_booth_with_water_for_bottling ZzYnTMapfwMZMRUDFrGTetchNkYkDarIAHNADYrOfgE every_day 19 glass_bottles a_bucket_with_a_lid a_canister dont_know_ns FALSE FALSE TRUE TRUE FALSE TRUE FALSE FALSE FALSE TRUE FALSE QfdBGEqyRgXKJZCNjfSg TCDFOArWDnQgHIdwlpAYBDDfQC cooking other_domestic_purposes none_of_the_previous FALSE TRUE FALSE TRUE TRUE FALSE pit_vip_toilet bFVaxdYddpiXErJEv no refuse_to_answer 7 6 1 0 3 4 4 2 0 5 2 1_yes 1_rarely_1_2 1_yes 3_often_10plus_times 1_yes 1_rarely_12 no_already_done_so_cant_do_it_anymore yes no_was_not_needed yes no_already_done_so_cant_do_it_anymore yes no_was_not_needed no_already_done_so_cant_do_it_anymore no_was_not_needed yes no_already_done_so_cant_do_it_anymore no_was_not_needed none kindergarten TRUE TRUE FALSE FALSE FALSE FALSE school_too_far_and_no_transport cannot_afford_supplies children_at_home_as_carer children_in_paid_employment other_specify TRUE TRUE TRUE FALSE TRUE FALSE TRUE Om AKSWkkHohpvEwEXcehZpDE SBpEJzwhFR 23 18 16 21 19 19 18 24 23 19 21 22 21 16 21 22 19 17 21 19 19 yes 21 20 19 24 20 20 school_closed_due_to_security school_closed_other insufficient_teachers security_concerns_by_parent school_is_damaged too_expensive_school_fees_supplies_transport_etc a_child_contributes_to_hh_income other_specify refuse_to_answer TRUE TRUE TRUE TRUE TRUE FALSE FALSE TRUE FALSE TRUE TRUE TRUE WEfEfIpCwaAQs refuse_to_answer no_problems quality_of_teaching_staff price_for_service conditions_of_the_venue lack_of_medical_support problems_with_distance_learning_due_to_closure_of_school_for_covid_eg_bad_internet_connection other_specify TRUE FALSE TRUE FALSE FALSE TRUE TRUE FALSE TRUE FALSE TRUE TRUE XUukhuKaRahuncdklzXkaqSEEymsohfoVdThMqcRhViFkprsFwTeFGJQFEaXJCyGT uxos shelling danger_at_checkpoints other_specify FALSE TRUE TRUE FALSE FALSE TRUE FALSE TRUE hshSN cvjRVYFTzfBuvWawimEsWryA hdcPrSmOsWuPZByW XDamiq JgTKrpYHLfiFIPddbw THeBvNY TM shelling_in_the_vicinity_of_the_school shooting_in_the_vicinity_of_the_school other_specify FALSE FALSE TRUE TRUE FALSE FALSE TRUE omzuEjtFAFFTAkfLbNPCYbAZyWeHUraVqMuNMFUYzoAhghrWpQpdtrngBcSMLDXsxdIqYdf yes no 21 xFmALZGjcUwOIzejAHdRDNvRDJHnujpbjQwAohirqBcRjrwDB paediatrics mental_health_care ear_nose_throat_ent chest_photofluorography post_trauma_rehabilitation dont_know_ns FALSE TRUE FALSE TRUE TRUE FALSE FALSE FALSE FALSE FALSE FALSE TRUE TRUE TRUE FALSE yes sometimes cost_of_medicine distance_to_facility cost_of_travel_to_facility lack_of_documents lack_of_referral_system required_a_covid_test_prior_to_treatment unable_to_leave_the_house_due_to_covid19 insufficient_qualifications_of_doctors long_queues FALSE TRUE TRUE TRUE TRUE FALSE FALSE TRUE FALSE FALSE TRUE TRUE FALSE FALSE TRUE TRUE byeLXvNzYdwisovkdPZXRjZPsgGhM RJdZAlKmxiIrxCMgGmixMfOLlKRbPFapzzuDFxO yes refuse_to_answer dont_know_ns yes less_than_15_mins no opening_hours_insufficient items_not_available items_too_expensive other_specify FALSE TRUE TRUE TRUE FALSE FALSE FALSE FALSE TRUE HjERyEIwvhVqdoOKnU mfVW ewMiTorIYjIdOukBTiVjCwlbczEZhiyckD meat_or_fish_chicken_pork_beef_fish eggs pulses_nuts_seeds_lentils_beans_nuts dairy_products oil_and_fat_salo_butter_sunflower_oil other_specify FALSE FALSE FALSE FALSE TRUE TRUE TRUE TRUE TRUE FALSE FALSE TRUE VoDkKDlMPRhuAQvAqDVaVLNqqUNgkydJVlJLtbrTMPlfeteovXsJH qZWq 19 19 refuse_to_answer 19 pdrmkEjRJPDbchlxDx 18 dont_know yes_in_our_possession 21 no no_some_hh_members_are_missing_birth_certificates government_of_ukraine 21 no yes dont_know_ns no yes dont_know 5_they_severely_affect_my_everyday_life movement_and_access_constraints psychological_safety has_affected_hh_budget FALSE TRUE TRUE TRUE FALSE AHAYiSdCSfhyMHE DYAUyqC PljuWcjNWtArtyXYObiy state_emergency_services to_relatives FALSE TRUE FALSE FALSE FALSE TRUE FALSE FALSE VXZrwPBw limited_access_to_food loss_of_or_diminished_access_to_education death_of_household_members psychological_deterioration FALSE TRUE FALSE TRUE FALSE FALSE TRUE FALSE FALSE FALSE FALSE TRUE eM avoiding_public_places_and_gatherings avoiding_public_transport wearing_gloves washing_hands_more_regularly keeping_surfaces_clean praying_to_god dont_know FALSE FALSE FALSE FALSE FALSE TRUE TRUE FALSE TRUE TRUE TRUE TRUE FALSE FALSE TRUE iOTG no refuse_to_answer no refuse_to_answer yes refuse_to_answer no yes refuse_to_answer no no yes no refuse_to_answer dont_know_ns no healthcare livelihoods_support_employment drinking_water hygiene_nfis_eg_soap_sanitary_pads_and_sanitation_services_eg_latrines psychosocial_support fuel_for_heating none FALSE FALSE TRUE FALSE TRUE TRUE TRUE FALSE FALSE TRUE TRUE TRUE FALSE FALSE AkWIBKpgmzuVKgkbBpRYmULnxZx yes yes dont_know_ns dont_know_ns dont_know_ns no dont_want_to_get_information how_to_register_for_aid how_to_get_food how_to_get_shelter_accomodation_shelter_materials how_to_get_healthcare_medical_attention how_to_find_work TRUE TRUE FALSE TRUE TRUE TRUE FALSE FALSE FALSE TRUE FALSE FALSE PulXUrlicfisU aid_workers_from_local_ngos_or_civil_society_organisations XYpnxyRnZhbEtlxXlTkeLCPBvuYbM GdmoKacheUwnfpCKPmAnjpbXZCkytpdonFIYvZWrMOmLwIeVtBwzdVcAZFFahouNguREH other HEkLeilorvfypJCvafOKatWyelKfaWnvUrlyJCUJSzPxDVRNTVIHtGUPACpgnELvzQXYpnRoUTJQMgvooeBSoblZUGYnG inkind_food physical_cash cash_via_prepaid_cards cash_via_mobile_money prefer_not_to_answer fuel_for_heating construction_materials FALSE TRUE FALSE TRUE FALSE TRUE TRUE FALSE FALSE FALSE FALSE TRUE TRUE TRUE SephJILKsYSKUsVPtMjUzQUzVqCLUvMBoXRqgP no yes mlC DcqTEZMLWr hBusZsEvZ RgpTOWiFsHhjjQNxLHyZGFBwNeyBm UA44 UA14112 UKR1421584001 JH_1 no 3b9ac6e4-056f-44424f-a8aaab-bd9256ca10ef 2022-12-20T13:43:59+0100 2022-12-20T12:11:53+0100 deviceID00000006 mariupol slov_009 no qNLlnwZFGQAGwuRRUqiqXBnYMgDZJuvASKTvnJLZjAiBVNgivWSVenzo lHJdgxGWFgLhaFagiXFDX yes VFhqwjPCqkOxcUUlEZCoJqvjSdNWgcPYijIHwSDAqxsLLUSScUrPo rpNZkyjfxn yes yes female 19 21 male widowed no disability_not_including_chronic_illness veteran_of_war_ato TRUE FALSE TRUE FALSE TRUE FALSE FALSE FALSE FALSE FALSE K diabetes_need_insulin musculoskeletal_system_and_joints neurological sensory_disorder other_specify FALSE FALSE TRUE FALSE FALSE TRUE FALSE TRUE TRUE FALSE FALSE FALSE TRUE jRQhSKcMGQobaFYlYHBtet paid_work w end_of_the_contract jHGoanmnPwxVTyVNdiUmuOLeYhKkjTcCIEiuVgiYoDrUPKhgYBDmOVQlNKOESwEL jC health_care cKezxvKIwxpmlIZHTPPTUUoxdAmupMFGxtduTnkXBLGZevVwJlteEzectPFrGbouoMmCECOVZQDJcm 21 dont_know_ns yes dont_know_ns no basic_secondary 0 0 21 21 0 0 0 0 female in_education_doesnt_work bhniavgzOgmWbTgXZHajzH 18 0 0 0 0 displaced_but_does_not_have_idp_status 2015 kcbYtBAYQjbFLihUloOOOVu none_sleeping_in_open EqdaDxBdEoXRuwGZTTuWcPEuriyAGoAgBXhGTWe no_but_free_accommodation_paying_utilities kYbyCc no_issues lack_of_insulation_from_cold leaks_during_light_rain_snow leaks_during_heavy_rain_snow presence_of_dirt_or_debris_removable other_specify dont_know TRUE TRUE TRUE TRUE FALSE TRUE FALSE FALSE TRUE TRUE om tGJcDhyDuMBhcPm AbAKueNzEjM mmhNeBKfjFkKobxnIKzwRGmIVFSCFbGkSSaQRPiGChyTjsjDiAzdgtvpQTFYVN none roof_partially_collapsed broken_or_cracked_windows exterior_doors_broken_unable_to_shut_properly exterior_doors_or_windows_missing some_walls_fully_collapsed total_structural_collapse foundation_damaged_or_shifted gas_water_or_sewage_system_damaged TRUE FALSE TRUE TRUE TRUE TRUE FALSE FALSE TRUE FALSE FALSE TRUE TRUE TRUE FALSE FALSE FALSE eWZJpzIsDCpnIhiCMDhpIjSK TBTkUJkVdDFpXwRWlGvNCHKJTwSgRGCPwkvTbnpCDhcbNFdwlUkOvruppzjmiTymlVbzMshvo dont_know_ns no yes yes 19 yes yes_within_the_next_3_months functional_stove FALSE TRUE FALSE FALSE mattress warm_winter_boots warm_gloves child_warm_clothing each_member_has_all_items TRUE FALSE FALSE FALSE FALSE TRUE FALSE TRUE FALSE FALSE FALSE TRUE TRUE adult_diapers child_diapers sanitary_pads none_needed TRUE TRUE TRUE TRUE central_heating centralised_piped_cold_water_supply gas TRUE FALSE TRUE FALSE TRUE FALSE 23 IRveYtcrYBFSGGRDlfgrrUiofvGpnfkAWbJE 20 EZMKGs QEKJUoOjWoXaUEmMKMRmRNNiCBBFhmRclEUHeHuxA electricity wood coal briquettes_not_coal briquettes_coal FALSE TRUE FALSE FALSE TRUE TRUE TRUE TRUE FALSE tNVYRomGiZFwIfSyMHAeUQKXAUSJdSgKnCKgLcDHvsFtmgaQVheEkZFqtVZHrXMeTWzRwQhhoGXIdqFZSNWbdOFE 20.73193 21.90144 22.66524 20.55349 no yes_weekly_min_once_per_week no_shortages trucked_in_water_truck_with_a_tank_etc AQirRwkquLfKljCVGR RSPlfqzoXyjpSKIeZHwZrc IRRQUNY cleaning_with_chemicals_chlorination boiling other_specify dont_know_ns FALSE TRUE FALSE FALSE FALSE TRUE FALSE TRUE TRUE FALSE Xzexzyn rIj CY no_need DFppNvwxxnaKgzwC UgNQFhYZDelZbdRTUVQhJIGzQiTfwfG JRdfQOs KmZIaWsrzmYHfaWr trucked_in_water_truck_with_a_tank_etc eKVGSUJwsBxTXIkRdXXTLRzWoQBpqIsphRnIeykLhSJEVZaqkpfAA vKmw diHLUfB NNwtLZZUcjwzzRzkULSbQMTv 1_time_a_week 20 do_not_store_water a_bucket_with_a_lid a_bucket_without_a_lid a_barrel_tank other_specify refuse_to_answer TRUE FALSE FALSE TRUE TRUE FALSE TRUE FALSE TRUE FALSE TRUE efXOVHBazFdggynAJUhDsjvLPaJodHRzQASixFzeXKry drinking cooking personal_hygiene other_domestic_purposes none_of_the_previous dont_know_ns TRUE TRUE TRUE TRUE TRUE TRUE bucket_toilet vsHQtnvIgTTLYFVTVdsTJ AQuvWAEMsyqpC JdNLVWdbOvckodddpiclOZNG yes we_sort_garbage_and_submit_it_for_recycling 0 1 3 6 7 2 6 3 2 7 6 0_no 1_rarely_1_2 1_yes 2_sometimes_3_10 1_yes 3_often_10plus_times yes no_already_done_so_cant_do_it_anymore yes no_was_not_needed no_already_done_so_cant_do_it_anymore yes no_but_needed no_already_done_so_cant_do_it_anymore no_but_needed no_already_done_so_cant_do_it_anymore no_already_done_so_cant_do_it_anymore no_but_needed kindergarten school boarding_school specialized_school_for_children_with_disabilities FALSE TRUE TRUE TRUE TRUE FALSE school_too_far_and_no_transport cannot_afford_supplies children_at_home_as_carer children_in_paid_employment TRUE TRUE TRUE FALSE TRUE FALSE FALSE JPjfXfNADDbzndWaevHRHXKBAuPSypjTFYeVNZlWCpWMxUUWVkzQhxVBUhagBFmGY SgXGeTnewYpMFZnSkYwHgRLMs 19 20 21 23 20 17 19 21 18 18 22 20 19 23 22 18 23 22 19 21 18 yes 25 18 18 22 21 19 school_closed_other school_is_damaged too_expensive_school_fees_supplies_transport_etc transport_unavavailable refuse_to_answer FALSE TRUE FALSE FALSE TRUE FALSE FALSE TRUE TRUE FALSE FALSE TRUE kloRsUOUrseIigIGbMHqykigSvfxhEHYyoFPAAJJPFPqVXZrOPc KgaB 1_2_months no_problems distance_to_school quality_of_teaching_staff price_for_service overcrowded_classrooms school_is_unsafe problems_with_distance_learning_due_to_closure_of_school_for_covid_eg_bad_internet_connection other_specify TRUE TRUE TRUE FALSE FALSE TRUE FALSE TRUE FALSE TRUE TRUE TRUE XBYvDEme none uxos shooting wildanimals_stray_dogs TRUE TRUE FALSE TRUE FALSE FALSE TRUE FALSE lNXIskxaBaYtaWgdGpusDVnUZwucYZhTaAoMdloyvxAbUxjmLZNsIahH none uxos_on_school_grounds shelling_in_the_vicinity_of_the_school TRUE TRUE TRUE FALSE FALSE FALSE FALSE ZnHmVZgfyJnbapmXfViPjcxzelVVybKGGTnX yes refuse_to_answer 20 zxkP EfokdImktFPxpzChjsSnrWEbcEKOhuCbQtKkUhUyNZMgNpjjNnzaHRLTd GBiRQRA obstetricgynaecological mental_health_care ambulance inpatient_facility laboratory TRUE FALSE FALSE TRUE FALSE TRUE TRUE FALSE TRUE FALSE FALSE FALSE FALSE FALSE FALSE no often cost_of_travel_to_facility security_problems_in_travelling_to_facility cost_of_appointment required_a_covid_test_prior_to_treatment unable_to_leave_the_house_due_to_covid19 other_specify FALSE FALSE FALSE TRUE FALSE TRUE TRUE FALSE FALSE FALSE TRUE TRUE TRUE FALSE FALSE FALSE Tcr LUaLKYLWoxOAlnzrvuCggDSCAsISVfCdsyP lokpsXFdHwHHJAQyaPZpuycZYsncuvrALUsORoBgsuVzxjlfCTqlJ yes yes dont_know_ns yes less_than_30_mins no no_problems items_not_available items_too_expensive items_poor_quality security other_specify TRUE FALSE TRUE TRUE TRUE FALSE FALSE TRUE TRUE GZdrDnsiOPFCCinOIfeWMoiknSCdFIAPCghJapcMGcEVMDpPIeZxkimiwXprNdDBRuWsFX vegetables_and_leaves_tomato_lettuce_spinach_carrot meat_or_fish_chicken_pork_beef_fish eggs oil_and_fat_salo_butter_sunflower_oil sugar_or_sweets_cakes_chocolate_sugary_cold_drinks condiments_and_spices_tea_coffee_spices other_specify FALSE FALSE TRUE FALSE TRUE TRUE FALSE FALSE TRUE TRUE TRUE TRUE mEJglrnrYEJgQrpTfAws 18 20 refuse_to_answer 16 dccnnLWmQYOJPTxPzlGUzSNUQlyGpNKjergAiVz 20 yes yes_in_our_possession 17 no no_some_hh_members_are_missing_birth_certificates both 21 yes dont_know_ns no yes no dont_know 3_sometimes_i_need_to_change_my_behaviour_due_to_mines movement_and_access_constraints psychological_safety other_specify FALSE TRUE TRUE FALSE TRUE XviMCPYtOpKwSlfNuYHCodPDQkZUypmcXngEu administration_head_of_the_village) state_emergency_services police army other_specify TRUE TRUE FALSE TRUE TRUE FALSE TRUE FALSE pIHOwAYMIJLTfmGjjEMcxoRPobKBEoPwXmDWfEKiYlhROqpvAuEaBhaRFrpdGLAPsESvEsjsAH diminished_lost_source_of_income loss_of_or_severely_diminished_access_to_basic_services loss_of_or_diminished_access_to_education loss_of_or_diminished_access_to_clean_water_and_sanitation sickness_of_household_members breaking_up_with_family_or_relatives TRUE FALSE TRUE TRUE TRUE TRUE FALSE FALSE FALSE FALSE TRUE FALSE qcG no_no_action_taken_cannot_select_with_any_other_option keeping_distance_from_people avoiding_public_transport keeping_surfaces_clean praying_to_god other_specify TRUE FALSE FALSE FALSE TRUE FALSE TRUE FALSE FALSE FALSE TRUE TRUE FALSE TRUE FALSE nsOOSEJkvqUBeePF yes_other_non_covid_related_reason yes no yes yes yes no yes yes yes refuse_to_answer refuse_to_answer no yes yes refuse_to_answer healthcare livelihoods_support_employment education_for_children_under_18 psychosocial_support fuel_for_heating none house_repairs FALSE FALSE TRUE FALSE TRUE FALSE FALSE FALSE TRUE TRUE TRUE TRUE FALSE TRUE IjXmfmCrXkLuwjtgFiuDAK SWYJYNULod y yes dont_know_ns no yes refuse_to_answer refuse_to_answer dont_want_to_get_information how_to_register_for_aid how_to_get_food how_to_get_shelter_accomodation_shelter_materials how_to_get_healthcare_medical_attention how_to_stay_safe_to_prevent_attack_harassment TRUE TRUE FALSE TRUE TRUE TRUE FALSE TRUE FALSE FALSE FALSE FALSE ntaLLEuzJGsTBuccXhWbmu aid_workers_from_local_ngos_or_civil_society_organisations PvzojMSpEUTCaoEovHjSORuELnBkEeeSNNPIWJLC MYKfcWLOkhZEYOXexkDltgJrfn 1phone_call VJKqAvJIrfxIPfhpEbJXVSdteTxWFDJmdzCvXwRKjAlbiXNnBuELeUNMvWZhdBDzjMcsuXVrcQiSAWjiyugY inkind_food cash_via_bank_transfer cash_via_prepaid_cards cash_via_mobile_money vouchers services_eg_healthcare_education_etc other_please_specify prefer_not_to_answer FALSE TRUE FALSE FALSE TRUE TRUE TRUE TRUE TRUE TRUE FALSE TRUE FALSE FALSE byFAUymqbdUsrpBeHguLdhnbCdSxMFsnCEJzCmAclNyfWdgDlnokubsQHZqPExaypm dont_know_refuse_to_answer dont_know_ns RFKecZLsiahRHZ UA14 UA14138 UKR1423387401 DE_1 yes c2ba5f80-9485-45414d-b7babe-15e324d9fac8 2022-12-20T13:52:14+0100 2022-12-20T12:02:09+0100 deviceID00000008 sievero siev_010 no FGvihXhYWTNPMfWdYRQKCCeZekPIpIaAItgenLhYXzjHkPyTaAEHGkBWmwavBIEsknUTura no ZyCTpfmaQ JWZhxQsmiwBMwIKbbhn no yes female 17 21 male single older_person unemployed other_specify FALSE TRUE FALSE TRUE FALSE FALSE FALSE FALSE FALSE TRUE QIgcKfpfDHdX iGGXyEKRrmLXuuQ EnAYvrGdUGGGSMsEIzNtvLrJiwvftWqzymGaPknTtidSdqqHuCRRjFxH blood_pressure_diseases diabetes_does_not_need_insulin chronic_respiratory_condition musculoskeletal_system_and_joints cancer neurological sensory_disorder TRUE FALSE FALSE TRUE TRUE TRUE TRUE TRUE TRUE FALSE FALSE FALSE FALSE DwKYFosFKazWTaJfOQCEK retired_not_working tEojFruDQtYjFfQVBrrpiDFleCBPpVEbGBdLCEtPRJVcMN GWqlbVFQxiiYAeLCZebEUKyEoaG personal_family_reasons oxuSNexpmByJkbMNrzSrvlvVx education CtZzQuwyENEeoqYRHE 20 no yes dont_know_ns yes preschool 0 0 17 22 0 0 0 0 male in_paid_work_employee_self_employed_working_for_family_business i ynKgpEtoWtsksWHrOegaItnThRcUeQMMzUmNsyrSZWyMABHwlXELtlxC 24 0 0 0 0 no 2014 jmyRzjfsLjfhhSAXfltgTVxxOMKufQzdiKOTYOiQa BmXCLEN solid_finished_apartment ItExpczUPhifSDZ no_collective_centre oEuJznrovuypAaX HOiKpwrbYbhtaCJSDeiBzxPwkzfiTmyJRXuSrkibwgTtUclAcBiZqEv no_issues lack_of_insulation_from_cold leaks_during_light_rain_snow limited_ventilation_less_than_05m2_ventilation_in_each_room_including_kitchen presence_of_dirt_or_debris_removable none_of_the_above other_specify dont_know TRUE TRUE TRUE FALSE TRUE TRUE FALSE TRUE TRUE TRUE eagwHKO exterior_doors_broken_unable_to_shut_properly exterior_doors_or_windows_missing gas_water_or_sewage_system_damaged electricity_supply_line_damaged_and_not_functional dont_know_prefer_not_to_say FALSE FALSE FALSE FALSE TRUE TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE TRUE FALSE TRUE HmdmtB haddDexLC dont_know_ns dont_know_ns dont_know_ns dont_know_ns 20 no yes_after_3_months FALSE FALSE FALSE FALSE mattress bedsheets towel blanket winter_jacket thick_socks warm_scarf thermal_underwear adult_warm_clothing TRUE TRUE TRUE TRUE TRUE FALSE TRUE FALSE TRUE TRUE TRUE FALSE FALSE adult_diapers child_diapers sanitary_pads TRUE TRUE TRUE FALSE central_heating electricity TRUE FALSE FALSE TRUE FALSE FALSE 18 sVNBgdUGfvoI bxCfYtDOWbM CwOsvx asGDdvEgr 24 PfGa edTyhtttwGzcduloZCAOWdHZKmKoKQCQDRquSYhWJHLlbCfJSBDdMo FTrJXTezDXNGnlEMkdu electricity gas wood briquettes_not_coal briquettes_coal FALSE TRUE TRUE FALSE TRUE FALSE TRUE TRUE FALSE irukcbrrBQcFjaYQlxHEplbOBZVJegbqRTfAPLFji ORjyRRzVdumEhjEpOaQKZHqkHUuiP 19.39046 18.44298 19.20000 21.73805 refuse_to_answer difficult_to_say not_connected_to_this_service personal_well KjOrfzVnj aMCMLjSxSrrQYuypiRDkjGxjnoOhlZosSKRcoEUBRyrjDliQVqyUIuW water_precipitation filtering_the_water_pitcher_filter filtering_the_water_reverse_osmosis_filter refuse_to_answer FALSE FALSE TRUE TRUE TRUE FALSE FALSE FALSE FALSE TRUE ZzPlqgLYcMtBFpdEkBkMoTlYIeEqUO JdUZwqvMinXfUrzkVKbAuLgaqsKP we_cant_afford_necessary_means_filters_chemicals_for_chlorination eXhKujnIsOJCgFJDfzT other_specify akyHbtTnwVAnYLqVECcAvhWSAShmflNjCy 2_3_times_a_month 18 a_bucket_with_a_lid a_barrel_tank refuse_to_answer FALSE FALSE FALSE TRUE FALSE FALSE TRUE FALSE FALSE FALSE TRUE YTjXROqIJznWlhjoQdBvkMhuAbpwYzpZyWlcHSwNJuJblfhJxKaPWOAhfsSilWObxcqVwImPWDZQw cooking personal_hygiene none_of_the_previous FALSE TRUE TRUE FALSE TRUE FALSE pit_latrine_without_a_slab_or_platform MgtSuBEPGLXIrSJMqxLTZJPVC CWzqCW dont_know dont_know_ns 4 6 1 7 1 1 4 5 7 2 7 1_yes 2_sometimes_3_10 0_no 2_sometimes_3_10 0_no 3_often_10plus_times no_already_done_so_cant_do_it_anymore yes no_was_not_needed yes no_was_not_needed yes no_already_done_so_cant_do_it_anymore no_already_done_so_cant_do_it_anymore yes yes no_was_not_needed no_but_needed none school specialized_school_for_children_with_disabilities vocational_school TRUE FALSE TRUE FALSE TRUE TRUE cannot_afford_supplies children_working_at_home children_has_disability_that_school_does_not_have_infrastructure_for other_specify FALSE TRUE FALSE TRUE FALSE TRUE TRUE DgVvSgaM RJDsfMNTlouFGIOerCySeBNkedNYeFFqKVoG PQXPEDMk RWSUZywYhrzdoEx 22 22 23 18 20 24 16 22 19 20 21 23 20 18 22 18 20 20 20 18 20 no 23 22 22 19 22 19 school_closed_due_to_security insufficient_teachers security_concerns_by_parent family_personal_reasons too_expensive_school_fees_supplies_transport_etc a_child_contributes_to_hh_income other_specify refuse_to_answer TRUE FALSE TRUE TRUE FALSE FALSE TRUE TRUE FALSE TRUE TRUE TRUE inDHEfJRMbndRTRVsjEtZcZqrsvlHGyy 2_4_months distance_to_school quality_of_teaching_staff price_for_service school_is_unsafe FALSE TRUE TRUE FALSE FALSE TRUE FALSE FALSE FALSE TRUE FALSE FALSE wc jgSLHRZBQRWMr none uxos military_presence other_specify TRUE TRUE FALSE FALSE TRUE FALSE FALSE TRUE YIkCmkPOuYkApEvKe none uxos_on_school_grounds shelling_in_the_vicinity_of_the_school shooting_in_the_vicinity_of_the_school military_presence_inside_of_schools military_presence_in_the_vicinity_of_schools other_specify TRUE TRUE TRUE TRUE TRUE TRUE TRUE yes refuse_to_answer 19 bHcDypNTFLhHcSMJZ iKyKLWIz jiqgiQfOzFTUYHDCthOYaRPwRQN SyuNthAcxzhJNCcIRPrToclrnAzElkbfQYUWwOMRkuPP gastroentrology inpatient_facility outpatient_care laboratory x_ray dont_know_ns none_of_listed FALSE FALSE TRUE FALSE FALSE FALSE TRUE TRUE TRUE TRUE FALSE FALSE FALSE TRUE TRUE yes often lack_of_facilities distance_to_facility lack_of_documents security_problems_in_travelling_to_facility lack_of_referral_system required_a_covid_test_prior_to_treatment unable_to_leave_the_house_due_to_covid19 insufficient_qualifications_of_doctors long_queues TRUE FALSE TRUE FALSE TRUE TRUE FALSE TRUE FALSE FALSE TRUE TRUE FALSE FALSE TRUE TRUE BKQIgniDtiggyXGhgyCpbzqoyakmIgqvCESqqKsFwZZBLaKAKXZwlnHXdcYfWcVVYrGksblbLFlOujGx no yes dont_know_ns dont_know_ns less_than_15_mins yes no_problems items_not_available items_too_expensive market_damaged TRUE FALSE TRUE TRUE FALSE TRUE FALSE FALSE FALSE aRHbbwnSABSVP wcIvMNWebwvclZkSjeMYPAmxijOb QsbVo cereals_grains_bread_pasta fruits_apple_orange_strawberry meat_or_fish_chicken_pork_beef_fish dairy_products oil_and_fat_salo_butter_sunflower_oil sugar_or_sweets_cakes_chocolate_sugary_cold_drinks condiments_and_spices_tea_coffee_spices TRUE FALSE FALSE TRUE TRUE FALSE FALSE TRUE TRUE TRUE TRUE FALSE BDubBIQphKauKzPhAdi 22 21 no 18 CEroQgLceMJNAgyDqwwwnRAirRjDtvRjpsYARYvtSSmIztb IjshtZlSusLneoyqiiICGLpFshvRydDMXmcwrJey 21 dont_want_to_say dont_know 22 no yes_we_all_have_birth_certificates_but_they_are_not_in_our_possession refuse_to_answer 22 yes refuse_to_answer refuse_to_answer yes no refuse_to_answer 4_i_have_to_change_my_everyday_habits movement_and_access_constraints has_affected_hh_budget FALSE TRUE FALSE TRUE FALSE TLShxUoKJSFlfxQVroZogUtkWOKI ctrOIZmNMQuyGpHnc yMapvISerjgqbwM administration_head_of_the_village) mine_clearance_ngo police to_relatives other_specify TRUE FALSE TRUE TRUE FALSE TRUE TRUE FALSE LDpwZqTwoZUYpFNjZMSfWqKQZsQLPPUZWsCVUuZagecNDAxJw diminished_lost_source_of_income limited_access_to_food loss_of_or_diminished_access_to_education loss_of_or_diminished_access_to_clean_water_and_sanitation sickness_of_household_members death_of_household_members restriction_in_movement breaking_up_with_family_or_relatives TRUE TRUE FALSE TRUE TRUE TRUE TRUE FALSE FALSE TRUE TRUE FALSE rDHsApcukTVAxBFVWJaQZzXAjPFoFRShWgDKDCPqyUxndVKtgttWOsfcksTztQiwrgRfLBYBmhYv not_leaving_the_house_at_all reducing_movement_outside_the_house stopping_handshakes_or_physical_contact keeping_distance_from_people avoiding_public_transport wearing_a_face_mask wearing_gloves other_specify FALSE TRUE TRUE TRUE TRUE FALSE TRUE TRUE TRUE FALSE FALSE FALSE FALSE TRUE FALSE hwbzaHntMUsPSfhIsYrXLmKNLCsWWVaQhvxenSQoigbPefTIlbXVibGUcwDJnkUwdwybGGjADCQYAOB refuse_to_answer refuse_to_answer yes no yes refuse_to_answer no yes no no no no refuse_to_answer yes no refuse_to_answer food seeds_or_other_agricultural_inputs hygiene_nfis_eg_soap_sanitary_pads_and_sanitation_services_eg_latrines need_to_repay_debt education_for_children_under_18 fuel_for_heating other_specify FALSE TRUE FALSE TRUE FALSE FALSE TRUE TRUE TRUE FALSE TRUE FALSE TRUE FALSE HzWGHYaatTBPCre nfCG yes yes yes yes refuse_to_answer no dont_want_to_get_information how_to_register_for_aid how_to_get_water how_to_get_healthcare_medical_attention how_to_stay_safe_to_prevent_attack_harassment how_to_access_education how_to_find_work how_to_provide_feedback_on_aid_you_are_receiving other TRUE TRUE TRUE FALSE FALSE TRUE FALSE TRUE TRUE TRUE TRUE TRUE u aid_workers_from_international_ngos SkZ television cAnLGaVLcZeXzGnxJhqWvpfCVhBIdrWEylHEX zjUFMgj inkind_nfis cash_via_bank_transfer cash_via_mobile_money vouchers dont_know prefer_not_to_answer fuel_for_heating construction_materials FALSE FALSE TRUE FALSE TRUE FALSE TRUE TRUE FALSE FALSE TRUE TRUE TRUE TRUE DhWYFaOcuUzZaFfbPyzDXJwPgVLlUrMpEXUcBnUW rASLffMZvLPFHN yes_soap_is_shown no UESmpYPzkhEElAWBtemRkosthMNaiQaR GDtxurTCwOcbcLRNj hUoULh UA14 UA44129 UKR1420985501 FZ_3 no f308a7c2-b29f-4d4143-818b89-ce7685b13fa4 5.2 Download data 5.2.1 Downloading Audit files using audit_URL Required Libraries: httr “download_audit_files” will download audit files using the endpoint that is included in your data set, it’s available in column called “audit_URL”. The function will create a folder named by the uuid of each form/interview, and write the audit.csv inside it. The advantage of using the API over downloading manually from server is that you can download the audit files of each form that has recently been submitted to the server separately, rather than downloading cumulatively the whole audit files each time. One the top of that, you can benefit from the advantage of automation. download_audit_files &lt;- function(df, uuid_column = &quot;_uuid&quot;, audit_dir, usr, pass){ if (!&quot;httr&quot; %in% installed.packages()) stop(&quot;The package is httr is required!&quot;) if (is.na(audit_dir) || audit_dir == &quot;&quot;) stop(&quot;The path for storing audit files can&#39;t be empty!&quot;) if (is.na(usr) || usr == &quot;&quot;) stop(&quot;Username can&#39;t be empty!&quot;) if (is.na(pass) || pass == &quot;&quot;) stop(&quot;Password can&#39;t be empty!&quot;) # checking if the output directory is already available if (!dir.exists(audit_dir)) { dir.create(audit_dir) if (dir.exists(audit_dir)) { cat(&quot;Attention: The audit file directory was created in&quot;, audit_dir,&quot;\\n&quot;) } } # checking if creating output directory was successful if (!dir.exists(audit_dir)) stop(&quot;download_audit_fils was not able to create the output directory!&quot;) # checking if uuid column exists in data set if (!uuid_column %in% names(df)) stop(&quot;The column &quot;, uuid_column, &quot; is not available in data set.&quot;) # checking if column audit_URL exists in data set if (!uuid_column %in% names(df)) stop(&quot;The column &quot;, uuid_column, &quot; is not available in data set.&quot;) if (!&quot;audit_URL&quot; %in% names(df)) stop(&quot;Error: the column audit_URL is not available in data set.&quot;) # getting the list of uuids that are already downloaded available_audits &lt;- dir(audit_dir) # excluding uuids that their audit files are already downloaded df &lt;- df[!df[[uuid_column]] %in% available_audits,] audits_endpoint_link &lt;- df[[&quot;audit_URL&quot;]] names(audits_endpoint_link) &lt;- df[[uuid_column]] audits_endpoint_link &lt;- na.omit(audits_endpoint_link) if (length(audits_endpoint_link) &gt; 0) { # iterating over each audit endpoint from data for (i in 1:length(audits_endpoint_link)) { uuid = names(audits_endpoint_link[i]) endpoint_link_i &lt;- audits_endpoint_link[i] cat(&quot;Downloading audit file for&quot;, uuid, &quot;\\n&quot;) # requesting data audit_file &lt;- content(GET(endpoint_link_i, authenticate(usr, pass), timeout(1000), progress()), &quot;text&quot;, encoding = &quot;UTF-8&quot;) if (!is.na(audit_file)) { if (length(audit_file) &gt; 2) { dir.create(paste0(audit_dir, &quot;/&quot;, uuid), showWarnings = F) write.csv(audit_file, paste0(audit_dir, &quot;/&quot;, uuid, &quot;/audit.csv&quot;), row.names = F) }else if(!audit_file == &quot;Attachment not found&quot;){ if (grepl(&quot;[eventnodestartend]&quot;, audit_file)) { dir.create(paste0(audit_dir, &quot;/&quot;, uuid), showWarnings = F) write.table(audit_file, paste0(audit_dir, &quot;/&quot;, uuid, &quot;/audit.csv&quot;), row.names = F, col.names = FALSE, quote = F) } else{ cat(&quot;Error: Downloading audit was unsucessful!\\n&quot;) } } } else{ cat(&quot;Error: Downloading audit was unsucessful!\\n&quot;) } } } else{ cat(&quot;Attention: All audit files for given data set is downloaded!&quot;) } } 5.2.2 Download audit files using form name Required Libraries: httr, jsonlite, dplyr, stringr “download_audit_files_2” is a different version of “download_audit_files” module that will help you to download audit files using the form id directly from KOBO API. The rest of it’s specifications best matches the download_audit_files. download_audit_files_2 &lt;- function(form_id, output_dir, user, pass) { if (!&quot;stringr&quot; %in% installed.packages()) stop(&quot;Could not find the package stringr!&quot;) if (!&quot;dplyr&quot; %in% installed.packages()) stop(&quot;Could not find the package dplyr!&quot;) if (!&quot;httr&quot; %in% installed.packages()) stop(&quot;Could not find the package httr!&quot;) if (!&quot;jsonlite&quot; %in% installed.packages()) stop(&quot;Could not find the package jsonlite!&quot;) if (is.na(output_dir) || output_dir == &quot;&quot;) stop(&quot;The path for storing audit files can&#39;t be empty!&quot;) if (is.na(user) || user == &quot;&quot;) stop(&quot;Username can&#39;t be empty!&quot;) if (is.na(pass) || pass == &quot;&quot;) stop(&quot;Password can&#39;t be empty!&quot;) require(httr) require(dplyr) require(jsonlite) require(stringr) # checking if the output directory is already available if (!dir.exists(output_dir)) { dir.create(output_dir) if (dir.exists(output_dir)) { cat(&quot;Attention: The audit file directory was created in&quot;, output_dir,&quot;\\n&quot;) } } # checking if creating output directory was successful if (!dir.exists(output_dir)) stop(&quot;download_audit_fils was not able to create the output directory!&quot;) # listing audit files that are already available available_audits &lt;- dir(output_dir) # getting form url form_url &lt;- GET(&quot;https://kc.humanitarianresponse.info/api/v1/data&quot;, authenticate(user, pass), timeout(1000)) %&gt;% content(., &quot;text&quot;, encoding = &quot;UTF-8&quot;) %&gt;% fromJSON(., flatten = T) %&gt;% filter(id_string == form_id) %&gt;% select(url) %&gt;% unlist() if (length(form_url) &gt; 0) { # getting attachment links of uuids that their audit is already downloaded form_data &lt;- GET(form_url, authenticate(user, pass), timeout(1000)) %&gt;% content(., &quot;text&quot;, encoding = &quot;UTF-8&quot;) %&gt;% fromJSON(., flatten = T) %&gt;% as.data.frame() %&gt;% filter(!`_uuid` %in% available_audits) attachment_url &lt;- form_data[[&quot;_attachments&quot;]] audit_file_links &lt;- unlist(attachment_url)[names(unlist(attachment_url)) == &quot;download_large_url&quot;] %&gt;% unname() # uuids &lt;- form_data[[&quot;_uuid&quot;]][lapply(attachment_url, length) %&gt;% unlist() != 0] # uuids &lt;- str_extract(audit_file_links, &quot;(?&lt;=%2F)[a-z-0-9]*(?=%2Faudit.csv$)&quot;) # names(audit_file_links) &lt;- uuids download_audit &lt;- function(audit_link, user, pass, output_dir, uuid) { uuid &lt;- str_extract(audit_link, &quot;(?&lt;=%2F)[a-z-0-9]*(?=%2Faudit.csv$)&quot;) audit_file &lt;- GET(audit_link, authenticate(user, pass), timeout(1000), progress()) %&gt;% content(., &quot;text&quot;, encoding = &quot;UTF-8&quot;) cat(&quot;Downloading audit file for&quot;, uuid, &quot;\\n&quot;) dir.create(paste0(output_dir, &quot;/&quot;, uuid)) output_file_name &lt;- paste0(output_dir, &quot;/&quot;, uuid,&quot;/audit.csv&quot;) # write.csv(audit_file, output_file_name) if (!is.na(audit_file)) { if (length(audit_file) &gt; 2) { write.csv(audit_file, output_file_name, row.names = F) }else if(!audit_file == &quot;Attachment not found&quot;){ if (grepl(&quot;[eventnodestartend]&quot;, audit_file)) { write.table(audit_file, output_file_name, row.names = F, col.names = FALSE, quote = F) } } } } downloaded_uuids &lt;- sapply(audit_file_links, download_audit, user = user, pass = pass, output_dir = output_dir) } else{ cat(&quot;Attention: All audit files for given form is downloaded!&quot;) } } 5.3 Data collection follow-up 5.3.1 checking surveys against the sampling frame It is important to ensure that number of interviews that have been collected in each sampling unit corresponds with the initial sampling frame. The best choice will be to check it on daily basis during the data collection and follow-up with the Field Team in case there were not enough interviews (or some extra surveys) in certain locations. But it is also a good practice to make a final check to understand the overall difference between the sampling frame and collected data. First let’s open initial sampling frame generated by the Probability sampling tool sampling_frame &lt;- read.csv(&quot;inputs/sampling_frame20200701-132150.csv&quot;) Now we should create summary table that will show number of interviews actually collected for each primary sampling unit (in our case it was settlement). Keep in mind that you should use correct settlement codes that were verified during the data collection. In case you are not sure that settlement codes in the dataset are correct you should cross-check them with GPS-coordinates using Spatial verification checks samples_collected &lt;- main_dataset %&gt;% group_by(r3_current_settlement)%&gt;% count() The next step will be left join of samples collected dataset to the sampling frame and finding the difference in collected surveys for each settlement. sampling_frame &lt;- sampling_frame %&gt;% select(Survey, strata_id, adm4Pcode, adm4NameLat) %&gt;% left_join(samples_collected, by = c(&quot;adm4Pcode&quot; = &quot;r3_current_settlement&quot;))%&gt;% tidyr::replace_na(list(n = 0))%&gt;% mutate(sample_difference = n - Survey)%&gt;% arrange(sample_difference) sampling_frame %&gt;% head(10) %&gt;% kable() %&gt;% kable_styling(font_size=12) Survey strata_id adm4Pcode adm4NameLat n sample_difference 1 5km_rural UKR1421586403 Tarasivka 0 -1 56 20km_urban UKR1410200000 Avdiivka 56 0 9 20km_urban UKR1420955200 Zaitseve 9 0 5 5km_rural UKR1423384001 Kostiantynivka 5 0 3 5km_rural UKR1422783201 Mykhailivka 3 0 7 5km_rural UKR1421581401 Dmytrivka 7 0 6 5km_rural UKR4423180701 Bakhmutivka 6 0 4 5km_rural UKR4424881001 Velyka Chernihivka 4 0 8 5km_rural UKR1420980501 Berestove 8 0 1 5km_rural UKR1420982001 Volodymyrivka 1 0 As we can see from the table above, there was only one settlement where the target number of the interviews was not collected. And considering that it’s only one survey it will not affect our results and we can proceed with other checks. After checking how a number of collected surveys corresponds with the sampling frame for each primary sampling unit it will be also good to make the same check on strata level. To do that we can use summarise function from dplyr library strata_level_check &lt;- sampling_frame %&gt;% group_by(strata_id)%&gt;% summarise(Survey_Planned = sum(Survey), Survey_Collected = sum(n))%&gt;% mutate(Difference = Survey_Collected - Survey_Planned)%&gt;% arrange(desc(Difference)) strata_level_check %&gt;% kable() %&gt;% kable_styling(font_size=12) strata_id Survey_Planned Survey_Collected Difference 5km_rural 403 407 4 20km_rural 399 402 3 20km_urban 404 404 0 5km_urban 404 404 0 After this check, we can see that for two strata we collected the exact number of interviews that were initially planned. And for two strata there is slight overachievement in 4 and 3 surveys. 5.4 Data falsification 5.4.1 Check for time (in the dataset) Required Libraries: “dplyr” and “lubridate” “time_check” will return the elapsed time for each interview based on it’s start and end columns also classifies if it’s “too short”, “too long”, or “okay”. As an example, we will use a dummy data set to apply the function to it. The function also needs a time_min (the minimum time in minutes that an interview should take to be completed) and a time_max (the maximum time in minutes that an interview should take to be completed) parameters. library(dplyr) library(lubridate) ## Loading required package: timechange ## ## Attaching package: &#39;lubridate&#39; ## The following objects are masked from &#39;package:base&#39;: ## ## date, intersect, setdiff, union # Creating a dummy data set start &lt;- c(&quot;2020-12-01T09:40:05.750+04:30&quot;,&quot;2020-12-01T09:40:18.709+04:30&quot;,&quot;2020-12-01T09:45:40.879+04:30&quot;,&quot;2020-12-01T09:46:28.328+05:00&quot;) end &lt;- c(&quot;2020-12-01T09:44:44.438+04:30&quot;,&quot;2020-12-01T10:01:27.890+04:30&quot;,&quot;2020-12-01T10:17:44.021+04:30&quot;,&quot;2020-12-01T10:18:32.717+05:00&quot;) my_df &lt;- data.frame(start, end) # Initializing variables time_min &lt;- 8 time_max &lt;- 30 # declaring the function time_check &lt;- function(df, time_min, time_max){ df &lt;- df %&gt;% mutate(interview_duration = difftime(as.POSIXct(ymd_hms(end)), as.POSIXct(ymd_hms(start)), units = &quot;mins&quot;), CHECK_interview_duration = case_when( interview_duration &lt; time_min ~ &quot;Too short&quot;, interview_duration &gt; time_max ~ &quot;Too long&quot;, TRUE ~ &quot;Okay&quot; ) ) return(df) } # Applying the function to data frame processed_df &lt;- time_check(my_df, time_min, time_max) processed_df start end interview_duration CHECK_interview_duration 2020-12-01T09:40:05.750+04:30 2020-12-01T09:44:44.438+04:30 4.64480 mins Too short 2020-12-01T09:40:18.709+04:30 2020-12-01T10:01:27.890+04:30 21.15302 mins Okay 2020-12-01T09:45:40.879+04:30 2020-12-01T10:17:44.021+04:30 32.05237 mins Too long 2020-12-01T09:46:28.328+05:00 2020-12-01T10:18:32.717+05:00 32.07315 mins Too long 5.4.2 Check for time (audit files) Required Libraries: “dplyr”, “lubridate”, and “expss” “time_check_audit” will calculate the interview duration using the audit files. And, if the audit file for that particular uuid is not found in the audit directory (where you paste the audit files), it will calculate it using start and end time columns in the data set. Audit files should be stored inside a folder (to avoid redefining its name while calling the function, call it “audit_files”) in the project folder. library(dplyr) library(lubridate) library(expss) # reading files. main_dataset &lt;- read.csv(&quot;inputs/UKR2007_MSNA20_HH_dataset_main_rcop.csv&quot;, na.strings = &quot;&quot;) # Initializing variables time_min &lt;- 8 time_max &lt;- 30 # declaring the function time_check_audit &lt;- function(df_raw, x_uuid=&quot;_uuid&quot;, time_min, time_max, audit_dir_path = &quot;./audit_files/&quot;, today = &quot;today&quot;){ if (!any(duplicated(df_raw[[x_uuid]]))) { # Audit Checks # audit_dir_path &lt; -audit_dir_path uuids &lt;- dir(audit_dir_path) dfl &lt;- list() all_uuids &lt;- length(uuids) for(i in 1: length(uuids)){ df &lt;- read.csv(paste0(audit_dir_path, uuids[i], &quot;/audit.csv&quot;)) df &lt;- df %&gt;% filter(node != &quot;&quot;) duration_ms &lt;- sum(df$end - df$start) duration_secs &lt;-duration_ms/1000 duration_minutes &lt;- round(duration_secs/60,1) dfl[[i]] &lt;- data.frame(uuid = uuids[i], duration_ms=duration_ms, durations_secs=duration_secs, duration_minutes = duration_minutes) cat(&quot;\\014&quot;,&quot;Running audit: &quot;, round((i/all_uuids) * 100,0),&quot;%\\n&quot;, sep = &quot;&quot;) } duration_df &lt;- do.call(&quot;rbind&quot;, dfl) duration_df &lt;- dplyr::rename(duration_df, `_uuid` = uuid) #time check based on start end time df_str_audit_all &lt;- df_raw %&gt;% mutate(start_end = difftime(as.POSIXct(ymd_hms(end)), as.POSIXct(ymd_hms(start)), units = &quot;mins&quot;)) #creating a binding column with same name. df_str_audit_all$`_uuid` &lt;- df_str_audit_all[[x_uuid]] # Join Audit checks and main data set df_str_audit_all &lt;- df_str_audit_all %&gt;% left_join(select(duration_df, `_uuid`, duration_minutes), by = &quot;_uuid&quot;) # Checking time duration with audit file, if not available, from dataset start/end. df_str_audit_all &lt;- df_str_audit_all %&gt;% mutate(interview_duration = if_na(duration_minutes, start_end), CHECK_interview_duration = case_when( interview_duration &lt; time_min ~ &quot;Too short&quot;, interview_duration &gt; time_max ~ &quot;Too long&quot;, TRUE ~ &quot;Okay&quot;) ) %&gt;% select( -c(duration_minutes,start_end)) return(df_str_audit_all) }else{ stop(&quot;Error: df_raw has duplicate in uuid column, resolve the duplication to proceed!&quot;) } } # Applying the function to data frame processed_df &lt;- time_check_audit(main_dataset, x_uuid = &quot;X_uuid&quot;, time_min, time_max, audit_dir_path = &quot;inputs/reach_global/attachments/dc4b0f40bf934293aedd3f31ff43f6d1/&quot;) processed_df %&gt;% select(`_uuid`, interview_duration, CHECK_interview_duration) %&gt;% head(10) _uuid interview_duration CHECK_interview_duration e88800ab-c514-4074-b938-b618ec874255 14.3 Okay 15aa02bd-ce32-4cd3-afcb-6d590db3baa4 14.8 Okay 1a8f5939-fc1e-43f8-ac75-86fb6de3ae4c 14.4 Okay ed87c6df-d78d-47bc-92dc-27d478073a53 18.2 Okay df76de17-ffda-4f11-9cb7-6342f3d49940 15.6 Okay e6f50033-ec7a-4016-850d-8be2c0302324 24.3 Okay c9f30357-05bc-4228-8223-e1143b5293c8 48.4 Too long 2d5b8a48-52fa-45a6-b776-fa32242abf0d 19.5 Okay 022a6393-6d31-4958-926c-b5955aa4e215 18.5 Okay 98bb4c67-2bda-4848-9b19-b960a8506157 22.9 Okay 5.4.3 Check for time - calculating the elapsed time between each interview Required Libraries: lubridate “time_btwn_ints” will calculate the elapsed time between the ending time of the first interview of an enumerator and the start time of its second interview, and the process applies for all interviews of each enumerator. It needs a location identifier as a parameter to check if the elapsed time is matching with the threshold (given as a parameter) in the same location or not. Also it will be checked if the elapsed time matches the given threshold for interviews in different locations by the same enumerator. library(lubridate) # Creating a dummy data set start &lt;- c(&quot;2020-12-01T09:40:05.750+04:30&quot;, &quot;2020-12-01T09:45:18.709+04:30&quot;, &quot;2020-12-01T09:45:40.879+04:30&quot;, &quot;2020-12-01T10:02:40.879+04:30&quot;, &quot;2020-12-01T10:25:28.32+04:30&quot;) end &lt;- c(&quot;2020-12-01T09:44:44.438+04:30&quot;, &quot;2020-12-01T10:01:27.890+04:30&quot;, &quot;2020-12-01T10:17:44.021+04:30&quot;, &quot;2020-12-01T10:05:40.879+04:30&quot;, &quot;2020-12-01T10:38:32.717+04:30&quot;) device_id &lt;- c(&quot;000215&quot;, &quot;000215&quot;, &quot;000216&quot;, &quot;000215&quot;, &quot;000216&quot;) village &lt;- c(&quot;Village A&quot;, &quot;Village A&quot;, &quot;Village B&quot;, &quot;Village A&quot;, &quot;Village C&quot;) my_df &lt;- data.frame(start, end, device_id, village) # declaring the function time_btwn_ints &lt;- function(df, device_id, start_col = &quot;start&quot;, end_col = &quot;end&quot;, village_col, same_village_threshold = 3, diff_village_threshold = 5){ checked_df &lt;- df # sort by device_id and start_col checked_df &lt;- checked_df[order(checked_df[[start_col]]), ] checked_df &lt;- checked_df[order(checked_df[[device_id]]), ] # For each row starting from the second row: # 1) calculate the time between the end of the (r-1) survey and the start of the (r) survey # 2) insert the eight check-message based on the calculated time and the village issue.same.village &lt;- paste0(&quot;The elapsed time between two interviews in the same village is less than &quot;,same_village_threshold, &quot; minutes&quot;) issue.diff.village &lt;- paste0(&quot;The elapsed time between two interviews in different villages is less than &quot;, diff_village_threshold, &quot; minutes&quot;) checked_df$check &lt;- &quot;OK&quot; checked_df$gap_between_ints &lt;- NA for (r in 2:nrow(checked_df)){ if (as.character(checked_df[r, device_id])==as.character(checked_df[r-1, device_id])){ checked_df$gap_between_ints[r] &lt;- difftime(as.POSIXct(ymd_hms(checked_df[r, start_col])), as.POSIXct(ymd_hms(checked_df[r-1, end_col])), units = &quot;mins&quot;) if (as.character(checked_df[r, village_col])==as.character(checked_df[r-1, village_col])){ if (checked_df$gap_between_ints[r] &lt; same_village_threshold) checked_df[r, &quot;check&quot;] &lt;- issue.same.village } else{ if (checked_df$gap_between_ints[r] &lt; diff_village_threshold) checked_df[r, &quot;check&quot;] &lt;- issue.diff.village } } } return(checked_df) } # Applying the function to data frame processed_df &lt;- time_btwn_ints(df = my_df, device_id = &quot;device_id&quot;,village_col = &quot;village&quot;, same_village_threshold = 2,diff_village_threshold = 10) processed_df start end device_id village check gap_between_ints 1 2020-12-01T09:40:05.750+04:30 2020-12-01T09:44:44.438+04:30 000215 Village A OK NA 2 2020-12-01T09:45:18.709+04:30 2020-12-01T10:01:27.890+04:30 000215 Village A The elapsed time between two interviews in the same village is less than 2 minutes 0.5711833 4 2020-12-01T10:02:40.879+04:30 2020-12-01T10:05:40.879+04:30 000215 Village A The elapsed time between two interviews in the same village is less than 2 minutes 1.2164833 3 2020-12-01T09:45:40.879+04:30 2020-12-01T10:17:44.021+04:30 000216 Village B OK NA 5 2020-12-01T10:25:28.32+04:30 2020-12-01T10:38:32.717+04:30 000216 Village C The elapsed time between two interviews in different villages is less than 10 minutes 7.7383167 5.4.4 Silouhette analysis Custom script (using ???) 5.4.5 Check for duplicates 5.4.5.1 cleaninginspectoR - find_duplicates find_duplicates will take the dataset and a column name to look for duplicates as arguments. cleaninginspectoR::find_duplicates(main_dataset, duplicate.column.name = &quot;X_uuid&quot;) ## [1] index value variable has_issue issue_type ## &lt;0 rows&gt; (or 0-length row.names) dummy_dataset[301, ] &lt;- dummy_dataset[300, ] cleaninginspectoR::find_duplicates(dummy_dataset, duplicate.column.name = &quot;uuid&quot;) ## index value variable has_issue ## 1 301 031ea56d-b695-49404f-b4bbbd-2de43a76b95f uuid TRUE ## issue_type ## 1 duplicate in uuid cleaninginspectoR::find_duplicates(dummy_dataset, duplicate.column.name = &quot;start&quot;) ## index value variable has_issue issue_type ## 1 51 2022-12-20T11:59:57+0100 start TRUE duplicate in start ## 2 61 2022-12-20T13:01:29+0100 start TRUE duplicate in start ## 3 122 2022-12-20T13:29:58+0100 start TRUE duplicate in start ## 4 154 2022-12-20T13:58:37+0100 start TRUE duplicate in start ## 5 246 2022-12-20T13:41:52+0100 start TRUE duplicate in start ## 6 257 2022-12-20T12:27:33+0100 start TRUE duplicate in start ## 7 286 2022-12-20T13:57:30+0100 start TRUE duplicate in start ## 8 301 2022-12-20T12:36:07+0100 start TRUE duplicate in start 5.4.5.2 base - duplicated If you are looking in duplicates value in several columns (first and second name, names and ID number,etc.), you can use the duplicated. dummy_test &lt;- data.frame(col_a = c(&quot;a&quot;, &quot;a&quot;, &quot;c&quot;), col_b = c(&quot;b&quot;, &quot;b&quot;, &quot;f&quot;)) dummy_test ## col_a col_b ## 1 a b ## 2 a b ## 3 c f Rows 1 and 2 are duplications. duplicated(dummy_test) ## [1] FALSE TRUE FALSE find_duplicates() and duplicated() functions will return position or value only of one duplicated record. But after identification of the duplicate, it will be good to check how many of such duplicated records in the dataset and check if they have any other duplicated columns. Based on your investigation, you will need to delete one or several records. e.g. Enumerator submitted the first survey by mistake and after some time submitted a corrected survey with the same id (in case we allow for the enumerator to select the id of the enterprise or sample). In such a way, find_duplicates() will identify the second survey but we will need to delete the first one. 5.4.5.3 Find most similar surveys The function find_similar_surveys() compares each survey with each other survey in the dataset and finds the most similar one, i.e., the one with the lowest number of different answers. The function uses the gower matrix to make the comparison more efficient. The function returns a dataframe with the same number of rows (all surveys) and a few additional columns indicating the ID of the most similar survey and how many columns are different. Depending on the size of the questionnaire and on the data collection methodology, we can set a maximum threshold on the number of differences and follow up on all the surveys that have a matching survey with a lower number of differences than the threshold. For example, in the MSNA in Syria, we used a maximum threshold of 7 differences. In the version below, the function uses only the data from the main sheet of the survey. If the tools includes loop(s), it makes sense to add a few relevant columns from the loops to the main dataframe so that they are also used in the search of the most similar survey. For example, for an HH survey with a loop for the HH composition, one can add to the main dataframe one column with the concatenation of the genders of the HH components and one column with the concatenation of the ages of the HH components (from the loop). find_similar_surveys &lt;- function(raw.data, tool.survey, uuid=&quot;_uuid&quot;){ # 1) store UUIDs uuids &lt;- raw.data[[uuid]] # 2) convert all columns to character and tolower raw.data &lt;- mutate_all(raw.data, as.character) raw.data &lt;- mutate_all(raw.data, tolower) # 3) remove columns that are naturally different in each survey: # - columns of type = &quot;start&quot;, &quot;end&quot;, &quot;text&quot; (for the other responses), etc. # - columns starting with &quot;_&quot; # - option columns for the select multiple -&gt; keeping only the concatenation column types_to_remove &lt;- c(&quot;start&quot;, &quot;end&quot;, &quot;today&quot;, &quot;deviceid&quot;, &quot;date&quot;, &quot;geopoint&quot;, &quot;audit&quot;, &quot;note&quot;, &quot;calculate&quot;, &quot;text&quot;) cols_to_keep &lt;- data.frame(column=colnames(raw.data)) %&gt;% left_join(select(tool.survey, name, type), by=c(&quot;column&quot;=&quot;name&quot;)) %&gt;% filter(!(type %in% types_to_remove) &amp; !str_starts(column, &quot;_&quot;) &amp; !str_detect(column, &quot;/&quot;)) raw.data &lt;- raw.data[, all_of(cols$column)] # 4) remove columns with all NA; convert remaining NA to &quot;NA&quot;; convert all columns to factor raw.data &lt;- raw.data[, colSums(is.na(raw.data))&lt;nrow(raw.data)] raw.data[is.na(raw.data)] &lt;- &quot;NA&quot; raw.data &lt;- raw.data %&gt;% mutate_if(is.character, factor) error.message &lt;- &quot;NAs detected, remove them before proceeding (it can happen when converting to factor)&quot; if (sum(is.na(raw.data))&gt;0) stop(error.message) # 5) calculate gower distance gower_dist &lt;- daisy(raw.data, metric=&quot;gower&quot;, warnBin=F, warnAsym=F, warnConst=F) gower_mat &lt;- as.matrix(gower_dist) # 6) convert distance to number of differences and determine closest matching survey r &lt;- unlist(lapply(1:nrow(raw.data), function(i) sort(gower_mat[i,]*ncol(raw.data))[2])) # 7) add relevant columns raw.data[[&quot;num_cols_not_NA&quot;]] &lt;- rowSums(raw.data!=&quot;NA&quot;) raw.data[[uuid]] &lt;- uuids raw.data[[&quot;_id_most_similar_survey&quot;]] &lt;- uuids[as.numeric(names(r))] raw.data[[&quot;number_different_columns&quot;]] &lt;- as.numeric(r) raw.data &lt;- raw.data %&gt;% arrange(number_different_columns, uuid) return(raw.data) } 5.5 Data checks 5.5.1 Check for outliers There are 2 commons ways to detect outliers : Using the range of 3 standards deviations from the mean. Using the range of 1.5 inter quartile from the 1st and 3rd quartile. Outliers can exist but it is important to check them. 5.5.1.1 cleaninginspectoR - find_outliers The function find_outliers will use the rule of the 3 standards deviations from the mean for normal values and log values. cleaning_log &lt;- cleaninginspectoR::find_outliers(main_dataset) cleaning_log %&gt;% head(20) index value variable has_issue issue_type 26 30000.0 b15_hohh_income TRUE log normal distribution outlier 117 210.0 b15_hohh_income TRUE log normal distribution outlier 225 400.0 b15_hohh_income TRUE log normal distribution outlier 384 300.0 b15_hohh_income TRUE log normal distribution outlier 517 300.0 b15_hohh_income TRUE log normal distribution outlier 710 24000.0 b15_hohh_income TRUE log normal distribution outlier 742 400.0 b15_hohh_income TRUE log normal distribution outlier 1126 50000.0 b15_hohh_income TRUE log normal distribution outlier 1384 400.0 b15_hohh_income TRUE log normal distribution outlier 1399 200.0 b15_hohh_income TRUE log normal distribution outlier 1417 400.0 b15_hohh_income TRUE log normal distribution outlier 5 20.0 f2_spend_on_utilities TRUE log normal distribution outlier 89 5000.0 f2_spend_on_utilities TRUE log normal distribution outlier 272 20.0 f2_spend_on_utilities TRUE log normal distribution outlier 918 20.0 f2_spend_on_utilities TRUE log normal distribution outlier 141 4800.0 f3_spend_on_heating TRUE normal distribution outlier 48 0.5 f5_type_fuel_heating_amount TRUE log normal distribution outlier 357 0.5 f5_type_fuel_heating_amount TRUE log normal distribution outlier 161 90.0 f16_duration_water_shortages TRUE log normal distribution outlier 1392 90.0 f16_duration_water_shortages TRUE log normal distribution outlier 5.5.2 Check others 5.5.2.1 cleaninginspectoR - find_other_responses find_other_responses will look for all columns with “other”, “Other”, “autre”, “Autre”, and return their values. Notes: - If your other* questions do not have those 4 strings in their names, the function will not pick it. * cleaning_log &lt;- cleaninginspectoR::find_other_responses(main_dataset) cleaning_log %&gt;% head(10) index value variable has_issue issue_type NA “Child of war” status /// instances: 1 b10_1_hohh_vulnerability_other TRUE ‘other’ response. may need recoding. NA “Child of war” status, “Veteran of labour” status /// instances: 1 b10_1_hohh_vulnerability_other TRUE ‘other’ response. may need recoding. NA A carer for a disabled child /// instances: 1 b10_1_hohh_vulnerability_other TRUE ‘other’ response. may need recoding. NA A carer for a disabled person /// instances: 1 b10_1_hohh_vulnerability_other TRUE ‘other’ response. may need recoding. NA Chernobyl liquidator /// instances: 3 b10_1_hohh_vulnerability_other TRUE ‘other’ response. may need recoding. NA Child custody /// instances: 1 b10_1_hohh_vulnerability_other TRUE ‘other’ response. may need recoding. NA Deprived orphan /// instances: 1 b10_1_hohh_vulnerability_other TRUE ‘other’ response. may need recoding. NA Family with a child with disability /// instances: 1 b10_1_hohh_vulnerability_other TRUE ‘other’ response. may need recoding. NA Has a status of the victim of human trafficing /// instances: 1 b10_1_hohh_vulnerability_other TRUE ‘other’ response. may need recoding. NA Husband has disability group 3 /// instances: 1 b10_1_hohh_vulnerability_other TRUE ‘other’ response. may need recoding. 5.5.2.2 base + dplyr This example will take all the text type from the questionnaire, filter for the ones that are in the dataset and return all the values. oth &lt;- questions$name[questions$type == &quot;text&quot;] oth &lt;- oth[oth %in% names(main_dataset)] oth_log &lt;- oth %&gt;% lapply(function(x) { main_dataset %&gt;% select(&quot;X_uuid&quot;, !!sym(x)) %&gt;% filter(!is.na(!!sym(x))) %&gt;% as.data.frame() %&gt;% mutate(col_names = x) %&gt;% rename(other_text = !!sym(x)) %&gt;% arrange(other_text)}) %&gt;% do.call(rbind,.) oth_log %&gt;% head(20) X_uuid other_text col_names 54e2b9b9-f3c4-477c-bd49-778183cae303 “Child of war” status b10_1_hohh_vulnerability_other 7b8e753b-1aa6-493a-81c8-9c7caee74613 “Child of war” status, “Veteran of labour” status b10_1_hohh_vulnerability_other 8e2a77cc-a81a-4319-8595-02dae93f0bd3 A carer for a disabled child b10_1_hohh_vulnerability_other 2c08b929-63f0-42bc-80d1-ce87a0373787 A carer for a disabled person b10_1_hohh_vulnerability_other b8e0bb37-b2eb-439e-bc5b-03c12c87c7f6 Chernobyl liquidator b10_1_hohh_vulnerability_other 0250339d-7a9c-4cd1-a72d-2fb5f9ec8439 Chernobyl liquidator b10_1_hohh_vulnerability_other 83f40ea5-6882-4e46-824e-fcc7f734cc78 Chernobyl liquidator b10_1_hohh_vulnerability_other 1113ae1b-80a3-41ce-951f-74ea18719bde Child custody b10_1_hohh_vulnerability_other 64285d7a-51fc-4256-b089-1a13d4521e97 Deprived orphan b10_1_hohh_vulnerability_other 5ddae31b-90d1-4c96-a991-1958ff14719c Family with a child with disability b10_1_hohh_vulnerability_other 69615c4d-8fac-404e-bb45-fafccd498d92 Has a status of the victim of human trafficing b10_1_hohh_vulnerability_other 2d5b8a48-52fa-45a6-b776-fa32242abf0d Husband has disability group 3 b10_1_hohh_vulnerability_other aad51ad7-7ea6-4589-bf06-ee8b53781303 Low-income family b10_1_hohh_vulnerability_other 1d21d712-f98d-4cbc-af52-710f535ef2bd Low-income family b10_1_hohh_vulnerability_other acbb66b9-31c5-44f7-84d4-53553aaa2f8c Low-income family b10_1_hohh_vulnerability_other 075ec034-4681-4d59-bce7-403dffb3c03c Low-income family b10_1_hohh_vulnerability_other a4e91a4d-c176-43b2-ab2f-1953a1780bec Own apartment destroyed, rented housing b10_1_hohh_vulnerability_other b98ef6c0-39df-4383-96e7-5f569f6fdc33 Pensioner because takes care of the sun, who has born disability (currently 33 y.o., 2 level of disability, lives in another HH) b10_1_hohh_vulnerability_other 2b275831-e4d6-4b9b-8192-c58bcc13bcba Raises a nephew b10_1_hohh_vulnerability_other 956f170d-2bf0-40bf-848e-f8129aecd0fd Was injured during the conflict b10_1_hohh_vulnerability_other Please note that it takes the values as they are. You may want to trim and remove caps or any other regex work if you want better summary This other example looks at the frequency of a given other option, it could be used to see if some should be recoded as options directly. oth_prop &lt;- oth %&gt;% lapply(function(x) { main_dataset %&gt;% group_by(!!sym(x)) %&gt;% tally(sort = T) %&gt;% rename(other_text = !!sym(x)) %&gt;% filter(!is.na(other_text)) %&gt;% mutate(col_names = x, prop = n/nrow(main_dataset)) }) %&gt;% do.call(rbind,.) oth_prop %&gt;% head(20) other_text n col_names prop Low-income family 4 b10_1_hohh_vulnerability_other 0.0024737 Chernobyl liquidator 3 b10_1_hohh_vulnerability_other 0.0018553 “Child of war” status 1 b10_1_hohh_vulnerability_other 0.0006184 “Child of war” status, “Veteran of labour” status 1 b10_1_hohh_vulnerability_other 0.0006184 A carer for a disabled child 1 b10_1_hohh_vulnerability_other 0.0006184 A carer for a disabled person 1 b10_1_hohh_vulnerability_other 0.0006184 Child custody 1 b10_1_hohh_vulnerability_other 0.0006184 Deprived orphan 1 b10_1_hohh_vulnerability_other 0.0006184 Family with a child with disability 1 b10_1_hohh_vulnerability_other 0.0006184 Has a status of the victim of human trafficing 1 b10_1_hohh_vulnerability_other 0.0006184 Husband has disability group 3 1 b10_1_hohh_vulnerability_other 0.0006184 Own apartment destroyed, rented housing 1 b10_1_hohh_vulnerability_other 0.0006184 Pensioner because takes care of the sun, who has born disability (currently 33 y.o., 2 level of disability, lives in another HH) 1 b10_1_hohh_vulnerability_other 0.0006184 Raises a nephew 1 b10_1_hohh_vulnerability_other 0.0006184 Was injured during the conflict 1 b10_1_hohh_vulnerability_other 0.0006184 Psoriasis 3 b11_1_hohh_chronic_illness_other 0.0018553 Blood pressure 2 b11_1_hohh_chronic_illness_other 0.0012369 Allergy 1 b11_1_hohh_chronic_illness_other 0.0006184 Aseptic necrosis, deforming arthritus 1 b11_1_hohh_chronic_illness_other 0.0006184 Asthma 1 b11_1_hohh_chronic_illness_other 0.0006184 5.5.3 Issue log Function this function will help the generation of standard cleaning log file that holds issues that need clarification. first we need to subset or filter data based on the check list, then that is the log_sheet function will help us to transform that subsetted data into standard cleaning log format. log_sheet &lt;- function(data, question.name, issue, action){ cleaning_logbook &lt;- data.frame(&quot;uuid&quot; = as.character(), &quot;question.name&quot; = as.character(), &quot;issue&quot; = as.character(), &quot;feedback&quot; = as.character(), &quot;action&quot; = as.character(), &quot;old.value&quot; = as.character(), &quot;new.value&quot; = as.character(), stringsAsFactors = F) if(nrow(data) &gt; 0){ for(a in 1:nrow(data)) { cleaning_logbook &lt;- cleaning_logbook %&gt;% add_row( tibble_row( uuid = as.character(data[a, &quot;X_uuid&quot;]), question.name = as.character(question.name), issue = as.character(issue), feedback = as.character(&quot;&quot;), action = as.character(action), old.value = as.character(data[a, question.name]), new.value = as.character(&quot;&quot;) ) ) } } return(cleaning_logbook) } Now, lets use the function to log an issue where consent to calls follow-up is no and log them into standard cleaning log format issue_file &lt;- main_dataset %&gt;% filter(a3_consent_to_follow_up_calls == &quot;no&quot;) %&gt;% log_sheet(question.name = &quot;a3_consent_to_follow_up_calls&quot;, issue = &quot;flagging consent followup calls with no response as an example&quot;, action = &quot;flag&quot;) 5.5.4 Check for logical check hum hum hum ?? Custom script (using dplyr?) Any value that is arbitrary set (from an informed source e.g. an informal setttlement cannot be lower than 15 households). This type of outliers could also be considered as logical checks. 5.6 cleaninginspectoR - inspect_all cleanninginspectoR has a function inspect inspect_all that will look for outliers, others responses that may need recoding, duplicated uuid and possible sensitive columns. It takes as arguments the dataset and the uuid column name. cleaning_log &lt;- cleaninginspectoR::inspect_all(main_dataset, &quot;X_uuid&quot;) cleaning_log %&gt;% head(20) index value variable has_issue issue_type NA NA a3_1_phone TRUE Potentially sensitive information. Please ensure all PII is removed NA NA r5_gps_work TRUE Potentially sensitive information. Please ensure all PII is removed NA NA r6_gpslocation TRUE Potentially sensitive information. Please ensure all PII is removed NA NA X_r6_gpslocation_latitude TRUE Potentially sensitive information. Please ensure all PII is removed NA NA X_r6_gpslocation_longitude TRUE Potentially sensitive information. Please ensure all PII is removed NA NA X_r6_gpslocation_altitude TRUE Potentially sensitive information. Please ensure all PII is removed NA NA X_r6_gpslocation_precision TRUE Potentially sensitive information. Please ensure all PII is removed 26 30000 b15_hohh_income TRUE log normal distribution outlier 117 210 b15_hohh_income TRUE log normal distribution outlier 225 400 b15_hohh_income TRUE log normal distribution outlier 384 300 b15_hohh_income TRUE log normal distribution outlier 517 300 b15_hohh_income TRUE log normal distribution outlier 710 24000 b15_hohh_income TRUE log normal distribution outlier 742 400 b15_hohh_income TRUE log normal distribution outlier 1126 50000 b15_hohh_income TRUE log normal distribution outlier 1384 400 b15_hohh_income TRUE log normal distribution outlier 1399 200 b15_hohh_income TRUE log normal distribution outlier 1417 400 b15_hohh_income TRUE log normal distribution outlier 5 20 f2_spend_on_utilities TRUE log normal distribution outlier 89 5000 f2_spend_on_utilities TRUE log normal distribution outlier 5.7 Data cleaning 5.7.1 Re-generate text column for select multiple questions Description: During data cleaning (when recoding the other options for example), there is a high chance that the dummies and text columns become inconsistent. That can cause issues when analyzing the data if both the dummies and text columns are used. To avoid that, the following function can be used to regenerate and update the text columns based on the dummies columns. Usage: 1- Create a list of the questions to regenerate: select_multiple_questions = c(&quot;b10_hohh_vulnerability&quot;,&quot;f17_store_drinking_water&quot;,&quot;b11_hohh_chronic_illness&quot;) 2- Define the function generate_from_binaries &lt;- function(data,select_multiple_questions) { do.call(&quot;cbind&quot;,map(select_multiple_questions,function(question_name,data) { df &lt;- data %&gt;% select(grep(paste0(&quot;^&quot;,question_name,&quot;\\\\.&quot;), names(data))) ## Subseting the dataset to include only dummies related to one question df &lt;- mutate_all(df,as.numeric) ## Making sure the dummies columns are numerical colnames(df) &lt;- gsub(paste0(question_name,&quot;\\\\.&quot;),&quot;&quot;,colnames(df)) ## Keeping only the options names in the colnames df &lt;- map2_df(df, names(df), ~ replace(.x, .x==1, .y) %&gt;% replace(. == 0, NA)) ## Replacing a cell with a value of &#39;1&#39; with its respective column name and &#39;0&#39; with NA df %&gt;% unite(!!sym(question_name),names(df),remove=TRUE,na.rm=TRUE,sep=&quot; &quot;) %&gt;% ## concatenate the columns using &quot; &quot; as a seperator as.data.frame() %&gt;% ## Convert to dataframe mutate_all(list(~na_if(.,&quot;&quot;))) ## replace empty string with NA },data)) } 3- Call the function the generate the columns and replace directely in the data set using replace_columns main_dataset &lt;- replace_columns(main_dataset, generate_from_binaries(main_dataset,select_multiple_questions)) 5.7.2 Clean data base on cleaning log Required Libraries: Base R Packages The function “incorporate_logs” applies cleaning log on raw data. It gets cleaning log in a format that must contain 5 mandatory columns including uuid, question.name, old.value, new.value, and changed. as result it would return the cleaned data frame, master cleaning log (logs that are both applied and not applied on data), the version of cleaning log that was applied on raw data, a report of duplicate logs, and logs that their question name or uuid is not available in raw data frame. # Creating a dummy data set city_name &lt;- c(&quot;kabul&quot;, &quot;new dlehi&quot;, &quot;peshawar&quot;,&quot;new york&quot;) population &lt;- c(4430000, 21750000, 1970000, 8419000) uuid &lt;- c(&quot;eae001&quot;, &quot;eae002&quot;, &quot;eae003&quot;,&quot;eae004&quot;) my_df &lt;- data.frame(city_name, population, uuid) # Creating a dummy cleaning log old.value &lt;- c(&quot;kabul&quot;, 4430000, &quot;europe&quot;,&quot;kabul&quot;) question.name &lt;- c(&quot;city_name&quot;, &quot;population&quot;, &quot;continent&quot;,&quot;city_name&quot;) new.value &lt;- c(&quot;moscow&quot;,11920000,&quot;asia&quot;,&quot;moscow&quot;) uuid &lt;- c(&quot;eae001&quot;,&quot;eae001&quot;,&quot;eae001&quot;,&quot;eae001&quot;) changed &lt;- c(&quot;yes&quot;,&quot;yes&quot;,&quot;yes&quot;,&quot;yes&quot;) cleaning_log &lt;- data.frame(uuid,question.name, old.value, new.value, changed) ### declaring the function incorporate_logs = function(raw_df, cleaning_log, df_group_seprator = &quot;/&quot;, uuid_col = &quot;_uuid&quot;){ error &lt;- &quot;Error! Execution was haulted due to one of the following issues: - Cleaning log is empty - There is no changes in data (in cleaning log changed property for all logs is set to &#39;NO&#39;) - One/morethan one of the (uuid, question.name, old.value, new.value, and changed) columns are missing or column names are misspelled &quot; if (sum(grepl(&quot;uuid|question.name|old.value|new.value|changed&quot;, names(cleaning_log)))==5) { `%nin%` = Negate(`%in%`) # changing the group seprator (operator) from &quot;/&quot; to &quot;.&quot; names(raw_df) &lt;- gsub(df_group_seprator,&quot;.&quot;,names(raw_df)) cleaning_log$question.name &lt;- gsub(df_group_seprator,&quot;.&quot;, cleaning_log$question.name) # subsetting logs that their question is not (available) in dataset logs_not_in_rawdf &lt;- cleaning_log[cleaning_log$question.name %nin% names(raw_df) | cleaning_log$uuid %nin% raw_df[[uuid_col]], ] logs_not_in_rawdf &lt;- logs_not_in_rawdf[logs_not_in_rawdf$changed %in% c(&quot;yes&quot;,&quot;Yes&quot;),] # subsetting logs that their question exist in raw data frame and its new value is changed cleaning_log.changed &lt;- cleaning_log[cleaning_log$question.name %in% names(raw_df) &amp; cleaning_log$uuid %in% raw_df[[uuid_col]], ] cleaning_log.changed &lt;- cleaning_log.changed[cleaning_log.changed$changed %in% c(&quot;yes&quot;,&quot;Yes&quot;),] # capturing duplicate logs cleaning_log$unique_key &lt;- paste(cleaning_log$uuid, cleaning_log$question.name, sep = &quot;_&quot;) duplicate_logs &lt;- cleaning_log[(duplicated(cleaning_log$unique_key) | duplicated(cleaning_log$unique_key, fromLast = T)),] # cleaning master cleaning log cleaning_log &lt;- cleaning_log[cleaning_log$uuid %nin% logs_not_in_rawdf$uuid | cleaning_log$question.name %nin% logs_not_in_rawdf$question.name,] cleaning_log &lt;- cleaning_log[!is.na(cleaning_log$question.name), ] cleaning_log &lt;- cleaning_log[!is.na(cleaning_log$uuid), ] raw_df_valid &lt;- raw_df if (nrow(cleaning_log.changed)&gt;0) { # Apply cleaning log on raw data for (rowi in 1:nrow(cleaning_log.changed)){ uuid_i &lt;- cleaning_log.changed$uuid[rowi] var_i &lt;- cleaning_log.changed$question.name[rowi] old_i &lt;- cleaning_log.changed$old.value[rowi] new_i &lt;- cleaning_log.changed$new.value[rowi] if(class(raw_df_valid[[var_i]]) == &quot;character&quot;){ new_i &lt;- as.character(new_i) }else if(class(raw_df_valid[[var_i]]) == &quot;numeric&quot;){ new_i &lt;- as.numeric(new_i) }else if(class(raw_df_valid[[var_i]]) == &quot;logical&quot;){ new_i &lt;- as.integer(new_i) }else if(class(raw_df_valid[[var_i]]) == &quot;integer&quot;){ new_i &lt;- as.integer(new_i) } # Find the variable according to the row of the cleaning log raw_df_valid[raw_df_valid[[uuid_col]] == uuid_i, var_i] &lt;- new_i print(paste(rowi,&quot;uuid:&quot;, uuid_i, &quot;Old value:&quot;, old_i, &quot;changed to&quot;, new_i, &quot;for&quot;, var_i)) } return(list(cleaned_df = raw_df_valid, cleaning_log.applied = cleaning_log.changed, logs_not_in_rawDF = logs_not_in_rawdf, duplicate_logs = duplicate_logs, master_cleaning_log = cleaning_log)) }else{ cat(error) return(list(cleaned_df = raw_df_valid, cleaning_log.applied = cleaning_log.changed,logs_not_in_rawdf = logs_not_in_rawdf)) } }else{ cat(error) } } ### Applying the function to data frame incorprated_logs &lt;- incorporate_logs(my_df, cleaning_log, uuid_col = &quot;uuid&quot;) ## [1] &quot;1 uuid: eae001 Old value: kabul changed to moscow for city_name&quot; ## [1] &quot;2 uuid: eae001 Old value: 4430000 changed to 11920000 for population&quot; ## [1] &quot;3 uuid: eae001 Old value: kabul changed to moscow for city_name&quot; cleaned_data &lt;- incorprated_logs$cleaned_df master_cleaning_log &lt;- incorprated_logs$master_cleaning_log logs_not_in_rawDf &lt;- incorprated_logs$logs_not_in_rawDF cleaning_log.applied &lt;- incorprated_logs$cleaning_log.applied duplicate_log &lt;- incorprated_logs$duplicate_logs cleaned_data city_name population uuid moscow 11920000 eae001 new dlehi 21750000 eae002 peshawar 1970000 eae003 new york 8419000 eae004 master_cleaning_log uuid question.name old.value new.value changed unique_key 1 eae001 city_name kabul moscow yes eae001_city_name 2 eae001 population 4430000 11920000 yes eae001_population 4 eae001 city_name kabul moscow yes eae001_city_name logs_not_in_rawDf uuid question.name old.value new.value changed 3 eae001 continent europe asia yes cleaning_log.applied uuid question.name old.value new.value changed 1 eae001 city_name kabul moscow yes 2 eae001 population 4430000 11920000 yes 4 eae001 city_name kabul moscow yes duplicate_log uuid question.name old.value new.value changed unique_key 1 eae001 city_name kabul moscow yes eae001_city_name 4 eae001 city_name kabul moscow yes eae001_city_name 5.7.3 Check cleaning log, raw dataset and clean dataset dplyr waldo arsenal 5.8 Data cleaning - miscellaneous 5.8.1 Check for data sanity check if the data follow ODK format (select_one, select_multiple, xxx, choices) To be created 5.8.2 Turns label to xml Custom script (using ???) 5.8.3 Statistical Disclosure Control Methods Statistical Disclosure Control techniques can be defined as the set of methods to reduce the risk of disclosing information on individuals or organizations. Statistical Disclosure Control Process Measuring the disclosure risk Disclosure risk occurs if an unacceptably narrow estimation of a respondent’s confidential information is possible or if exact disclosure is possible with a high level of confidence. so we’ll need to clasify the variables into three categories; Non-identifying variables (e.g. respondent feelings) Direct identifiers (e.g. respondent names, phone numbers) Quasi-identifiers (e.g. age, gender, gps coordinates) we’ll use the main_dataset for demonstrating the process ## ## Attaching package: &#39;sdcMicro&#39; ## The following object is masked from &#39;package:hypegrammaR&#39;: ## ## testdata Applying anonymization methods Sometimes we may have some direct identifier variables that feed our analysis plans and in that cases we will need to deduct data by categorizing continuous variables. Measuring utility and information loss # weight variable weightVars &lt;- c(&#39;stratum.weight&#39;) # checking risk objSDC &lt;- createSdcObj(dat = main_dataset, keyVars = selectedKeyVars, weightVar = weightVars) print(objSDC, &quot;risk&quot;) ## Risk measures: ## ## Number of observations with higher risk than the main part of the data: 0 ## Expected number of re-identifications: 5.92 (0.37 %) #Generate an internal report #report(objSDC, filename = &quot;disclosure_risk_report&quot;,internal = T, verbose = TRUE) 5.9 Spatial verification checks 5.9.1 Spatial verification checks on settlement level One of the important checks is to ensure that all surveys were collected in the correct locations (areas, settlements, sample points). The usual procedure to perform such checks is to compare GNSS-coordinates obtained by the data collection device with enumerator input that indicates data collection location First, let’s generate random spatial coordinates (as real coordinates were excluded as part of personal data) and select columns that we need for cleaning. main_dataset &lt;- read.csv(&quot;inputs/UKR2007_MSNA20_HH_dataset_main_rcop.csv&quot;, na.strings = &quot;&quot;, stringsAsFactors = F) main_dataset$X_r6_gpslocation_latitude &lt;- runif(nrow(main_dataset), min = 47, max = 48) main_dataset$X_r6_gpslocation_longitude &lt;- runif(nrow(main_dataset), min = 37, max = 40) spatial_component &lt;- main_dataset %&gt;% select(r3_current_settlement,adm4NameLat,X_r6_gpslocation_latitude,X_r6_gpslocation_longitude,X_uuid)%&gt;% setNames(c(&quot;code_settlement_dataset&quot;,&quot;name_settlement_dataset&quot;,&quot;latitude&quot;,&quot;longitude&quot;,&quot;X_uuid&quot;)) Now with sf library we should open geojson file with settlements boundaries and convert our dataset into sf data type. ADM4 &lt;- st_read(dsn = &quot;inputs/MSNA20_ADM4.geojson&quot;) ## Reading layer `MSNA20_ADM4&#39; from data source ## `C:\\Users\\Yann SAY\\Desktop\\git\\rcookbook\\inputs\\MSNA20_ADM4.geojson&#39; ## using driver `GeoJSON&#39; ## Simple feature collection with 335 features and 6 fields ## Geometry type: MULTIPOLYGON ## Dimension: XY ## Bounding box: xmin: 37.24611 ymin: 47.02683 xmax: 39.73611 ymax: 48.98579 ## Geodetic CRS: WGS 84 spatial_component &lt;- st_as_sf(x = spatial_component, coords = c(&quot;longitude&quot;, &quot;latitude&quot;), crs = &quot;+proj=longlat +datum=WGS84&quot;) With st_join() function from nngeo library we are doing spatial join of interviews locations and settlement boundaries. Parameter “maxdist” specifies that join should be performed for all the points that are within 1000 meters from the closest polygon. After that, we compare the code of the closest settlement and the settlement code chosen by the enumerator. In case there is a difference in the codes we put “CHECK” status for such interviews and clarify interview location with the Field team. Keep in mind that for this example we used random coordinates so most likely all the interviews will have “CHECK” status spatial_component &lt;- st_join(spatial_component, ADM4, join = st_nn, k = 1, maxdist = 1000) ## lines or polygons spatial_component$spatial_check &lt;- ifelse(spatial_component$code_settlement_dataset == spatial_component$adm4NmL &amp; !is.na(spatial_component$adm4NmL), &quot;OK&quot;, &quot;CHECK&quot;) Print number of interviews that needs review print(paste(&quot;Number interviews to check&quot;,unlist(table(spatial_component$spatial_check)))) ## [1] &quot;Number interviews to check 1617&quot; 5.9.2 Spatial verification checks on sample point level Previous spatial verification check can identify surveys that were collected in the wrong area (settlement). But if you are using random sampling points (as described in Generation of random sample points) you can also check how your surveys corresponds with initially planned sample points. To perform spatial verification on sample point level we should add our sample ids to the dataset (of course in a real-life scenario you will already have them in your dataset). Also, we should open initial sampling points generated at the sampling stage and that were used by the enumerators. spatial_component$GPS_id_data &lt;- paste(spatial_component$name_settlement_dataset, data.table::rowid(spatial_component$name_settlement_dataset), sep = &quot;_&quot;) sample_points &lt;- st_read(dsn = &quot;outputs/sample_points.geojson&quot;) ## Reading layer `sample_points&#39; from data source ## `C:\\Users\\Yann SAY\\Desktop\\git\\rcookbook\\outputs\\sample_points.geojson&#39; ## using driver `GeoJSON&#39; ## Simple feature collection with 1610 features and 25 fields ## Geometry type: POINT ## Dimension: XY ## Bounding box: xmin: 37.25582 ymin: 47.08945 xmax: 39.72057 ymax: 48.96989 ## Geodetic CRS: WGS 84 Now let’s use again st_join() function but this time apply it on two point layers. We would put argument k equal 3 that will give us sample ids of 3 points in the dataset that are located in 1 km radius from our initial sample points. In case function return NA value it will mean that there are no points were collected near our planned sample point. Keep in mind that for this book we are using randomly generated survey locations so most of the points will have NA or CHECK status #first let&#39;s run st_join() function. You can reduce or increase maxdist value considering your circumstances. sample_point_check &lt;- st_join(spatial_component, sample_points, join = st_nn, k = 3, maxdist = 1000)%&gt;% distinct() ## lon-lat points #now we should reshape our dataset and select only columns with point ids sample_point_check &lt;- reshape2::dcast(sample_point_check, X_uuid + GPS_id_data ~ GPS_id, value.var = &quot;GPS_id&quot;, fun.aggregate = NULL) sample_point_check &lt;- as.data.frame(t(apply(sample_point_check,1, function(x) { return(c(x[!is.na(x)],x[is.na(x)]) )} )))%&gt;% select(where(function(x) any(!is.na(x))))%&gt;% set_names(c(&quot;uuid&quot;, &quot;GPS_id&quot;, &quot;pnt_1&quot;, &quot;pnt_2&quot;, &quot;pnt_3&quot;)) #and as a final step, we should mark all the interviews that will need additional review sample_point_check$Sample_Check &lt;- ifelse(sample_point_check$GPS_id == sample_point_check$pnt_1 | sample_point_check$GPS_id == sample_point_check$pnt_2 | sample_point_check$GPS_id == sample_point_check$pnt_3, &quot;OK&quot;, &quot;CHECK&quot;) Usually, there are always some interviews that were collected not accordingly to the sampling plan. They can be either too far away from the planned sample location or has different sample id due to enumerator mistake. Such cases are better to review manually using any GIS software (QGIS/ArcGIS Pro/ArcGIS Online/Google Earth Pro). But first, you will need to export your sample points into any spatial format (like geojson). #join spatial check on sample point level with spatial check on settlement level spatial_component &lt;- spatial_component %&gt;% left_join(sample_point_check, by = c(&quot;X_uuid&quot; = &quot;uuid&quot;)) #check if there are directory for the outputs and write there output geojson file if(!dir.exists(&quot;outputs&quot;)) { dir.create(&quot;outputs&quot;) } st_write(spatial_component, &quot;outputs/spatial_component_check.geojson&quot;, delete_dsn = TRUE) ## Deleting source `outputs/spatial_component_check.geojson&#39; using driver `GeoJSON&#39; ## Writing layer `spatial_component_check&#39; to data source ## `outputs/spatial_component_check.geojson&#39; using driver `GeoJSON&#39; ## Writing 1617 features with 16 fields and geometry type Point. "],["composite-indicators.html", "6 Composite indicators 6.1 Composite with 1 categorical variable - select one 6.2 Composite with 2 categorical variables 6.3 Composite with 1 categorical variable - select multiple 6.4 Composite with 1 numerical variable 6.5 Composite with 2 numerical variables 6.6 Composite with 2 or more numerical variables 6.7 New indicators from a loop to main dataset", " 6 Composite indicators composeR dplyr::case_when 6.1 Composite with 1 categorical variable - select one This example will look at creating an improved source of water variable. The indicator of interest is f11_dinking_water_source and the options for un-improved source of water are: trucked_in_water_truck_with_a_tank_etc drinking_water_from_water_kiosk_booth_with_water_for_bottling bottled_water_water_purchased_in_bottles other_specify #Creating a vector of un-improved source of water unimproved_source &lt;- c(&quot;trucked_in_water_truck_with_a_tank_etc&quot;, &quot;drinking_water_from_water_kiosk_booth_with_water_for_bottling&quot;, &quot;bottled_water_water_purchased_in_bottles&quot;, &quot;other_specify&quot;) #Using base R main_dataset$wash_drinkingwater_improved_source_baser &lt;- ifelse(main_dataset$f11_dinking_water_source %in% unimproved_source, &quot;not_improved&quot;, &quot;improved&quot;) table(main_dataset$f11_dinking_water_source, main_dataset$wash_drinkingwater_improved_source_baser, useNA = &quot;ifany&quot;) ## ## improved ## bottled_water_water_purchased_in_bottles 0 ## drinking_water_from_water_kiosk_booth_with_water_for_bottling 0 ## other_specify 0 ## personal_well 414 ## public_well_or_boreholes_shared_access 187 ## tap_drinking_water_centralized_water_supply 479 ## technical_piped_water 2 ## trucked_in_water_truck_with_a_tank_etc 0 ## ## not_improved ## bottled_water_water_purchased_in_bottles 68 ## drinking_water_from_water_kiosk_booth_with_water_for_bottling 366 ## other_specify 11 ## personal_well 0 ## public_well_or_boreholes_shared_access 0 ## tap_drinking_water_centralized_water_supply 0 ## technical_piped_water 0 ## trucked_in_water_truck_with_a_tank_etc 90 #Using base R main_dataset$wash_drinkingwater_improved_source_baser2 &lt;- NA main_dataset$wash_drinkingwater_improved_source_baser2[main_dataset$f11_dinking_water_source %in% unimproved_source] &lt;- &quot;not_improved&quot; main_dataset$wash_drinkingwater_improved_source_baser2[!(main_dataset$f11_dinking_water_source %in% unimproved_source)] &lt;- &quot;improved&quot; #Same same table(main_dataset$wash_drinkingwater_improved_source_baser, main_dataset$wash_drinkingwater_improved_source_baser2, useNA = &quot;ifany&quot;) ## ## improved not_improved ## improved 1082 0 ## not_improved 0 535 #Using case_when main_dataset &lt;- main_dataset %&gt;% mutate(wash_improved_source_dplyr = case_when(f11_dinking_water_source %in% unimproved_source ~ &quot;not_improved&quot;, TRUE ~ &quot;improved&quot;)) table(main_dataset$f11_dinking_water_source, main_dataset$wash_improved_source_dplyr, useNA = &quot;ifany&quot;) ## ## improved ## bottled_water_water_purchased_in_bottles 0 ## drinking_water_from_water_kiosk_booth_with_water_for_bottling 0 ## other_specify 0 ## personal_well 414 ## public_well_or_boreholes_shared_access 187 ## tap_drinking_water_centralized_water_supply 479 ## technical_piped_water 2 ## trucked_in_water_truck_with_a_tank_etc 0 ## ## not_improved ## bottled_water_water_purchased_in_bottles 68 ## drinking_water_from_water_kiosk_booth_with_water_for_bottling 366 ## other_specify 11 ## personal_well 0 ## public_well_or_boreholes_shared_access 0 ## tap_drinking_water_centralized_water_supply 0 ## technical_piped_water 0 ## trucked_in_water_truck_with_a_tank_etc 90 #Same same table(main_dataset$wash_drinkingwater_improved_source_baser, main_dataset$wash_improved_source_dplyr) ## ## improved not_improved ## improved 1082 0 ## not_improved 0 535 In the previous example, there was no missing value. For this example, the indicator to be built will turn a yes/no question into a dummy variable (1 and 0). The variable of interest is b16_hohh_pension_eligible table(main_dataset$b16_hohh_pension_eligible, useNA = &quot;ifany&quot;) ## ## no yes &lt;NA&gt; ## 6 870 741 #Using base R main_dataset$hohh_pension_eligible_dummy_baser &lt;- ifelse(main_dataset$b16_hohh_pension_eligible == &quot;yes&quot;, 1, 0) table(main_dataset$b16_hohh_pension_eligible, main_dataset$hohh_pension_eligible_dummy_baser, useNA = &quot;ifany&quot;) ## ## 0 1 &lt;NA&gt; ## no 6 0 0 ## yes 0 870 0 ## &lt;NA&gt; 0 0 741 #Using case_when main_dataset &lt;- main_dataset %&gt;% mutate(hohh_pension_eligible_dummy_dplyr = case_when(b16_hohh_pension_eligible == &quot;yes&quot; ~ 1, b16_hohh_pension_eligible == &quot;no&quot; ~ 0)) table(main_dataset$b16_hohh_pension_eligible, main_dataset$hohh_pension_eligible_dummy_dplyr, useNA = &quot;ifany&quot;) ## ## 0 1 &lt;NA&gt; ## no 6 0 0 ## yes 0 870 0 ## &lt;NA&gt; 0 0 741 #Same same table(main_dataset$hohh_pension_eligible_dummy_baser, main_dataset$hohh_pension_eligible_dummy_dplyr, useNA = &quot;ifany&quot;) ## ## 0 1 &lt;NA&gt; ## 0 6 0 0 ## 1 0 870 0 ## &lt;NA&gt; 0 0 741 #Watch out for NA. This was is not correct. main_dataset &lt;- main_dataset %&gt;% mutate(hohh_pension_eligible_dummy_dplyr2 = case_when(b16_hohh_pension_eligible == &quot;yes&quot; ~ 1, TRUE ~ 0)) table(main_dataset$b16_hohh_pension_eligible, main_dataset$hohh_pension_eligible_dummy_dplyr2, useNA = &quot;ifany&quot;) ## ## 0 1 ## no 6 0 ## yes 0 870 ## &lt;NA&gt; 741 0 #Not same same table(main_dataset$hohh_pension_eligible_dummy_baser, main_dataset$hohh_pension_eligible_dummy_dplyr2, useNA = &quot;ifany&quot;) ## ## 0 1 ## 0 6 0 ## 1 0 870 ## &lt;NA&gt; 741 0 6.2 Composite with 2 categorical variables This example will look at creating an indicator whether or not the sources for drinking and for cooking, cleaning and non-drinking purposes are both improved. The indicators of interest are f11_dinking_water_source (and more specifically wash_drinkingwater_improved_source_baser from previous paragraph) and f14_technical_water_source (F14_What is your HH’s main source of water for cooking, cleaning, and non-drinking purposes). First, a new variable has to be created, wash_otherwater_improved_source_baser. #Using base R main_dataset$wash_otherwater_improved_source_baser &lt;- ifelse(main_dataset$f14_technical_water_source %in% unimproved_source, &quot;not_improved&quot;, &quot;improved&quot;) main_dataset$wash_bothwater_improved_source_baser &lt;- ifelse(main_dataset$wash_drinkingwater_improved_source_baser == &quot;improved&quot; &amp; main_dataset$wash_otherwater_improved_source_baser == &quot;improved&quot;, &quot;both_improved&quot;, &quot;not_both_improved&quot;) table(main_dataset$wash_drinkingwater_improved_source_baser, main_dataset$wash_otherwater_improved_source_baser, main_dataset$wash_bothwater_improved_source_baser, useNA = &quot;ifany&quot;) ## , , = both_improved ## ## ## improved not_improved ## improved 1074 0 ## not_improved 0 0 ## ## , , = not_both_improved ## ## ## improved not_improved ## improved 0 8 ## not_improved 480 55 Now, the variable will be coded to have 3 categories instead: both improved, at least drinking water and not improved. main_dataset$wash_bothwater_improved_source_baser2 &lt;- ifelse(main_dataset$wash_drinkingwater_improved_source_baser == &quot;improved&quot; &amp; main_dataset$wash_otherwater_improved_source_baser == &quot;improved&quot;, &quot;both_improved&quot;, ifelse(main_dataset$wash_drinkingwater_improved_source_baser == &quot;improved&quot;, &quot;at_least_drinking&quot;, &quot;not_both_improved&quot;)) table(main_dataset$wash_drinkingwater_improved_source_baser, main_dataset$wash_otherwater_improved_source_baser, main_dataset$wash_bothwater_improved_source_baser2, useNA = &quot;ifany&quot;) ## , , = at_least_drinking ## ## ## improved not_improved ## improved 0 8 ## not_improved 0 0 ## ## , , = both_improved ## ## ## improved not_improved ## improved 1074 0 ## not_improved 0 0 ## ## , , = not_both_improved ## ## ## improved not_improved ## improved 0 0 ## not_improved 480 55 #Using dplyr main_dataset &lt;- main_dataset %&gt;% mutate(wash_bothwater_improved_source_dplyr = case_when(wash_drinkingwater_improved_source_baser == &quot;improved&quot; &amp; wash_otherwater_improved_source_baser == &quot;improved&quot; ~ &quot;both_improved&quot;, wash_drinkingwater_improved_source_baser == &quot;improved&quot; ~ &quot;at_least_drinking&quot;, TRUE ~ &quot;not_both_improved&quot; )) table(main_dataset$wash_bothwater_improved_source_dplyr, main_dataset$wash_bothwater_improved_source_baser2, useNA = &quot;ifany&quot;) ## ## at_least_drinking both_improved not_both_improved ## at_least_drinking 8 0 0 ## both_improved 0 1074 0 ## not_both_improved 0 0 535 6.3 Composite with 1 categorical variable - select multiple In this example we are creating an indicator to score whether or not drinking water is being processed or purified before usage. The indicator is calculated based on one categorical question f12_drinking_water_treat #Using dplyr main_dataset &lt;- main_dataset %&gt;% mutate( wash_indicator1 = case_when( f12_drinking_water_treat.do_not_process_purify == 1 ~ 3 , f12_drinking_water_treat.cleaning_with_chemicals_chlorination == 1 | f12_drinking_water_treat.water_precipitation == 1 | f12_drinking_water_treat.filtering_the_water_pitcher_filter == 1 | f12_drinking_water_treat.filtering_the_water_reverse_osmosis_filter == 1 | f12_drinking_water_treat.boiling == 1 | f12_drinking_water_treat.percolation == 1 ~ 1 ) ) #Using base R main_dataset$wash_indicator2 = ifelse( main_dataset$f12_drinking_water_treat.do_not_process_purify == 1,3, ifelse( main_dataset$f12_drinking_water_treat.cleaning_with_chemicals_chlorination == 1 | main_dataset$f12_drinking_water_treat.water_precipitation == 1 | main_dataset$f12_drinking_water_treat.filtering_the_water_pitcher_filter == 1 | main_dataset$f12_drinking_water_treat.filtering_the_water_reverse_osmosis_filter == 1 | main_dataset$f12_drinking_water_treat.boiling == 1 | main_dataset$f12_drinking_water_treat.percolation == 1, 1,NA)) 6.4 Composite with 1 numerical variable This example will look at creating one a categorical variable based on a number, f6_how_many_wood_hh_consumed_last_winter , ‘less than 5’, between 5 (included) and 10 and ‘10 and above’. main_dataset &lt;- main_dataset %&gt;% mutate(wood_consumed_categories = case_when(f6_how_many_wood_hh_consumed_last_winter &lt; 5 ~ &quot;less_than_5&quot;, f6_how_many_wood_hh_consumed_last_winter &lt; 10 ~ &quot;between5_and10&quot;, f6_how_many_wood_hh_consumed_last_winter &gt;= 10 ~ &quot;ten_above&quot;)) 6.5 Composite with 2 numerical variables This example will look at creating one of the indicators necessary to compute the FCS. In some cases, we need to check if the sum of number of days for 2 types of food are above 7 or not. If the sum is above 7, then it has to return 7 otherwise, the sum of both variables. # Combine cereals/roots and meat/eggs and make maximum 7 days ## Using base R main_dataset$fcs_cereal_roots &lt;- ifelse((main_dataset$g1_cereals_consumption + main_dataset$g2_roots_consumption) &gt; 7, 7, main_dataset$g1_cereals_consumption + main_dataset$g2_roots_consumption) ## Using dplyr main_dataset &lt;- main_dataset %&gt;% mutate(fcs_meat_eggs = ifelse((g5_meat_consumption + g6_eggs_consumption) &gt; 7, 7, g5_meat_consumption + g6_eggs_consumption)) 6.6 Composite with 2 or more numerical variables This example will look at creating the food consumption score. main_dataset &lt;- main_dataset %&gt;% mutate(FCS_score_dplyr = fcs_cereal_roots * 2 + g3_vegetables_consumption * 1 + g4_fruits_consumption * 1 + fcs_meat_eggs * 4 + g7_pulses_consumption * 3 + g8_dairy_consumption * 4 + g9_oil_consumption * 0.5 + g10_sugar_consumption * 0.5) main_dataset$FCS_score_baser &lt;- (main_dataset$fcs_cereal_roots * 2)+ (main_dataset$g3_vegetables_consumption * 1)+ (main_dataset$g4_fruits_consumption * 1)+ (main_dataset$fcs_meat_eggs * 4)+ (main_dataset$g7_pulses_consumption * 3)+ (main_dataset$g8_dairy_consumption * 4)+ (main_dataset$g9_oil_consumption * 0.5)+ (main_dataset$g10_sugar_consumption * 0.5) 6.7 New indicators from a loop to main dataset e.g. aggregating the number of children going to school from a loop "],["analysis.html", "7 Analysis 7.1 hypegrammaR 7.2 srvyr package 7.3 butteR survey_collapse 7.4 Analysis with numerical variables 7.5 Ratios 7.6 Weights 7.7 Repeating the above 7.8 Analysis - top X / ranking (select one and select multiple) 7.9 Borda count 7.10 Hypothesis testing", " 7 Analysis 7.1 hypegrammaR hypegrammaR follow the case mapping logic to compute analysis. It will also use the kobo questionnaire tool to help some of decision to be made. This just load the information that will be need to conduct the analysis : dataset, kobotool (questions and choices), sample frame library(hypegrammaR) library(magrittr) library(surveyweights) library(srvyr) library(readxl) library(spatstat) library(ggpubr) #load dataset main_dataset &lt;- read.csv(&quot;inputs/UKR2007_MSNA20_HH_dataset_main_rcop.csv&quot;, na.strings = &quot;&quot;,stringsAsFactors = F) #load kobotool questions &lt;- read_xlsx(&quot;inputs/UKR2007_MSNA20_HH_Questionnaire_24JUL2020.xlsx&quot;,sheet=&quot;survey&quot;) choices &lt;- read_xlsx(&quot;inputs/UKR2007_MSNA20_HH_Questionnaire_24JUL2020.xlsx&quot;,sheet=&quot;choices&quot;) #load sampling frame my_sampling_frame &lt;- read_excel(&quot;inputs/UKR2007_MSNA20_GCA_Weights_26AUG2020.xlsx&quot;, sheet = &quot;for_r&quot;) The questionnaire object is a list of function using the kobotool and dataset as input. For example, it will check if a given variable is a select multiple or not. #create a questionnaire object my_questionnaire &lt;- hypegrammaR::load_questionnaire(data = main_dataset, questions = questions, choices = choices, choices.label.column.to.use = &quot;label::English&quot;) The weighting function is created by the weighting_fun_from_samplinframe from the surveyweights package. It calculates the design weight based on the sampling frame and the dataset. The stratification names values used in the sampling frame and the dataset HAS to be the same. What it does, it create a function that will calculate the weights based on your dataset. (It was defined as a function so it could re-calculate weights depending on the subset. however, the current guidelines is to keep the same design weights through all the assessement; the function still works for that case) #create a weigthing function my_weigthing_function &lt;- surveyweights::weighting_fun_from_samplingframe(sampling.frame = my_sampling_frame, data.stratum.column = &quot;strata&quot;, sampling.frame.population.column = &quot;population&quot;, sampling.frame.stratum.column = &quot;strata&quot;, data = main_dataset) If you want to add the weights to your dataframe this is how you can do it. #optional, if you want to add the weights into the dataset. main_dataset$stratum.weight &lt;- my_weigthing_function(main_dataset) hypegrammaR uses cases to choose what type analysis to do. A “case” for hypegrammaR is a character string CASE_XXXX_YYYY_ZZZZ where : XXXX: hypothesis type (group_difference, direct_reporting) YYYY: dependent var type (categorical, numerical) ZZZZ: independent var type (categorical, numerical, empty if no independent variable) . All cases implemented can been seen with this code. hypegrammaR:::list_all_cases(implemented_only = T) ## [1] &quot;CASE_group_difference_categorical_categorical&quot; ## [2] &quot;CASE_group_difference_numerical_categorical&quot; ## [3] &quot;CASE_direct_reporting_numerical_&quot; ## [4] &quot;CASE_direct_reporting_categorical_&quot; ## [5] &quot;CASE_direct_reporting_categorical_categorical&quot; ## [6] &quot;CASE_direct_reporting_numerical_categorical&quot; ## [7] &quot;CASE_limit_categorical&quot; ## [8] &quot;CASE_limit_numerical&quot; ## [9] &quot;CASE_correlation_numerical_numerical&quot; ## [10] &quot;CASE_correlation_categorical_numerical&quot; If you want to know what are the different proportion of the displacement status for each strata. The following information I need are: hypothesis : group_difference dependent variable : d1_hh_displacement_status -&gt; categorical independent_variable : strata -&gt; categorical #analysis my_case &lt;- hypegrammaR::map_to_case(hypothesis.type = &quot;group_difference&quot;, dependent.var.type = &quot;categorical&quot;, independent.var.type = &quot;categorical&quot;) my_case ## [1] &quot;CASE_group_difference_categorical_categorical&quot; ## attr(,&quot;class&quot;) ## [1] &quot;analysis_case&quot; The function map_to_result will calculate your summary statistics, it will take a couple of arguments. my_results &lt;- hypegrammaR::map_to_result(data = main_dataset, dependent.var = &quot;d1_hh_displacement_status&quot;, independent.var = &quot;strata&quot;, case = my_case, weighting = my_weigthing_function, questionnaire = my_questionnaire, confidence_level = .90) The result object is a list with several information: parameters: returns the information used of that analysis summary statistics: returns the summary statistics in a tidy format hypothesis test: returns hypothesis testing information (if avalaible) message: returns a message (if the analysis went well or not) my_results$summary.statistic %&gt;% head() ## dependent.var independent.var ## 1 d1_hh_displacement_status strata ## 2 d1_hh_displacement_status strata ## 3 d1_hh_displacement_status strata ## 4 d1_hh_displacement_status strata ## 5 d1_hh_displacement_status strata ## 6 d1_hh_displacement_status strata ## dependent.var.value ## 1 displaced_and_idp_status ## 2 displaced_but_does_not_have_idp_status ## 3 no ## 4 partially_displaced_and_dont_have_idp_status ## 5 partially_displaced_and_have_idp_status ## 6 used_to_be_displaced_but_returned_and_has_no_status_of_idp ## independent.var.value numbers se min max ## 1 20km_rural 0.046683047 NA 0.0261473551 0.067218738 ## 2 20km_rural 0.002457002 NA -0.0023622501 0.007276255 ## 3 20km_rural 0.911547912 NA 0.8839068400 0.939188983 ## 4 20km_rural 0.007371007 NA -0.0009555979 0.015697613 ## 5 20km_rural 0.022113022 NA 0.0077984141 0.036427630 ## 6 20km_rural 0.009828010 NA 0.0002251810 0.019430839 If you need to run several analysis, you can use a data analysis plan (DAP) file which is a file that comprises of the following columns: dependent.variable: name of the dependent variable (kobo name, column name) dependent.variable.type: type of the dependent variable (categorical or numerical or empty) independent.variable: name of the independent variable (kobo name, column name) independent.variable.type: type of the independent variable (categorical or numerical or empty) repeat.for.variable: name of the variable to repeat the analysis for (e.g per camp or district or governorate) hypothesis.type: type of hypothesis (group_difference, direct_reporting) you can have other columns to help you write the analysis plan such as RQ and sub RQ You cannot have duplicate columns Below, I am creating the DAP, but you could read a csv file. It has : 2 categorical variables, (select multiple type in kobo), l4_which_difficult_access_health and j10_education_security_concerns_in_the_vicinity_of_facility 2 categorical variables, (select one type in kobo), b9_hohh_marital_status and d1_hh_displacement_status, 2 numerical variables (integer type in kobo): b7_hohh_age and b5_age It will repeat the analysis 3 times for each dependent variable: using the strata variable as independent variable (first 6 rows), using no independent variable, for the complete dataset (national level?), (second 6 rows), using the b9_hohh_marital_status as independent variable but repeating each strata (last 6 rows) #dap my_dap &lt;- data.frame(dependent.variable = c(rep(c(&quot;l4_which_difficult_access_health&quot;, &quot;j10_education_security_concerns_in_the_vicinity_of_facility&quot;, &quot;b7_hohh_age&quot;, &quot;b5_age&quot;, &quot;b9_hohh_marital_status&quot;, &quot;d1_hh_displacement_status&quot;), 2), c(&quot;l4_which_difficult_access_health&quot;, &quot;j10_education_security_concerns_in_the_vicinity_of_facility&quot;, &quot;b7_hohh_age&quot;, &quot;b5_age&quot;, &quot;d1_hh_displacement_status&quot;)), dependent.variable.type = c(rep(c(&quot;categorical&quot;, &quot;categorical&quot;, &quot;numerical&quot;, &quot;numerical&quot;, &quot;categorical&quot;, &quot;categorical&quot;),2),&quot;categorical&quot;, &quot;categorical&quot;, &quot;numerical&quot;, &quot;numerical&quot;, &quot;categorical&quot;), independent.variable = c(rep(&quot;strata&quot;, 6), rep(NA, 6), rep(&quot;b9_hohh_marital_status&quot;, 5)), independent.variable.type = c(rep(&quot;categorical&quot;, 6), rep(NA, 6), rep(&quot;categorical&quot;, 5)), hypothesis.type = c(rep(&quot;group_difference&quot;, 6), rep(&quot;direct_reporting&quot;, 6), rep(&quot;group_difference&quot;, 5)), repeat.for.variable = c(rep(NA, 12), rep(&quot;strata&quot;, 5)) ) my_dap ## dependent.variable ## 1 l4_which_difficult_access_health ## 2 j10_education_security_concerns_in_the_vicinity_of_facility ## 3 b7_hohh_age ## 4 b5_age ## 5 b9_hohh_marital_status ## 6 d1_hh_displacement_status ## 7 l4_which_difficult_access_health ## 8 j10_education_security_concerns_in_the_vicinity_of_facility ## 9 b7_hohh_age ## 10 b5_age ## 11 b9_hohh_marital_status ## 12 d1_hh_displacement_status ## 13 l4_which_difficult_access_health ## 14 j10_education_security_concerns_in_the_vicinity_of_facility ## 15 b7_hohh_age ## 16 b5_age ## 17 d1_hh_displacement_status ## dependent.variable.type independent.variable independent.variable.type ## 1 categorical strata categorical ## 2 categorical strata categorical ## 3 numerical strata categorical ## 4 numerical strata categorical ## 5 categorical strata categorical ## 6 categorical strata categorical ## 7 categorical &lt;NA&gt; &lt;NA&gt; ## 8 categorical &lt;NA&gt; &lt;NA&gt; ## 9 numerical &lt;NA&gt; &lt;NA&gt; ## 10 numerical &lt;NA&gt; &lt;NA&gt; ## 11 categorical &lt;NA&gt; &lt;NA&gt; ## 12 categorical &lt;NA&gt; &lt;NA&gt; ## 13 categorical b9_hohh_marital_status categorical ## 14 categorical b9_hohh_marital_status categorical ## 15 numerical b9_hohh_marital_status categorical ## 16 numerical b9_hohh_marital_status categorical ## 17 categorical b9_hohh_marital_status categorical ## hypothesis.type repeat.for.variable ## 1 group_difference &lt;NA&gt; ## 2 group_difference &lt;NA&gt; ## 3 group_difference &lt;NA&gt; ## 4 group_difference &lt;NA&gt; ## 5 group_difference &lt;NA&gt; ## 6 group_difference &lt;NA&gt; ## 7 direct_reporting &lt;NA&gt; ## 8 direct_reporting &lt;NA&gt; ## 9 direct_reporting &lt;NA&gt; ## 10 direct_reporting &lt;NA&gt; ## 11 direct_reporting &lt;NA&gt; ## 12 direct_reporting &lt;NA&gt; ## 13 group_difference strata ## 14 group_difference strata ## 15 group_difference strata ## 16 group_difference strata ## 17 group_difference strata To use a DAP, you need to use the function from_analysisplan_map_to_output instead of the combination of map_to_case and map_to_result. It will look for the case itself. from_analysisplan_map_to_output a list of list of results. So you need to wriggle a bit around to come to a master dataframe. my_results &lt;- hypegrammaR::from_analysisplan_map_to_output(data =main_dataset, analysisplan = my_dap, weighting = my_weigthing_function, questionnaire = my_questionnaire, confidence_level = .90) long_table &lt;- my_results$results %&gt;% lapply(function(x) x[[&quot;summary.statistic&quot;]]) %&gt;% do.call(rbind, .) long_table %&gt;% head() ## dependent.var independent.var dependent.var.value ## 1 l4_which_difficult_access_health strata lack_of_facilities ## 2 l4_which_difficult_access_health strata lack_of_facilities ## 3 l4_which_difficult_access_health strata lack_of_facilities ## 4 l4_which_difficult_access_health strata lack_of_facilities ## 5 l4_which_difficult_access_health strata cost_of_medicine ## 6 l4_which_difficult_access_health strata cost_of_medicine ## independent.var.value numbers se min max repeat.var ## 1 20km_rural 0.2131148 NA 0.15352034 0.2727092 &lt;NA&gt; ## 2 20km_urban 0.1013514 NA 0.05248276 0.1502199 &lt;NA&gt; ## 3 5km_rural 0.2500000 NA 0.19147544 0.3085246 &lt;NA&gt; ## 4 5km_urban 0.1160221 NA 0.06915872 0.1628855 &lt;NA&gt; ## 5 20km_rural 0.8579235 NA 0.80711592 0.9087311 &lt;NA&gt; ## 6 20km_urban 0.8378378 NA 0.77815151 0.8975242 &lt;NA&gt; ## repeat.var.value ## 1 &lt;NA&gt; ## 2 &lt;NA&gt; ## 3 &lt;NA&gt; ## 4 &lt;NA&gt; ## 5 &lt;NA&gt; ## 6 &lt;NA&gt; 7.2 srvyr package “The srvyr package aims to add dplyr like syntax to the survey package.” It is a very useful package for a variety of aggregations of survey data. ###makes some additions. library(tidyverse) library(butteR) library(srvyr) library(kableExtra) df&lt;-read_csv(&quot;inputs/UKR2007_MSNA20_HH_dataset_main_rcop.csv&quot;) dfsvy&lt;-as_survey(df) 7.2.1 Categorical variables srvyr package allows categorical variables to be broken down using a similar syntax as dplyr. Using dplyr you might typically calculate a percent mean as follows: df %&gt;% group_by(b9_hohh_marital_status) %&gt;% summarise( n=n() ) %&gt;% ungroup() %&gt;% mutate( pct_mean=n/sum(n) ) ## # A tibble: 6 × 3 ## b9_hohh_marital_status n pct_mean ## &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; ## 1 divorced 183 0.113 ## 2 married 677 0.419 ## 3 separated_married_but_not_living_together 37 0.0229 ## 4 single 129 0.0798 ## 5 unmarried_but_living_together 96 0.0594 ## 6 widowed 495 0.306 To calculate the percent mean of a categorical variable using srvyr object is required. The syntax is quite similar to dplyr, but a bit less verbose. By specifying the vartype as “ci” we also get the upper and lower confidence intervals dfsvy %&gt;% group_by(b9_hohh_marital_status) %&gt;% summarise( pct_mean = survey_mean(vartype = &quot;ci&quot;) ) ## # A tibble: 6 × 4 ## b9_hohh_marital_status pct_mean pct_mean_low pct_mean_upp ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 divorced 0.113 0.0977 0.129 ## 2 married 0.419 0.395 0.443 ## 3 separated_married_but_not_living_together 0.0229 0.0156 0.0302 ## 4 single 0.0798 0.0666 0.0930 ## 5 unmarried_but_living_together 0.0594 0.0478 0.0709 ## 6 widowed 0.306 0.284 0.329 To calculate the weigthed percent mean of a multiple response option you need to created a srvyr object including the weights. The syntax is similar to dyplr and allows for the total columns weighted_object &lt;- main_dataset %&gt;% as_survey_design(ids = X_uuid, weights = stratum.weight) weighted_table &lt;- weighted_object %&gt;% group_by(adm1NameLat) %&gt;% #group by categorical variable summarise_at(vars(starts_with(&quot;b10_hohh_vulnerability.&quot;)), survey_mean) %&gt;% #select multiple response question ungroup() %&gt;% bind_rows( summarise_at(weighted_object, vars(starts_with(&quot;b10_hohh_vulnerability.&quot;)), survey_mean) # bind the total ) %&gt;% mutate_at(vars(adm1NameLat), ~replace(., is.na(.), &quot;Total&quot;)) %&gt;% select(., -(ends_with(&quot;_se&quot;))) %&gt;% #remove the colums with the variance type calculations mutate_if(is.numeric, ~ . * 100) %&gt;% mutate_if(is.numeric, round, 2) print(weighted_table) ## # A tibble: 3 × 11 ## adm1NameLat b10_hohh_vulnerability.no b10_hohh_vulnerability… b10_hohh_vulner… ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Donetska 30.0 9.7 8.88 ## 2 Luhanska 15.2 9.88 9.63 ## 3 Total 26.4 9.74 9.07 ## # … with 7 more variables: b10_hohh_vulnerability.veteran_of_war_ato &lt;dbl&gt;, ## # b10_hohh_vulnerability.single_parent &lt;dbl&gt;, ## # b10_hohh_vulnerability.family_with_3_or_more_children &lt;dbl&gt;, ## # b10_hohh_vulnerability.family_with_foster_children &lt;dbl&gt;, ## # b10_hohh_vulnerability.other_specify &lt;dbl&gt;, ## # b10_hohh_vulnerability.chronic_illness &lt;dbl&gt;, ## # b10_hohh_vulnerability.older_person &lt;dbl&gt; 7.2.2 Numeric variables srvyr treats the calculation/aggregation of numeric variables differently in an attempt to mirror dplyr syntax to calculate the mean and median expenditure in dplyr you would likely do the following df %&gt;% summarise( mean_expenditure= mean(n1_HH_total_expenditure,na.rm=T), median_expenditure=median(n1_HH_total_expenditure,na.rm=T), ) ## # A tibble: 1 × 2 ## mean_expenditure median_expenditure ## &lt;dbl&gt; &lt;dbl&gt; ## 1 5129. 4000 If you wanted to subset this by another variable in dplyr you would add the group_by argument df %&gt;% group_by(strata) %&gt;% summarise( mean_expenditure= mean(n1_HH_total_expenditure,na.rm=T), median_expenditure=median(n1_HH_total_expenditure,na.rm=T), ) ## # A tibble: 4 × 3 ## strata mean_expenditure median_expenditure ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 20km_rural 5488. 4000 ## 2 20km_urban 6208. 5000 ## 3 5km_rural 3919. 3075 ## 4 5km_urban 4942. 4000 This is the reason why the syntax also varies between categorical and numeric variables in srvyr. Therefore, to do the same using srvyr you would do the following (with a survey object). Note that due to this difference in syntax the na.rm argument works for numeric variables, but does not work for categorical variables. This was modified when srvyr was updated from v 0.3.8 dfsvy %&gt;% summarise( mean= survey_mean(n1_HH_total_expenditure,na.rm=T,vartype = &quot;ci&quot;), ) ## # A tibble: 1 × 3 ## mean mean_low mean_upp ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 5129. 4891. 5367. similar to dplyr you can easily add a group_by argument to add a subset calculation dfsvy %&gt;% group_by(strata) %&gt;% summarise( mean= survey_mean(n1_HH_total_expenditure,na.rm=T,vartype = &quot;ci&quot;), ) ## # A tibble: 4 × 4 ## strata mean mean_low mean_upp ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 20km_rural 5488. 4980. 5996. ## 2 20km_urban 6208. 5661. 6756. ## 3 5km_rural 3919. 3469. 4370. ## 4 5km_urban 4942. 4604. 5280. 7.3 butteR survey_collapse The survey_collapse function available in butteR aggregates both categorical and numerical columns of a srvyr object. It provides a standardized format output that includes mean/pct mean (point estimates), and the upper/lower confidence intervals along with the unweighted number/frequency for each response option. The survey_collapse function is built around the great srvyr package. The srvyr package is a more modern/tidyverse style wrapper for the survey package. Both the srvyr and survye packages are great and there use is highligh encouraged. The main advantages of survey_collapse The standardized output produced Ability to analyze both categorical and numerical columns with a consistent syntax Batch analyses and ability to perform many different subsetting investigations with ease Below is an example of its use. First we must read in some data and make it into a srvyr object ###makes some additions. library(tidyverse) library(butteR) library(srvyr) library(kableExtra) df&lt;-read_csv(&quot;inputs/UKR2007_MSNA20_HH_dataset_main_rcop.csv&quot;) dfsvy&lt;-as_survey(df) For the purpose of the example I next choose a variety of different column types to analyze. As you can see I have selected select_one (categorical), select_multiple (binary categorical), and numerical columns. I then put these all into one vector. # here are some random concatenated select multiple parent questions select_multiple_parent_cols&lt;-c(&quot;l4_which_difficult_access_health&quot;, &quot;j10_education_security_concerns_in_the_vicinity_of_facility&quot;) numeric_cols&lt;- c(&quot;b7_hohh_age&quot;, &quot;b5_age&quot;) select_one_cols&lt;- c(&quot;b9_hohh_marital_status&quot;, &quot;d1_hh_displacement_status&quot;) mixed_columns&lt;- c(select_multiple_parent_cols, numeric_cols, select_one_cols) A nice feature of the standardized output produced by survey_collapse is that you can perform variety of different types of analyses and then bind them together into one dataframe/tibble. Therefore I fill an empty list with analysis to facilitate binding later. For the first analyses I simply aggregate all the columns specified as mean/pct mean. I next analyze the same variable but this time subset/disaggreated by the strata column. It’s a good idea to mutate an extra column indicating what exact analysis was done so that when they are binded together later they can more easily be manipulated note: I am commenting this section as it seems to break with the latest update outputs&lt;-list() # outputs$overall&lt;-butteR::survey_collapse(df = dfsvy,vars_to_analyze = mixed_columns) %&gt;% # mutate(analysis_level= &quot;overall&quot;) # # outputs$strata&lt;-butteR::survey_collapse(df = dfsvy,vars_to_analyze = mixed_columns,disag = &quot;strata&quot;) %&gt;% # mutate(analysis_level= &quot;strata&quot;) Here is an example of what the long format data looks like as a table. This is a great format for manipulating/filtering and then graphing with ggplot # output_df&lt;- bind_rows(outputs) # # output_df %&gt;% # filter(analysis_level==&quot;overall&quot;) %&gt;% # mutate(question_val= paste0(variable,&quot;.&quot;,variable_val)) %&gt;% # ggplot(aes(x= question_val,y= `mean/pct`))+ # geom_point(stat=&quot;identity&quot;, position = position_dodge(width = 0.3))+ # geom_errorbar(aes(ymin= `mean/pct_low`, ymax= `mean/pct_upp`), # width=0.2,position = position_dodge(width = 0.3))+ # scale_y_continuous(labels = scales::percent,breaks = seq(0,1,by=0.1))+ # coord_flip()+ # theme_bw()+ # theme( # axis.title = element_blank(), # axis.text.x = element_text(angle=90), # legend.title= element_blank() # ) # # # # Easy to plot subset findings as well! # output_df %&gt;% # filter(analysis_level==&quot;strata&quot;) %&gt;% # mutate(question_val= paste0(variable,&quot;.&quot;,variable_val)) %&gt;% # ggplot(aes(x= question_val,y= `mean/pct`, color=subset_1_val))+ # geom_point(stat=&quot;identity&quot;, position = position_dodge(width = 0.3))+ # geom_errorbar(aes(ymin= `mean/pct_low`, ymax= `mean/pct_upp`), # width=0.2,position = position_dodge(width = 0.3))+ # scale_y_continuous(labels = scales::percent,breaks = seq(0,1,by=0.1))+ # coord_flip()+ # theme_bw()+ # theme( # axis.title = element_blank(), # axis.text.x = element_text(angle=90), # legend.title= element_blank() # ) 7.3.1 select_one 7.3.2 select_mutiple 7.4 Analysis with numerical variables 7.4.1 Averages ###Summarytools (CRAN package) ###hypegrammaR / koboquest / butteR 7.4.2 Median ####Spatstat Spatstat - library with set of different functions for analyzing Spatial Point Patterns but also quite useful for analysis of weighted data. At first let’s select all numerical variables from the dataset using Kobo questionnaire and dataset. It can be done with the following custom function: select_numerical &lt;- function(dataset, kobo){ kobo_questions &lt;- kobo[grepl(&quot;integer|decimal|calculate&quot;, kobo$type),c(&quot;type&quot;,&quot;name&quot;)] names.use &lt;- names(dataset)[(names(dataset) %in% as.character(kobo_questions$name))] numerical &lt;- dataset[,c(names.use,&quot;X_uuid&quot;,&#39;strata&#39;,&#39;stratum.weight&#39;)] #Here we can select any other relevant variables numerical[names.use] &lt;- lapply(numerical[names.use], gsub, pattern = &#39;NA&#39;, replacement = NA) numerical[names.use] &lt;- lapply(numerical[names.use], as.numeric) return(numerical) } numerical_questions &lt;- select_numerical(main_dataset, questions) numerical_classes &lt;- sapply(numerical_questions[,1:c(ncol(numerical_questions)-3)], class) #Here we can check class of each selected variable numerical_classes &lt;- numerical_classes[&quot;character&quot; %in% numerical_classes] #and here we check if any variable has class &quot;character&quot; numerical_questions &lt;- numerical_questions[ , !names(numerical_questions) %in% numerical_classes] #if any variable has a character class then we remove it rm(numerical_classes)#and here we removing vector with classes from our environment Now let’s calculate weighted median for “n1_HH_total_expenditure”. weighted.median(numerical_questions$n1_HH_total_expenditure, numerical_questions$stratum.weight, na.rm=TRUE) ## [1] 4150 But if we want to calculate weighted medians for each variable we will need to iterate this function on those variables. But first we will need to exclude variables with less than 3 observations. counts &lt;- numerical_questions %&gt;% select(-X_uuid, -strata) %&gt;% summarise(across(.cols = everything(), .fns= ~sum(!is.na(.)) ))%&gt;% t()#Calculating count of observation for each variable numerical_questions &lt;- numerical_questions[ , (names(numerical_questions) %in% rownames(subset(counts, counts[,1] &gt; 3)))] #removing variables with less than 3 observations medians &lt;- lapply(numerical_questions[1:46], weighted.median, w = numerical_questions$stratum.weight, na.rm=TRUE)%&gt;% as.data.frame() Now we can transpond resulting vector and add description to the calculation medians &lt;- as.data.frame(t(medians),stringsAsFactors = FALSE) names(medians)[1] &lt;- &quot;Median_wght&quot; head(medians) ## Median_wght ## b15_hohh_income 2780.0 ## hohh_age_18 0.0 ## age_18 0.0 ## b21_num_additional_hh_members 0.5 ## age_5_18_number 0.0 ## age_5_12_number 0.0 7.5 Ratios This function computes the % of answers for select multiple questions. The output can be used as a data merge file for indesign. The arguments are: dataset, disaggregation variable, question to analyze, and weight column. 7.5.1 Example1: Question: e11_items_do_not_have_per_hh Disaggregation variable: b9_hohh_marital_status weights column: stratum.weight ratios_select_multiple &lt;- function(df, x_var, y_prefix, weights_var) { df %&gt;% group_by({ { x_var } }) %&gt;% filter(!is.na(y_prefix)) %&gt;% summarize(across(starts_with(paste0(y_prefix, &quot;.&quot;)), list(pct = ~ weighted.mean(., { { weights_var } }, na.rm = T)))) } res &lt;- ratios_select_multiple( main_dataset, b9_hohh_marital_status, &quot;e11_items_do_not_have_per_hh&quot;, stratum.weight ) head(res) ## # A tibble: 6 × 5 ## b9_hohh_marital_status e11_items_do_no… e11_items_do_no… e11_items_do_no… ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 divorced 0.0851 0.0859 0.393 ## 2 married 0.0496 0.0545 0.409 ## 3 separated_married_but_not_… 0.0138 0.0513 0.443 ## 4 single 0.0726 0.0516 0.457 ## 5 unmarried_but_living_toget… 0.0874 0.101 0.293 ## 6 widowed 0.106 0.0923 0.504 ## # … with 1 more variable: ## # e11_items_do_not_have_per_hh.hh_has_all_items_pct &lt;dbl&gt; 7.5.2 Example2 - Analyzing multiple questions and combine the output: Question: e11_items_do_not_have_per_hh and b11_hohh_chronic_illness Disaggregation variable: b9_hohh_marital_status weights column: stratum.weight res &lt;- do.call(&quot;full_join&quot;, map( c(&quot;e11_items_do_not_have_per_hh&quot;, &quot;b11_hohh_chronic_illness&quot;), ~ ratios_select_multiple(main_dataset, b9_hohh_marital_status, .x, stratum.weight) )) ## Joining, by = &quot;b9_hohh_marital_status&quot; head(res) ## # A tibble: 6 × 18 ## b9_hohh_marital_status e11_items_do_no… e11_items_do_no… e11_items_do_no… ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 divorced 0.0851 0.0859 0.393 ## 2 married 0.0496 0.0545 0.409 ## 3 separated_married_but_not_… 0.0138 0.0513 0.443 ## 4 single 0.0726 0.0516 0.457 ## 5 unmarried_but_living_toget… 0.0874 0.101 0.293 ## 6 widowed 0.106 0.0923 0.504 ## # … with 14 more variables: ## # e11_items_do_not_have_per_hh.hh_has_all_items_pct &lt;dbl&gt;, ## # b11_hohh_chronic_illness.blood_pressure_diseases_pct &lt;dbl&gt;, ## # b11_hohh_chronic_illness.cardiovascular_disease_pct &lt;dbl&gt;, ## # b11_hohh_chronic_illness.diabetes_need_insulin_pct &lt;dbl&gt;, ## # b11_hohh_chronic_illness.diabetes_does_not_need_insulin_pct &lt;dbl&gt;, ## # b11_hohh_chronic_illness.chronic_respiratory_condition_pct &lt;dbl&gt;, … 7.5.3 Example3 - No dissagregation is needed and/or the data is not weighted: Question: e11_items_do_not_have_per_hh and b11_hohh_chronic_illness Disaggregation variable: NA weights column: NA main_dataset$all &lt;- &quot;all&quot; main_dataset$no_weights &lt;- 1 res &lt;- do.call(&quot;full_join&quot;, map( c(&quot;e11_items_do_not_have_per_hh&quot;, &quot;b11_hohh_chronic_illness&quot;), ~ ratios_select_multiple(main_dataset, all, .x, no_weights) )) ## Joining, by = &quot;all&quot; head(res) ## # A tibble: 1 × 18 ## all e11_items_do_not_hav… e11_items_do_no… e11_items_do_no… e11_items_do_no… ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 all 0.0804 0.0779 0.417 0.515 ## # … with 13 more variables: ## # b11_hohh_chronic_illness.blood_pressure_diseases_pct &lt;dbl&gt;, ## # b11_hohh_chronic_illness.cardiovascular_disease_pct &lt;dbl&gt;, ## # b11_hohh_chronic_illness.diabetes_need_insulin_pct &lt;dbl&gt;, ## # b11_hohh_chronic_illness.diabetes_does_not_need_insulin_pct &lt;dbl&gt;, ## # b11_hohh_chronic_illness.chronic_respiratory_condition_pct &lt;dbl&gt;, ## # b11_hohh_chronic_illness.musculoskeletal_system_and_joints_pct &lt;dbl&gt;, … 7.6 Weights Weights can be used for different reasons. In most of cases, we will use weights to correct for difference between strata size. Once the population has a certain (big) size, for the same design, the size of the sample won’t change much. In the case of the dataset, there are 4 stratas: - within 20km of the border in rural areas : 89,408 households - within 20km of the border in urban areas : 203,712 households - within 20km of the border in rural areas : 39,003 households - within 20km of the border in rural areas : 211,857 households Using any sampling calculator, for a 95% confindence level, 5% margin of error and 5% buffer, we will have around 400 samples per strata even though the urban areas are much bigger. Note: The error of 5% for 90,000 is 4,500 households while for 200,000 households is 10,000 households If we look at each strata and the highest level of education completed by the household head (b20_hohh_level_education), we can see that the percentage of household were the head of household completed higher education varies between between 7 to 13 % in each strata. ## # A tibble: 4 × 5 ## # Groups: strata [4] ## strata b20_hohh_level_education n tot_n prop ## &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 20km_rural complete_higher 40 407 10 ## 2 20km_urban complete_higher 51 404 13 ## 3 5km_rural complete_higher 38 402 9 ## 4 5km_urban complete_higher 28 404 7 However, if we want to know overall the percentage of who finished higher education we cannot just take the overall percentages, i.e. \\(\\frac{40 + 51 +38 + 28}{407 + 404 + 402 + 404}\\) = \\(\\frac{157}{1617}\\) = 10%. We cannot do this because the first strata represent 90,000 households, the second 200,000 households, the third 40,000 households and the last one 210,000 households. We will use weights to compensate this difference. We will use this formula: weight of strata = \\(\\frac{\\frac{strata\\\\ population}{total\\\\ population}}{\\frac{strata\\\\ sample}{total\\\\ sample}}\\) 7.6.1 tidyverse The following example will show how to calculate the weights with tidyverse. To calculate weights, we will need all the following information: - population of the strata, - total population, - sample and - total sample. The population information should come from the sampling frame that was used to draw the sampling. my_sampling_frame &lt;- readxl::read_excel(&quot;inputs/UKR2007_MSNA20_GCA_Weights_26AUG2020.xlsx&quot;, sheet = &quot;for_r&quot;) %&gt;% rename(population_strata = population) my_sampling_frame ## # A tibble: 4 × 2 ## strata population_strata ## &lt;chr&gt; &lt;dbl&gt; ## 1 20km_rural 89408 ## 2 20km_urban 230712 ## 3 5km_rural 39003 ## 4 5km_urban 211857 Then, we need to get the actual sample from the dataset. sample_per_strata_table &lt;- main_dataset %&gt;% group_by(strata) %&gt;% tally() %&gt;% rename(strata_sample = n) %&gt;% ungroup() sample_per_strata_table ## # A tibble: 4 × 2 ## strata strata_sample ## &lt;chr&gt; &lt;int&gt; ## 1 20km_rural 407 ## 2 20km_urban 404 ## 3 5km_rural 402 ## 4 5km_urban 404 Then, we can join the tables together and calculate the weights per strata. weight_table &lt;- sample_per_strata_table %&gt;% left_join(my_sampling_frame) %&gt;% mutate(weights = (population_strata/sum(population_strata))/(strata_sample/sum(strata_sample))) weight_table ## # A tibble: 4 × 4 ## strata strata_sample population_strata weights ## &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 20km_rural 407 89408 0.622 ## 2 20km_urban 404 230712 1.62 ## 3 5km_rural 402 39003 0.275 ## 4 5km_urban 404 211857 1.49 Then we can finally add them to the dataset. main_dataset &lt;- main_dataset %&gt;% left_join(select(weight_table, strata, weights), by = &quot;strata&quot;) head(main_dataset$weights) ## [1] 0.2747648 0.2747648 0.6221156 0.6221156 0.6221156 0.6221156 We can check that each strata has only 1 weight. main_dataset %&gt;% group_by(strata, weights) %&gt;% tally() ## # A tibble: 4 × 3 ## # Groups: strata [4] ## strata weights n ## &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; ## 1 20km_rural 0.622 407 ## 2 20km_urban 1.62 404 ## 3 5km_rural 0.275 402 ## 4 5km_urban 1.49 404 We can check that the sum of weights is equal to the number of interviews. sum(main_dataset$weights) == nrow(main_dataset) ## [1] TRUE 7.6.2 surveyweights surveyweights was created to calculate weights. The function weighting_fun_from_samplingframe creates a function that calculates weights from the dataset and the sampling frame. Note: surveyweights can be found on github. First you need to create the weighting function. weighting_fun_from_samplingframe will take 5 arguments: - sampling.frame: a data frame with your population figures and stratas. - data.stratum.column : column name of the strata in the dataset. - sampling.frame.population.column : column name of population figures in the sampling frame. - sampling.frame.stratum.column : column name of the strata in the sampling frame. - data : dataset library(surveyweights) my_weigthing_function &lt;- surveyweights::weighting_fun_from_samplingframe(sampling.frame = my_sampling_frame, data.stratum.column = &quot;strata&quot;, sampling.frame.population.column = &quot;population_strata&quot;, sampling.frame.stratum.column = &quot;strata&quot;, data = main_dataset) See that the my_weigthing_function is not a vector of weights. It is a function that takes the dataset as argument and returns a vector of weights. is.function(my_weigthing_function) ## [1] TRUE my_weigthing_function ## function (df) ## { ## if (!is.data.frame(df)) { ## stop(&quot;df must be a data.frame&quot;) ## } ## df &lt;- as.data.frame(df, stringsAsFactors = FALSE) ## df &lt;- lapply(df, function(x) { ## if (is.factor(x)) { ## return(as.character(x)) ## } ## x ## }) %&gt;% as.data.frame(stringsAsFactors = FALSE) ## if (!all(data.stratum.column %in% names(df))) { ## stop(paste0(&quot;data frame column &#39;&quot;, data.stratum.column, ## &quot;&#39;not found.&quot;)) ## } ## df[[data.stratum.column]] &lt;- as.character(df[[data.stratum.column]]) ## sample.counts &lt;- stratify.count.sample(data.strata = asdhk[[data.stratum.column]], ## sf.strata = population.counts) ## if (&quot;weights&quot; %in% names(df)) { ## warning(&quot;&#39;weights&#39; is used as a column name (will not be calculated from the sampling frame)&quot;) ## } ## if (!all(names(sample.counts) %in% names(population.counts))) { ## stop(&quot;all strata names in column &#39;&quot;, data.stratum.column, ## &quot;&#39; must also appear in the loaded sampling frame.&quot;) ## } ## weights &lt;- stratify.weights(pop_strata = population.counts, ## sample_strata = sample.counts) ## return(weights[df[[data.stratum.column]]]) ## } ## &lt;bytecode: 0x00000226f6c86e80&gt; ## &lt;environment: 0x00000226806a2780&gt; my_weigthing_function(main_dataset) %&gt;% head() ## Warning in my_weigthing_function(main_dataset): &#39;weights&#39; is used as a column ## name (will not be calculated from the sampling frame) ## data.strata ## 5km_rural 5km_rural 20km_rural 20km_rural 20km_rural 20km_rural ## 0.2747648 0.2747648 0.6221156 0.6221156 0.6221156 0.6221156 Note: A warning shows that if the column weights exists in the dataset, my_weigthing_function will not calculate weights. We need to remove the weights column from the previous example. main_dataset$weights &lt;- NULL my_weigthing_function(main_dataset) %&gt;% head() ## data.strata ## 5km_rural 5km_rural 20km_rural 20km_rural 20km_rural 20km_rural ## 0.2747648 0.2747648 0.6221156 0.6221156 0.6221156 0.6221156 To add the weights, we need to add a new column. main_dataset$my_weights &lt;- my_weigthing_function(main_dataset) head(main_dataset$my_weights) ## [1] 0.2747648 0.2747648 0.6221156 0.6221156 0.6221156 0.6221156 As for the previous example, we can check that only 1 weight is used per strata. main_dataset %&gt;% group_by(strata, my_weights) %&gt;% tally() ## # A tibble: 4 × 3 ## # Groups: strata [4] ## strata my_weights n ## &lt;chr&gt; &lt;table[1d]&gt; &lt;int&gt; ## 1 20km_rural 0.6221156 407 ## 2 20km_urban 1.6172529 404 ## 3 5km_rural 0.2747648 402 ## 4 5km_urban 1.4850825 404 We can check that the sum of weights is equal to the number of interviews. sum(main_dataset$my_weights) == nrow(main_dataset) ## [1] TRUE 7.7 Repeating the above 7.8 Analysis - top X / ranking (select one and select multiple) First: select_one question The indicator of interest is e1_shelter_type and the options are: solid_finished_house solid_finished_apartment unfinished_nonenclosed_building collective_shelter tent makeshift_shelter none_sleeping_in_open other_specify dont_know_refuse_to_answer # Top X/ranking for select_one type questions select_one_topX &lt;- function(df, question_name, X = 3) { # by default return top 3 # test message if(length(colnames(df)[grepl(question_name, colnames(df), fixed = T)]) == 0) { stop(print(paste(&quot;question name:&quot;, question_name, &quot;doesn&#39;t exist in the main dataset. Please double check and make required changes!&quot;))) } df &lt;- df %&gt;% select(!!sym(question_name))%&gt;% filter(!is.na(!!sym(question_name))) %&gt;% # remove NA values from percentage calculations mutate_at(question_name, as.factor) %&gt;% # added to have all groups group_by(!!sym(question_name), .drop=F) %&gt;% summarise(n = n()) %&gt;% mutate(percentages = round(n / sum(n) * 100, digits = 2)) %&gt;% arrange(desc(percentages)) %&gt;% mutate_at(question_name, as.character) %&gt;% head(X) # keep top X percentages only if(nrow(df) == 0) warning(&quot;None of the choices was selected!&quot;) return(df) } # return top 4 shelter types shelter_type_top4 &lt;- select_one_topX(df = main_dataset, question_name = &quot;e1_shelter_type&quot;, X = 4) Second: select_multiple question The indicator of interest is e3_shelter_enclosure_issues and the options are: no_issues lack_of_insulation_from_cold leaks_during_light_rain_snow leaks_during_heavy_rain_snow limited_ventilation_less_than_05m2_ventilation_in_each_room_including_kitchen presence_of_dirt_or_debris_removable presence_of_dirt_or_debris_nonremovable none_of_the_above other_specify dont_know # Top X/ranking for select_multiple type questions select_multiple_topX &lt;- function(df, question_name, X = 3) { # test message if(length(colnames(df)[grepl(question_name, colnames(df), fixed = T)]) == 0){ stop(print(paste(&quot;question name:&quot;, question_name, &quot;doesn&#39;t exist in the main dataset. Please double check and make required changes!&quot;))) } df &lt;- df %&gt;% select(colnames(df)[grepl(paste0(question_name, &quot;.&quot;), colnames(df), fixed = T)]) # if question was not answered if(all(is.na(df))) warning(&quot;None of the choices was selected!&quot;) # Keeping only the options names in the colnames colnames(df) &lt;- gsub(paste0(question_name, &quot;\\\\.&quot;), &quot;&quot;, colnames(df)) # calculate top X percentages df &lt;- df %&gt;% mutate_all(as.numeric) %&gt;% pivot_longer(cols = everything(), names_to = question_name, values_to = &quot;choices&quot;) %&gt;% group_by(!!sym(question_name), .drop=F) %&gt;% summarise(n = sum(choices, na.rm = T), percentages = round(sum(choices, na.rm = T) / n() * 100, digits = 2)) %&gt;% # remove NA values from percentages calculations arrange(desc(percentages)) %&gt;% head(X) # keep top X percentages only return(df) } # return top 7 shelter enclosure issues shelter_enclosure_issues_top7 &lt;- select_multiple_topX(df = main_dataset, question_name = &quot;e3_shelter_enclosure_issues&quot;, X = 7) 7.9 Borda count 7.10 Hypothesis testing 7.10.1 T-test 7.10.1.1 What is a T-test A t-test is a type of inferential statistic used to determine if there is a significant difference between the means of two groups. A t-test is used as a hypothesis testing tool, which allows testing of an assumption applicable to a population. 7.10.1.2 How it works Mathematically, the t-test takes a sample from each of the two sets and establishes the problem statement by assuming a null hypothesis that the two means are equal. Based on the applicable formulas, certain values are calculated and compared against the standard values, and the assumed null hypothesis is accepted or rejected accordingly. If the null hypothesis qualifies to be rejected, it indicates that data readings are strong and are probably not due to chance. 7.10.1.3 T-Test Assumptions The first assumption made regarding t-tests concerns the scale of measurement. The assumption for a t-test is that the scale of measurement applied to the data collected follows a continuous or ordinal scale, such as the scores for an IQ test. The second assumption made is that of a simple random sample, that the data is collected from a representative, randomly selected portion of the total population. The third assumption is the data, when plotted, results in a normal distribution, bell-shaped distribution curve. The final assumption is the homogeneity of variance. Homogeneous, or equal, variance exists when the standard deviations of samples are approximately equal. 7.10.1.4 Example We are going to look at the income of the household for female/male headed household. The main_dataset doesn’t contain the head of household gender information, so we are creating and randomly populating the gender variable. set.seed(10) main_dataset$hoh_gender = sample(c(&#39;Male&#39;, &#39;Female&#39;), nrow(main_dataset), replace=TRUE) main_dataset$b15_hohh_income = as.numeric(main_dataset$b15_hohh_income) t_test_results &lt;- t.test(b15_hohh_income ~ hoh_gender, data = main_dataset) t_test_results ## ## Welch Two Sample t-test ## ## data: b15_hohh_income by hoh_gender ## t = 0.19105, df = 1525.6, p-value = 0.8485 ## alternative hypothesis: true difference in means between group Female and group Male is not equal to 0 ## 95 percent confidence interval: ## -270.3420 328.6883 ## sample estimates: ## mean in group Female mean in group Male ## 3459.044 3429.871 In the result above : t is the t-test statistic value (t = -0.19105), df is the degrees of freedom (df= 1525.6), p-value is the significance level of the t-test (p-value = 0.8485). conf.int is the confidence interval of the means difference at 95% (conf.int = [-270.3420, 328.6883]); sample estimates is the mean value of the sample (mean = 3459.044, 3429.871). Interpretation: The p-value of the test is 0.8485, which is higher than the significance level alpha = 0.05. We can’t reject the null hypothesis and we can’t conclude that men headed household average income is significantly different from women headed household average income. Which makes sense in this case given that the gender variable was randomly generated. 7.10.2 ANOVA 7.10.2.1 What is ANOVA Similar to T-test, ANOVA is a statistical test for estimating how a quantitative dependent variable changes according to the levels of one or more categorical independent variables. ANOVA tests whether there is a difference in means of the groups at each level of the independent variable. The null hypothesis (H0) of the ANOVA is no difference in means, and the alternate hypothesis (Ha) is that the means are different from one another. The T-test is used to compare the means between two groups, whereas ANOVA is used to compare the means among three or more groups. 7.10.2.2 Types of ANOVA There are two main types of ANOVA: one-way (or unidirectional) and two-way. A two-way ANOVA is an extension of the one-way ANOVA. With a one-way, you have one independent variable affecting a dependent variable. With a two-way ANOVA, there are two independents. For example, a two-way ANOVA allows a company to compare worker productivity based on two independent variables, such as salary and skill set. It is utilized to observe the interaction between the two factors and tests the effect of two factors at the same time. 7.10.2.3 Example We are using the same example as the previous test. res.aov &lt;- aov(b15_hohh_income ~ hoh_gender, data = main_dataset) summary(res.aov) ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## hoh_gender 1 3.291e+05 329075 0.036 0.849 ## Residuals 1546 1.408e+10 9109185 ## 69 observations deleted due to missingness As the p-value is more than the significance level 0.05, we can’t conclude that there are significant differences between the hoh_gender groups. 7.10.2.4 Bonus : Visualization of the data to confirm the findinds ggline(main_dataset, x = &quot;hoh_gender&quot;, y = &quot;b15_hohh_income&quot;, add = c(&quot;mean_se&quot;, &quot;jitter&quot;), order = c(&quot;Female&quot;, &quot;Male&quot;), ylab = &quot;HH income&quot;, xlab = &quot;hoh gender&quot;) 7.10.3 chi-squares Pearson`s chi-squared test. Chi-squared test is a statistical hypothesis test, based on comparing expected and observed frequencies of 2-way distribution (2-way table). There are three types of tests (hypothesis) that could be tested with chi-squared: independence of variables, homogenity of distribution of the characteristic across “stratas” and goodness of fit (whether the actual distribution is different from the hypothetical one). Two former versions use the same calculation. Chi-squared test is a non-parametric test. It is used with nominal to nominal (nominal to ordinal) scales. For running chi-squared test, each cell of the crosstab should contain at least 5 observations. Note, that chi-squared test indicates significance of differences in values on a table level. Thus, it is impossible to track significance in differences for particular options. (For example, it is possible to say that satisfaction with public transport and living in urban / rural areas are connected. However, we can conclude from the test itself, that “satisfied” and “dissatisfied” options differ, while “indifferent” does not. By the way, it is possible to come up with this conclusion while interpreting a corresponding crosstab. Also, chi-squared test can tell nothing about the strength and the direction of a liaison between variables). 7.10.3.1 Chi-squared test for independence The test for weighted data is being run with the survey library library(survey) library(dplyr) library(weights) The use of the survey package functions requires specifying survey design object (which reslects sampling approach). main_dataset &lt;- read.csv(&quot;inputs/UKR2007_MSNA20_HH_dataset_main_rcop.csv&quot;, na.strings = &quot;&quot;, stringsAsFactors = F) svy_design &lt;- svydesign(data=main_dataset, id = ~1, strata = main_dataset$strata, probs = NULL, weights = main_dataset$stratum.weight) Specifying function for getting chi-squared outputs. Hereby test Chi^2 test of independence is used. So, the test is performed to find out if strata variable and target variable are independent, H0 - the distribution of target variable values is equal across all stratas H1 - strata and target var are not independent, so distribution varies across stratas. Apart from getting test statistic and p value, we would like to detect manually what are the biggest and the smallest values across groups/stratas (in case if the difference is significant and it makes sense to do it). Hereby test Chi^2 test of independence is used. So, the test is performed to find out if strata variable and target variable are independent, H0 - the distribution of target var. values is equal across all stratas H1 - strata and target var are not independent, so distribution varies across stratas. Within the Survey package, the suggested function uses Scott &amp; Rao adjustment for complex survey design #####Simple single call of the test. Let’s say that the research aim is to understand whether the main water source is dependent on the area where HH lives (strata variable). Thus, in our case: H0 - the distribution of water source is equal across stratas and these variables are independent H1 - the distribution of water source differs by strata and these variables are not independent. Running the chi-squared test: (Survey version - requires a survey design object) svychisq(~ f11_dinking_water_source + strata, design = svy_design, statistic = &quot;Chisq&quot;) ## ## Pearson&#39;s X^2: Rao &amp; Scott adjustment ## ## data: svychisq(~f11_dinking_water_source + strata, design = svy_design, statistic = &quot;Chisq&quot;) ## X-squared = 244.62, df = 21, p-value &lt; 2.2e-16 The current output presents the result of Pearson’s chi-squared test (Rao &amp; Scott adjustment accounts for weighted data) [https://www.researchgate.net/publication/38360147_On_Simple_Adjustments_to_Chi-Square_Tests_with_Sample_Survey_Data]. The output consist of three parameters: 1. X-squared - observed value of chi-squared parameter, 2. df - “degrees of freedom” or number of independent categories in data -1 Having only these two elements it is possible to see, if with the current number of df, the value of chi-squared parameter is greater than the critical value for the chosen level of probability, using (tables of chi-squared critical values) [https://www.itl.nist.gov/div898/handbook/eda/section3/eda3674.htm] Fortunately, R provides us with the third parameter, which allows us to skip this step. 3. p-value - stands for the probability of getting value of the chi-squared parameter greater or equal to the given one assuming that H0 is true. If p-value &lt; 0.05 (for 95% confidence level, or 0.01 for 99%), the H0 can be rejected. In the current example, as p-value is very low, H0 can be rejected, and hence, strata variable and drinking water source are not independent. (Weights package - can work with the dataframe directly, without the survey design object) wtd.chi.sq(var1 = main_dataset$f11_dinking_water_source, var2 = main_dataset$strata, weight = main_dataset$stratum.weight) ## Chisq df p.value ## 2.446205e+02 2.100000e+01 4.928158e-40 Specifying the function for crosstabs with chi-squared tests for independence. #####Functions to have test results along with crosstabs The function with survey design object. Apart from getting test statistic and p value, we would like to detect manually what are the biggest and the smallest values across groups/stratas (in case if the difference is significant and it makes sense to do it). The function also helps to find out smallest and the largest values per row chi2_ind_extr &lt;- function(x, y, design){ my_var &lt;- y # running Pearson&#39;s chi-squared test s_chi &lt;- svychisq(as.formula(paste0(&quot;~&quot;, x,&quot;+&quot;, y)), design, statistic = &quot;Chisq&quot;) # extracting basic parameters wmy_t &lt;- as.data.frame(s_chi$observed) wmy_t$p &lt;- s_chi$p.value wmy_t$chi_adj &lt;- s_chi$statistic wmy_t$df &lt;- s_chi$parameter #indicating significance wmy_t$independence &lt;- ifelse(wmy_t$p &lt; 0.05, &quot;h1&quot;, &quot;h0&quot;) colnames(wmy_t)[1:2] &lt;- c(&quot;var_x&quot;, &quot;var_y&quot;) wmy_t_w &lt;- spread(wmy_t, var_y, Freq) wmy_t_w[,1] &lt;- paste0(x, &quot; &quot;, wmy_t_w[,1]) colnames(wmy_t_w)[1] &lt;- &quot;variable&quot; # getting percent from weighted frequencies cols_no_prop &lt;- c(&quot;variable&quot;, &quot;p&quot;, &quot;independence&quot;, &quot;max&quot;, &quot;min&quot;, &quot;chi_adj&quot;, &quot;df&quot;) wmy_t_w[, !colnames(wmy_t_w) %in% cols_no_prop] &lt;- lapply(wmy_t_w[, !colnames(wmy_t_w) %in% cols_no_prop], function(x){x/sum(x, na.rm = T)}) # indicating extremum values cols_to_compare &lt;- colnames(wmy_t_w)[!colnames(wmy_t_w) %in% c(&quot;p&quot;, &quot;chi_adj&quot;, &quot;df&quot;, &quot;independence&quot;, &quot;min&quot;, &quot;max&quot;, &quot;variable&quot;)] wmy_t_w$max &lt;- ifelse(wmy_t_w$independence == &quot;h1&quot;, cols_to_compare[apply(wmy_t_w, 1, which.max)], 0) wmy_t_w$min &lt;- ifelse(wmy_t_w$independence == &quot;h1&quot;, cols_to_compare[apply(wmy_t_w, 1, which.min)], 0) #adding Overall value to the table ovl_tab &lt;- as.data.frame(prop.table(svytable(as.formula(paste0(&quot;~&quot;,x)), design))) colnames(ovl_tab) &lt;- c(&quot;options&quot;, &quot;overall&quot;) wmy_t_w &lt;- wmy_t_w %&gt;% bind_cols(ovl_tab) return(wmy_t_w) } The use with a single-choice question chi2_ind_extr(&quot;f11_dinking_water_source&quot;, &quot;strata&quot;, svy_design) ## variable ## 1 f11_dinking_water_source bottled_water_water_purchased_in_bottles ## 2 f11_dinking_water_source drinking_water_from_water_kiosk_booth_with_water_for_bottling ## 3 f11_dinking_water_source other_specify ## 4 f11_dinking_water_source personal_well ## 5 f11_dinking_water_source public_well_or_boreholes_shared_access ## 6 f11_dinking_water_source tap_drinking_water_centralized_water_supply ## 7 f11_dinking_water_source technical_piped_water ## 8 f11_dinking_water_source trucked_in_water_truck_with_a_tank_etc ## p chi_adj df independence 20km_rural 20km_urban 5km_rural ## 1 9.386389e-50 244.6205 21 h1 0.02457002 0.07673267 0.034825871 ## 2 9.386389e-50 244.6205 21 h1 0.19901720 0.29950495 0.131840796 ## 3 9.386389e-50 244.6205 21 h1 0.01228501 0.00000000 0.007462687 ## 4 9.386389e-50 244.6205 21 h1 0.32432432 0.09653465 0.482587065 ## 5 9.386389e-50 244.6205 21 h1 0.15724816 0.05445545 0.151741294 ## 6 9.386389e-50 244.6205 21 h1 0.22358722 0.43316832 0.144278607 ## 7 9.386389e-50 244.6205 21 h1 0.00000000 0.00000000 0.000000000 ## 8 9.386389e-50 244.6205 21 h1 0.05896806 0.03960396 0.047263682 ## 5km_urban max min ## 1 0.032178218 5km_rural 20km_urban ## 2 0.274752475 5km_rural 20km_urban ## 3 0.007425743 5km_rural &lt;NA&gt; ## 4 0.121287129 5km_rural 20km_urban ## 5 0.099009901 5km_rural 20km_urban ## 6 0.383663366 5km_rural 20km_urban ## 7 0.004950495 5km_rural &lt;NA&gt; ## 8 0.076732673 5km_rural 20km_urban ## options overall ## 1 bottled_water_water_purchased_in_bottles 0.049170548 ## 2 drinking_water_from_water_kiosk_booth_with_water_for_bottling 0.263132750 ## 3 other_specify 0.005188695 ## 4 personal_well 0.167758525 ## 5 public_well_or_boreholes_shared_access 0.093728457 ## 6 tap_drinking_water_centralized_water_supply 0.362248561 ## 7 technical_piped_water 0.001836837 ## 8 trucked_in_water_truck_with_a_tank_etc 0.056935627 In the given output, p indicates chi-squared test p-value, chi_adj - value of chi-squared parameter, df - degrees of freedom, independence - indicates which hypothesis is accepted, h0 or h1. In the current function, H1 is accepted if p &lt; 0.05. In case H0 is rejected and H1 accepted, in min and max columns minimum and maximum y variable categories are given. The use with a multiple-choice question. The test would not work if any of dummies consists from zeros only, it need to be checked in advance, thus, let’s filter such variables out from the vector of variable names Getting full range of dummies from the question names &lt;- names(main_dataset) f12 &lt;- names[grepl(&quot;f12_drinking_water_treat.&quot;, names)] Defining a function which would remove zero-sum variables for us if the absence of empty cells for each strata is needed, per_cell = T non_zero_for_test &lt;- function(var, strata, dataset, per_cell = F){ sum &lt;- as.data.frame(sapply(dataset[, names(dataset) %in% var], sum)) sum &lt;- cbind(rownames(sum), sum) filtered &lt;- sum[sum[,2] &gt; 0,1] tab &lt;- as.data.frame(sapply(dataset[,names(dataset) %in% filtered], table, dataset[, strata])) ntab &lt;- names(tab) #if the absence of empty cells for each strata is needed, per_cell = T tab &lt;- tab[, which(colnames(tab) %in% ntab)] zeros &lt;- apply(apply(tab, 2, function(x) x==0), 2, any) zeros &lt;- zeros[zeros == F] zeros &lt;- as.data.frame(zeros) zeros &lt;- cbind(rownames(zeros), zeros) zeros_lab &lt;- as.vector(unlist(strsplit(zeros[,1], split = &quot;.Freq&quot;))) result &lt;- c() if(per_cell == T){ result &lt;- zeros_lab } else { result &lt;- ntab } message(paste0(abs(length(var) - length(result)), &quot; variables were removed because of containing zeros in stratas&quot;)) return(result) } Using the test with multiple choice question. nz_f12 &lt;- non_zero_for_test(f12, &quot;strata&quot;, main_dataset, per_cell = F) ## 2 variables were removed because of containing zeros in stratas f12_sig &lt;- lapply(nz_f12, chi2_ind_extr, y = &quot;strata&quot;, design = svy_design) f12_sig_df &lt;- Reduce(rbind, f12_sig) #removing 0 (&quot;not selected&quot;) options f12_sig_df &lt;- f12_sig_df %&gt;% filter(options == 1) f12_sig_df ## variable ## 1 f12_drinking_water_treat.cleaning_with_chemicals_chlorination 1 ## 2 f12_drinking_water_treat.water_precipitation 1 ## 3 f12_drinking_water_treat.filtering_the_water_pitcher_filter 1 ## 4 f12_drinking_water_treat.filtering_the_water_reverse_osmosis_filter 1 ## 5 f12_drinking_water_treat.boiling 1 ## 6 f12_drinking_water_treat.percolation 1 ## 7 f12_drinking_water_treat.other_specify 1 ## 8 f12_drinking_water_treat.do_not_process_purify 1 ## p chi_adj df independence 20km_rural 20km_urban 5km_rural ## 1 0.03100696 4.780006 3 h1 0.000000000 0.004950495 0.000000000 ## 2 0.02775288 7.977278 3 h1 0.073710074 0.126237624 0.104477612 ## 3 0.55635016 1.828231 3 h0 0.046683047 0.069306931 0.059701493 ## 4 0.44029529 2.347539 3 h0 0.027027027 0.037128713 0.017412935 ## 5 0.02724163 8.191084 3 h1 0.260442260 0.274752475 0.223880597 ## 6 0.24801653 3.459406 3 h0 0.004914005 0.002475248 0.007462687 ## 7 0.28029092 2.860754 3 h0 0.004914005 0.002475248 0.000000000 ## 8 0.01762880 9.011919 3 h1 0.624078624 0.551980198 0.674129353 ## 5km_urban max min options overall ## 1 0.00000000 5km_rural &lt;NA&gt; 1 0.002000313 ## 2 0.14108911 5km_rural 20km_urban 1 0.122036605 ## 3 0.06930693 0 0 1 0.065108190 ## 4 0.04207921 0 0 1 0.036036995 ## 5 0.20792079 5km_rural 20km_urban 1 0.244239386 ## 6 0.00000000 0 0 1 0.002279393 ## 7 0.00000000 0 0 1 0.001769625 ## 8 0.60643564 5km_rural 20km_urban 1 0.591818943 The function without the survey design object chi2_ind_wtd &lt;- function(x, y, weight, dataset){ i &lt;- 1 table_new &lt;- data.frame() for (i in 1:length(x)) { ni &lt;- x[i] ti &lt;- dataset %&gt;% filter(!is.na(!!sym(y))) %&gt;% group_by(!!sym(y), !!sym(ni)) %&gt;% filter(!is.na(!!sym(ni))) %&gt;% summarise(wtn = sum(!!sym(weight)), n = n()) %&gt;% mutate(prop = wtn/sum(wtn), varnam = ni) names(ti) &lt;- c(&quot;var_ind&quot;, &quot;var_dep_val&quot;, &quot;wtn&quot;, &quot;n&quot;, &quot;prop&quot;, &quot;dep_var_nam&quot;) ti &lt;- ti %&gt;% ungroup() %&gt;% mutate(base = sum(c_across(n))) chi_test &lt;- wtd.chi.sq(var1 = dataset[, paste0(y)], var2 = dataset[, paste0(ni)], weight = dataset[, paste0(weight)]) ti$chisq &lt;- chi_test[1] ti$df &lt;- chi_test[2] ti$p &lt;- chi_test[3] ti$hypo &lt;- ifelse(ti$p &lt; 0.05, &quot;h1&quot;, &quot;h0&quot;) table_new &lt;- rbind(table_new, ti) } table_cl_new_1 &lt;- table_new %&gt;% #filter(var_dep_val != &quot;0&quot;) %&gt;% filter(!is.na(var_dep_val)) #mutate(var_id = paste0(dep_var_nam, &quot;.&quot;, var_dep_val)) table_cl_new_1 &lt;- table_cl_new_1[, -c(3, 4)] table_sprd &lt;- tidyr::spread(table_cl_new_1, var_ind, prop) %&gt;% arrange(dep_var_nam) return(table_sprd) } The use with the single choice question chi2_ind_wtd(x = &quot;f11_dinking_water_source&quot;, y = &quot;strata&quot;, weight = &quot;stratum.weight&quot;, main_dataset) ## `summarise()` has grouped output by &#39;strata&#39;. You can override using ## the `.groups` argument. ## # A tibble: 8 × 11 ## var_dep_val dep_var_nam base chisq df p hypo `20km_rural` ## &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 bottled_water_water… f11_dinkin… 1617 245. 21 4.93e-40 h1 0.0246 ## 2 drinking_water_from… f11_dinkin… 1617 245. 21 4.93e-40 h1 0.199 ## 3 other_specify f11_dinkin… 1617 245. 21 4.93e-40 h1 0.0123 ## 4 personal_well f11_dinkin… 1617 245. 21 4.93e-40 h1 0.324 ## 5 public_well_or_bore… f11_dinkin… 1617 245. 21 4.93e-40 h1 0.157 ## 6 tap_drinking_water_… f11_dinkin… 1617 245. 21 4.93e-40 h1 0.224 ## 7 technical_piped_wat… f11_dinkin… 1617 245. 21 4.93e-40 h1 NA ## 8 trucked_in_water_tr… f11_dinkin… 1617 245. 21 4.93e-40 h1 0.0590 ## # … with 3 more variables: `20km_urban` &lt;dbl&gt;, `5km_rural` &lt;dbl&gt;, ## # `5km_urban` &lt;dbl&gt; The use with multiple choice questions names &lt;- names(main_dataset) f12_names &lt;- names[grepl(&quot;f12_drinking_water_treat.&quot;, names)] f12_sig2 &lt;- lapply(f12_names, chi2_ind_wtd, y = &quot;strata&quot;, weight = &quot;stratum.weight&quot;, main_dataset) f12_tab_df &lt;- Reduce(rbind, f12_sig2) f12_tab_df ## # A tibble: 18 × 11 ## var_dep_val dep_var_nam base chisq df p hypo `20km_rural` ## &lt;int&gt; &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 0 f12_drinking_water_t… 1617 4.78 3 0.189 h0 1 ## 2 1 f12_drinking_water_t… 1617 4.78 3 0.189 h0 NA ## 3 0 f12_drinking_water_t… 1617 7.98 3 0.0465 h1 0.926 ## 4 1 f12_drinking_water_t… 1617 7.98 3 0.0465 h1 0.0737 ## 5 0 f12_drinking_water_t… 1617 1.83 3 0.609 h0 0.953 ## 6 1 f12_drinking_water_t… 1617 1.83 3 0.609 h0 0.0467 ## 7 0 f12_drinking_water_t… 1617 2.35 3 0.503 h0 0.973 ## 8 1 f12_drinking_water_t… 1617 2.35 3 0.503 h0 0.0270 ## 9 0 f12_drinking_water_t… 1617 8.19 3 0.0422 h1 0.740 ## 10 1 f12_drinking_water_t… 1617 8.19 3 0.0422 h1 0.260 ## 11 0 f12_drinking_water_t… 1617 3.46 3 0.326 h0 0.995 ## 12 1 f12_drinking_water_t… 1617 3.46 3 0.326 h0 0.00491 ## 13 0 f12_drinking_water_t… 1617 2.86 3 0.414 h0 0.995 ## 14 1 f12_drinking_water_t… 1617 2.86 3 0.414 h0 0.00491 ## 15 0 f12_drinking_water_t… 1617 0 0 1 h0 1 ## 16 0 f12_drinking_water_t… 1617 0 0 1 h0 1 ## 17 0 f12_drinking_water_t… 1617 9.01 3 0.0291 h1 0.376 ## 18 1 f12_drinking_water_t… 1617 9.01 3 0.0291 h1 0.624 ## # … with 3 more variables: `20km_urban` &lt;dbl&gt;, `5km_rural` &lt;dbl&gt;, ## # `5km_urban` &lt;dbl&gt; 7.10.4 Chi-squared Goodness of Fit test Goodness of test chi-squared test is used to compare the observed distribution with the hypothetical one, For instance, we would like to test the hypothesis, that 90% of HHs had soap in their HHs at the moment of the survey. main_dataset &lt;- main_dataset %&gt;% mutate(soap = case_when( p16_soap_household == &quot;dont_know_refuse_to_answer&quot; ~ &quot;NA&quot;, p16_soap_household == &quot;no&quot; ~ &quot;no&quot;, p16_soap_household == &quot;yes_soap_is_not_shown&quot; ~ &quot;yes&quot;, p16_soap_household == &quot;yes_soap_is_shown&quot; ~ &quot;yes&quot; )) soap_prob &lt;- as.data.frame(prop.table(table(main_dataset$soap))) soap_prob &lt;- soap_prob[, 2] # please, note that this is a function call with unweighted data! chisq.test(soap_prob, p = c(0, 0.1, 0.9)) ## Warning in chisq.test(soap_prob, p = c(0, 0.1, 0.9)): Chi-squared approximation ## may be incorrect ## ## Chi-squared test for given probabilities ## ## data: soap_prob ## X-squared = Inf, df = 2, p-value &lt; 2.2e-16 As p value is lower than the chosen confidence level, hypothesis of equality of the current distribution to hypothetical 90% / 10% of soap-owners can be rejected. Defining a function for checking the distribution within a particular group, against the “hypothetical” overall sample. For the overall sample we would need a variable which has the same value across all observations (e.g. informed consent == yes etc.) chi2_GoF &lt;- function(name, stratum_hyp, stratum_2, value_stratum_hyp, value_stratum_2, data, weights){ i &lt;- 1 table_1 &lt;- data.frame() for (i in 1:length(name)) { ni &lt;- name[i] ti &lt;- data %&gt;% group_by(!!sym(ni)) %&gt;% filter(!!sym(stratum_hyp) == paste0(value_stratum_hyp)) %&gt;% filter(!is.na(!!sym(ni))) %&gt;% summarise(wtn = sum(!!sym(weights)), n = n()) %&gt;% mutate(prop = wtn/sum(wtn), base = sum(wtn), cnt = sum(n))%&gt;% mutate(varnam = ni) names(ti) &lt;- c(&quot;var&quot;, &quot;wtn&quot;, &quot;n&quot;, &quot;prop&quot;, &quot;base_w&quot;, &quot;count&quot;, &quot;nam&quot;) table_1 &lt;- rbind(table_1, ti) } table_cl_1 &lt;- table_1 %&gt;% filter(!is.na(var)) %&gt;% mutate(var_id = paste0(nam, &quot;.&quot;, var)) i &lt;- 1 table_2 &lt;- data.frame() for (i in 1:length(name)) { ni &lt;- name[i] ti &lt;- data %&gt;% group_by(!!sym(ni)) %&gt;% filter(!!sym(stratum_2) == paste0(value_stratum_2)) %&gt;% filter(!is.na(!!sym(ni))) %&gt;% summarise(wtn = sum(!!sym(weights)), n = n()) %&gt;% mutate(prop = wtn/sum(wtn), base = sum(wtn), cnt = sum(n))%&gt;% mutate(varnam = ni) names(ti) &lt;- c(&quot;var&quot;, &quot;wtn&quot;, &quot;n&quot;, &quot;prop&quot;, &quot;base_w&quot;, &quot;count&quot;, &quot;nam&quot;) table_2 &lt;- rbind(table_2, ti) } table_cl_2 &lt;- table_2 %&gt;% filter(!is.na(var)) %&gt;% mutate(var_id = paste0(nam, &quot;.&quot;, var)) table_cl_compare &lt;- merge(table_cl_1, table_cl_2, by = &quot;var_id&quot;, all = T) names(table_cl_compare) &lt;- c(&quot;var.id&quot;, &quot;var.hyp&quot;, &quot;wtn.hyp&quot;, &quot;n.hyp&quot;, &quot;prop.hyp&quot;, &quot;base.hyp&quot;, &quot;base_nw.hyp&quot;,&quot;nam.hyp&quot;, &quot;var.2&quot;, &quot;wtn.2&quot;, &quot;n.2&quot;, &quot;prop.2&quot;, &quot;base.2&quot;, &quot;base_nw.2&quot;, &quot;nam.2&quot;) #Dealing with NA issues table_cl_compare$nam.hyp[is.na(table_cl_compare$nam.hyp)] &lt;- table_cl_compare$nam.2[is.na(table_cl_compare$nam.hyp)] table_cl_compare$nam.2[is.na(table_cl_compare$nam.2)] &lt;- table_cl_compare$nam.hyp[is.na(table_cl_compare$nam.2)] table_cl_compare$to_split &lt;- table_cl_compare$nam.hyp table_cl_compare &lt;- separate(table_cl_compare, col = to_split, into = c(&quot;indctr&quot;, &quot;item&quot;), sep =&quot;\\\\.&quot;) table_cl_compare &lt;- table_cl_compare %&gt;% group_by(indctr) %&gt;% fill(base_nw.hyp, .direction = &quot;down&quot;) %&gt;% fill(base_nw.hyp, .direction = &quot;up&quot;) %&gt;% ungroup() table_cl_compare &lt;- table_cl_compare %&gt;% group_by(indctr) %&gt;% fill(base.hyp, .direction = &quot;down&quot;) %&gt;% fill(base.hyp, .direction = &quot;up&quot;) %&gt;% ungroup() table_cl_compare &lt;- table_cl_compare %&gt;% group_by(indctr) %&gt;% fill(base_nw.2, .direction = &quot;down&quot;) %&gt;% fill(base_nw.2, .direction = &quot;up&quot;) %&gt;% ungroup() table_cl_compare &lt;- table_cl_compare %&gt;% group_by(indctr) %&gt;% fill(base.2) %&gt;% fill(base_nw.hyp, .direction = &quot;down&quot;) %&gt;% fill(base.2, .direction = &quot;up&quot;) %&gt;% ungroup() table_cl_compare$prop.hyp[is.na(table_cl_compare$prop.hyp)] &lt;- 0 table_cl_compare$prop.2[is.na(table_cl_compare$prop.2)] &lt;- 0 table_cl_compare$wtn.hyp[is.na(table_cl_compare$wtn.hyp)] &lt;- 0 table_cl_compare$wtn.2[is.na(table_cl_compare$wtn.2)] &lt;- 0 table_cl_compare$chi2 &lt;- chisq.test(table_cl_compare$wtn.2, p = table_cl_compare$prop.hyp)$statistic table_cl_compare$p &lt;- chisq.test(table_cl_compare$wtn.2, p = table_cl_compare$prop.hyp)$p.value table_cl_compare$df &lt;- chisq.test(table_cl_compare$wtn.2, p = table_cl_compare$prop.hyp)$df table_cl_compare$H0 &lt;- ifelse(table_cl_compare$p &lt;= 0.05, &quot;H1 - different&quot;, &quot;H0 - same&quot;) return(table_cl_compare) } Using the function with a single choice question chi2_GoF(name = &quot;f11_dinking_water_source&quot;, stratum_hyp = &quot;a1_informed_consent&quot;, stratum_2 = &quot;strata&quot;, value_stratum_hyp = &quot;yes&quot;, value_stratum_2 = &quot;5km_rural&quot;, data = main_dataset, weights = &quot;stratum.weight&quot;) ## Warning: Expected 2 pieces. Missing pieces filled with `NA` in 8 rows [1, 2, 3, ## 4, 5, 6, 7, 8]. ## Warning in chisq.test(table_cl_compare$wtn.2, p = table_cl_compare$prop.hyp): ## Chi-squared approximation may be incorrect ## Warning in chisq.test(table_cl_compare$wtn.2, p = table_cl_compare$prop.hyp): ## Chi-squared approximation may be incorrect ## Warning in chisq.test(table_cl_compare$wtn.2, p = table_cl_compare$prop.hyp): ## Chi-squared approximation may be incorrect ## # A tibble: 8 × 20 ## var.id var.hyp wtn.hyp n.hyp prop.hyp base.hyp base_nw.hyp nam.hyp var.2 ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; ## 1 f11_dinking… bottle… 79.5 68 0.0492 1617. 1617 f11_di… bott… ## 2 f11_dinking… drinki… 425. 366 0.263 1617. 1617 f11_di… drin… ## 3 f11_dinking… other_… 8.39 11 0.00519 1617. 1617 f11_di… othe… ## 4 f11_dinking… person… 271. 414 0.168 1617. 1617 f11_di… pers… ## 5 f11_dinking… public… 152. 187 0.0937 1617. 1617 f11_di… publ… ## 6 f11_dinking… tap_dr… 586. 479 0.362 1617. 1617 f11_di… tap_… ## 7 f11_dinking… techni… 2.97 2 0.00184 1617. 1617 f11_di… &lt;NA&gt; ## 8 f11_dinking… trucke… 92.1 90 0.0569 1617. 1617 f11_di… truc… ## # … with 11 more variables: wtn.2 &lt;dbl&gt;, n.2 &lt;int&gt;, prop.2 &lt;dbl&gt;, base.2 &lt;dbl&gt;, ## # base_nw.2 &lt;int&gt;, nam.2 &lt;chr&gt;, indctr &lt;chr&gt;, item &lt;chr&gt;, chi2 &lt;dbl&gt;, ## # p &lt;dbl&gt;, H0 &lt;chr&gt; Using the function with the multiple responce set names &lt;- names(main_dataset) f12_names &lt;- names[grepl(&quot;f12_drinking_water_treat.&quot;, names)] #removing empty variables from the MR set nz_f12 &lt;- non_zero_for_test(f12_names, &quot;strata&quot;, main_dataset, per_cell = F) ## 2 variables were removed because of containing zeros in stratas table(main_dataset[, nz_f12[4]], main_dataset[, &quot;strata&quot;]) ## ## 20km_rural 20km_urban 5km_rural 5km_urban ## 0 396 389 395 387 ## 1 11 15 7 17 f12_sig2 &lt;- lapply(nz_f12, chi2_GoF, stratum_hyp = &quot;a1_informed_consent&quot;, stratum_2 = &quot;strata&quot;, value_stratum_hyp = &quot;yes&quot;, value_stratum_2 = &quot;5km_rural&quot;, data = main_dataset, weights = &quot;stratum.weight&quot;) f12_sig2_df &lt;- Reduce(rbind, f12_sig2) f12_sig2_df ## # A tibble: 16 × 20 ## var.id var.hyp wtn.hyp n.hyp prop.hyp base.hyp base_nw.hyp nam.hyp var.2 ## &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;chr&gt; &lt;int&gt; ## 1 f12_drinki… 0 1614. 1615 0.998 1617. 1617 f12_dr… 0 ## 2 f12_drinki… 1 3.23 2 0.00200 1617. 1617 f12_dr… NA ## 3 f12_drinki… 0 1420. 1437 0.878 1617. 1617 f12_dr… 0 ## 4 f12_drinki… 1 197. 180 0.122 1617. 1617 f12_dr… 1 ## 5 f12_drinki… 0 1512. 1518 0.935 1617. 1617 f12_dr… 0 ## 6 f12_drinki… 1 105. 99 0.0651 1617. 1617 f12_dr… 1 ## 7 f12_drinki… 0 1559. 1567 0.964 1617. 1617 f12_dr… 0 ## 8 f12_drinki… 1 58.3 50 0.0360 1617. 1617 f12_dr… 1 ## 9 f12_drinki… 0 1222. 1226 0.756 1617. 1617 f12_dr… 0 ## 10 f12_drinki… 1 395. 391 0.244 1617. 1617 f12_dr… 1 ## 11 f12_drinki… 0 1613. 1611 0.998 1617. 1617 f12_dr… 0 ## 12 f12_drinki… 1 3.69 6 0.00228 1617. 1617 f12_dr… 1 ## 13 f12_drinki… 0 1614. 1614 0.998 1617. 1617 f12_dr… 0 ## 14 f12_drinki… 1 2.86 3 0.00177 1617. 1617 f12_dr… NA ## 15 f12_drinki… 0 660. 624 0.408 1617. 1617 f12_dr… 0 ## 16 f12_drinki… 1 957. 993 0.592 1617. 1617 f12_dr… 1 ## # … with 11 more variables: wtn.2 &lt;dbl&gt;, n.2 &lt;int&gt;, prop.2 &lt;dbl&gt;, base.2 &lt;dbl&gt;, ## # base_nw.2 &lt;int&gt;, nam.2 &lt;chr&gt;, indctr &lt;chr&gt;, item &lt;chr&gt;, chi2 &lt;dbl&gt;, ## # p &lt;dbl&gt;, H0 &lt;chr&gt; "],["outputs.html", "8 Outputs 8.1 From long to large table 8.2 Merge file 8.3 Graphs 8.4 Labels 8.5 Dashboarding - Sharing information 8.6 Outputs with hypothesis testing results", " 8 Outputs 8.1 From long to large table How to move from a tidy format to a large format 8.2 Merge file How to create a merge file 8.3 Graphs 8.3.1 spider graphs 8.3.2 prison graphs 8.3.3 Bar graphs Loading libraries and the main dataset library(tidyverse) library(ggplot2) library(plotly) library(openxlsx) library(data.table) library(reshape) main_dataset &lt;- read.csv(&quot;inputs/UKR2007_MSNA20_HH_dataset_main_rcop.csv&quot;, na.strings = &quot;&quot;) Choosing the needed indicator for building bar graph. The indicators in the questionnaire could be in 2 types: Only one answer can be selected (select_one question) and multiple answers can be selected (select_multiple question). Will review it separately. For select one questions: Preparing values for visualization (replacing xml values to lables) # Loading questionnaire questions &lt;- read.xlsx(&quot;inputs/UKR2007_MSNA20_HH_Questionnaire_24JUL2020.xlsx&quot;, sheet = &quot;survey&quot;, na.strings = &quot;&quot;) choices &lt;- read.xlsx(&quot;inputs/UKR2007_MSNA20_HH_Questionnaire_24JUL2020.xlsx&quot;, sheet = &quot;choices&quot;, na.strings = &quot;&quot;) # Based on value we get option type q.list_name &lt;- str_split(questions[questions$name == &quot;b9_hohh_marital_status&quot; &amp; !is.na(questions$name), &quot;type&quot;], &quot; &quot;)[[1]][2] # New table with xml and labels labels &lt;- choices %&gt;% filter(list_name == q.list_name) %&gt;% select(name, &quot;label::English&quot;) %&gt;% dplyr::rename(b9_hohh_marital_status = name, b9_hohh_marital_status_label = &quot;label::English&quot;) # Add a column with English labels to the main dataset main_dataset &lt;- merge(labels, main_dataset, by = &#39;b9_hohh_marital_status&#39;) Building a bar graph ggplot((main_dataset %&gt;% filter(!is.na(b9_hohh_marital_status_label)) %&gt;% dplyr::group_by(b9_hohh_marital_status_label) %&gt;% dplyr::summarize(weight_sum = round(sum(stratum.weight), 2))), aes(y = reorder(b9_hohh_marital_status_label, weight_sum), x = weight_sum/sum(weight_sum))) + geom_bar(stat = &quot;identity&quot;, fill = &quot;#EE5859&quot;) + geom_text(aes(label = paste(round((weight_sum/sum(weight_sum)*100),0),&quot;%&quot;)), color = &quot;#58585A&quot;, size = 4, hjust = -0.1) + scale_x_continuous(labels = scales::percent) + theme(axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.y = element_blank(), axis.ticks.y = element_blank(), axis.text.y = element_text(color = &quot;#58585A&quot;, size = 12), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank()) Removing temporary data rm(labels, q.list_name) For select multiple questions: Preparing values for visualization (replacing xml values to lables; calculating results) # Getting needed columns from the main dataset (indicator and weight) visual_dataset &lt;- main_dataset[,grepl(&quot;b10_hohh_vulnerability.|stratum.weight&quot;, names(main_dataset))] # Reshaping the dataset visual_dataset &lt;- melt(visual_dataset, id.vars = &quot;stratum.weight&quot;) # Grouping by choices and getting sum of weights visual_dataset &lt;- visual_dataset %&gt;% mutate(weight = stratum.weight * value) %&gt;% group_by(variable) %&gt;% summarise(weight_sum = sum(as.numeric(weight))) %&gt;% mutate(percentage = round(weight_sum / sum(main_dataset$stratum.weight)*100)) %&gt;% dplyr::rename(b10_hohh_vulnerability = variable) # Based on value we get option type and replacing xmls to the labels and q.list_name &lt;- str_split(questions[questions$name == &quot;b10_hohh_vulnerability&quot; &amp; !is.na(questions$name), &quot;type&quot;], &quot; &quot;)[[1]][2] # New table with xml and labels labels &lt;- choices %&gt;% filter(list_name == q.list_name) %&gt;% select(name, &quot;label::English&quot;) %&gt;% dplyr::rename(b10_hohh_vulnerability = name, b10_hohh_vulnerability_label = &quot;label::English&quot;) %&gt;% mutate(b10_hohh_vulnerability = paste0(&quot;b10_hohh_vulnerability.&quot;, b10_hohh_vulnerability)) # Add a column with English labels to the visualization dataset visual_dataset &lt;- merge(labels, visual_dataset, by = &#39;b10_hohh_vulnerability&#39;) Building a bar graph ggplot(visual_dataset, aes(y = reorder(b10_hohh_vulnerability_label, percentage), x = percentage)) + geom_bar(stat = &quot;identity&quot;, fill = &quot;#EE5859&quot;) + geom_text(aes(label = paste(percentage, &quot;%&quot;)), color = &quot;#58585A&quot;, size = 4, hjust = -0.1) + scale_x_continuous(labels = scales::percent) + theme(axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.y = element_blank(), axis.ticks.y = element_blank(), axis.text.y = element_text(color = &quot;#58585A&quot;, size = 12), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank()) Removing temporary data rm(labels, q.list_name) 8.3.4 Euler diagram An Euler diagram is a diagrammatic means of representing sets and their relationships. They are particularly useful for explaining complex hierarchies and overlapping definitions. They are similar to another set diagramming technique, Venn diagrams. Unlike Venn diagrams, which show all possible relations between different sets, the Euler diagram shows only relevant relationships. Source First let’s load Eulerr library and our dataset main_dataset &lt;- read.csv(&quot;inputs/UKR2007_MSNA20_HH_dataset_main_rcop.csv&quot;, na.strings = &quot;&quot;) Euler diagrams are particularly useful to visualize overlaps between HH characteristics that help better understand the demographic profile of the area. For example, let’s visualize overlaps between such HH characteristics as age, displacement status, income level, disability, and employment status. library(eulerr) library(magrittr) library(dplyr) library(tidyr) library(purrr) library(stringr) library(tibble) library(UpSetR) vulnerability_data &lt;- main_dataset %&gt;% select(b10_hohh_vulnerability.disability_not_including_chronic_illness,b10_hohh_vulnerability.older_person, b10_hohh_vulnerability.unemployed,d1_hh_displacement_status,b15_hohh_income,X_uuid, strata, stratum.weight)%&gt;% #select all necessary columns mutate(displaced = ifelse(d1_hh_displacement_status == &quot;no&quot;, 0, 1), low_income = ifelse(as.numeric(b15_hohh_income) &gt;= 2189, 0, 1))%&gt;% #2189 UAH(83$) is minimal monthly income in 2020 #calculate binary indicators in case they are not available in the dataset directly from select multiple questions select(-d1_hh_displacement_status, -b15_hohh_income)%&gt;% setNames(c(&quot;disability&quot;, &quot;60+&quot;, &quot;unemployed&quot;, &quot;uuid&quot;, &quot;strata&quot;, &quot;weight&quot;, &quot;displaced&quot;, &quot;low_income&quot;)) #remove unnecessary columns and rename other column vulnerability_data &lt;- #create column that will combine all binary columns into one (same approach as in ### Re-generate text column for select multiple questions section of Data Cleaning chapter) map2_df(vulnerability_data, names(vulnerability_data), ~ replace(.x, .x==1, .y) %&gt;% replace(. == 0, NA)) %&gt;% unite(combined, disability, `60+`, displaced, low_income, unemployed, remove = FALSE, na.rm = TRUE, sep = &#39;&amp;&#39;)%&gt;% filter(!combined == &quot;&quot;) #calculate weighted summary statistics for each combination vulnerability_summary &lt;- vulnerability_data %&gt;% select(strata, weight, combined)%&gt;% group_by(combined) %&gt;% summarise(weight_sum = sum(as.numeric(weight)))%&gt;% mutate(per = weight_sum / sum(weight_sum) * 100)%&gt;% filter(per &gt; 1)%&gt;% select(-weight_sum) #convert data frame into named numeric vector that is used by plot function vulnerability_input &lt;- vulnerability_summary %&gt;% deframe() In this block we will build euler diagram using REACH color palette and some basic styling. plot(euler(vulnerability_input), edges = FALSE, quantities = list(type = &quot;percent&quot;, fontsize = 8), labels = c(&quot;60+&quot;, &quot;Displaced&quot;, &quot;Low income&quot;, &quot;Disability&quot;, &quot;Unemployed&quot;), legend = list(labels = c(&quot;60+&quot;, &quot;Displaced&quot;, &quot;Low income&quot;, &quot;Disability&quot;, &quot;Unemployed&quot;)), fills = c(&quot;#7CB6C4&quot;,&quot;#B6C8B1&quot;,&quot;#F6E3E3&quot;,&quot;#D1CAB8&quot;,&quot;#D1D3D4&quot;) ) As an alternative, we also can build a Venn diagram that shows each relation (even not possible in reality). As you can see Venn diagram in this case is less readable and usable. plot(venn(vulnerability_input), edges = FALSE, quantities = list(type = &quot;percent&quot;, fontsize = 8), labels = c(&quot;60+&quot;, &quot;Displaced&quot;, &quot;Low income&quot;, &quot;Disability&quot;, &quot;Unemployed&quot;), legend = list(labels = c(&quot;60+&quot;, &quot;Displaced&quot;, &quot;Low income&quot;, &quot;Disability&quot;, &quot;Unemployed&quot;)), fills = c(&quot;#7CB6C4&quot;,&quot;#B6C8B1&quot;,&quot;#F6E3E3&quot;,&quot;#D1CAB8&quot;,&quot;#D1D3D4&quot;)) Another popular type of diagram that shows relation is UpSetR diagram. Even with default styling, it’s quite good in the visualization of intersections between different HH characteristics. upset(fromExpression(vulnerability_input), order.by = &quot;freq&quot;) 8.3.5 Venn diagram 8.3.6 UpSet plots 8.3.7 boxplots 8.4 Labels 8.4.1 Xml to Label The following code transform column headers, select_one and select_multiple values from XML to Label. Loading Libraries library(tidyverse) Dataset column headers function xml2label_question &lt;- function(tool_survey, tool_choices, col){ # for each column check if it is a select multiple if (str_detect(col, &quot;/&quot;)) { q.name &lt;- str_split(col, &quot;/&quot;)[[1]][1] c.name &lt;- paste0(tail(str_split(col, &quot;/&quot;)[[1]], -1), collapse=&quot;/&quot;) } else { q.name &lt;- col c.name &lt;- NA } # returning the label and make sure to include the label of multiple choices after / if (q.name %in% tool_survey$name){ q &lt;- tool_survey[tool_survey$name==q.name,] q.label &lt;- q$`label::english` if (is.na(q.label) | q$type %in% c(&quot;note&quot;)) q.label &lt;- q.name if (!is.na(c.name)){ q.list_name=ifelse(q$list_name==&quot;NA&quot;, NA, q$list_name) c.label &lt;- tool_choices[tool_choices$list_name==q.list_name &amp; tool_choices$name==c.name, &quot;label::english&quot;] } else c.label &lt;- NA label &lt;- ifelse(is.na(c.label), q.label, paste0(q.label, &quot;/&quot;, c.label)) } else label &lt;- q.name return(label) } Select_one values function xml2label_choices_one &lt;- function(tool_survey, tool_choices, data, col) { # select the type column from each select_one question q.type &lt;- tool_survey$type[tool_survey$name==col] # take the id of the choices to get the list name q.list_name &lt;- str_split(q.type, &quot; &quot;)[[1]][2] # export the choices relevant to each select_one question choices &lt;- tool_choices %&gt;% filter(list_name == q.list_name) %&gt;% select(name, `label::english`) %&gt;% rename(label=`label::english`) # replace the xml with label using left_join d.join &lt;- data.frame(col=as.character(data[[col]])) %&gt;% left_join(choices, by=c(&quot;col&quot;=&quot;name&quot;)) %&gt;% select(label) # return only the new label column and replace it in the for loop using vectors return(d.join$label) } Select_multiple values function xml2label_choices_multiple &lt;- function(tool_survey, tool_choices, data, col) { # select all the columns with all the options for each select_multiple d.join &lt;- data %&gt;% select(contains(paste0(col,&quot;/&quot;))) col_internal &lt;- colnames(d.join) # for each column with options for(j in 1:length(col_internal)){ # change all 1&#39;s to the xml answer xml_answer &lt;- str_split(col_internal[j], &quot;/&quot;)[[1]][2] d.join &lt;- d.join %&gt;% mutate(!!sym(col_internal[j]) := ifelse(!!sym(col_internal[j]) == &quot;1&quot;, xml_answer, NA)) # get the list of the xml and label options for each select multiple questions choice_id &lt;- filter(tool_survey, str_starts(name, str_split(col_internal[j],&quot;/&quot;)[[1]][1])) %&gt;% select(list_name) choice_id &lt;- choice_id$list_name t.choices &lt;- tool_choices %&gt;% filter(list_name == choice_id) %&gt;% select(name, `label::english`) %&gt;% rename(label = `label::english`) # replace the xml with label using left_join d.new.join &lt;- data.frame(col=as.character(d.join[[col_internal[j]]])) %&gt;% left_join(t.choices, by=c(&quot;col&quot;=&quot;name&quot;)) %&gt;% select(label) d.join[col_internal[j]] &lt;- d.new.join$label } # concatenate all the answers, removing NAs in one cell and separated by a &#39;;&#39; d.join &lt;- d.join %&gt;% unite(&quot;Merged&quot;, everything(), sep= &quot;;&quot;, na.rm = T) # return only the new label column and replace it in the for loop using vectors return(d.join$Merged) } Example filename_tool &lt;- &quot;enter your tool link here&quot; filename_cleaned_data &lt;- &quot;enter your data hear&quot; # loading tool tool_survey &lt;- read_excel(filename_tool, sheet = &quot;survey&quot;, col_types = &quot;text&quot;) %&gt;% filter(!is.na(name)) %&gt;% # adding two columns showing the question type and the id of the list_name choices separately mutate(q.type = as.character(lapply(type, function(x) str_split(x, &quot; &quot;)[[1]][1])), list_name = as.character(lapply(type, function(x) str_split(x, &quot; &quot;)[[1]][2]))) tool_choices &lt;- read_excel(filename_tool, sheet = &quot;choices&quot;, col_types = &quot;text&quot;) %&gt;% filter(!is.na(list_name)) # loading the data main_dataset &lt;- read_excel(filename_cleaned_data, col_types = &quot;text&quot;) # creating another data frame with changes data_labeled &lt;- main_dataset # select_one values - XML to Label tool_select_one &lt;- tool_survey %&gt;% filter(str_starts(type, &quot;select_one &quot;)) col_select_one &lt;- tool_select_one$name for (i in 1:length(col_select_one)){ if(!is.null(data_labeled[[col_select_one[i]]])){ data_labeled[[col_select_one[i]]] &lt;- xml2label_choices_one(tool_survey,tool_choices,main_dataset,col_select_one[i]) } } # select_multiple values - XML to Label tool_select_multi &lt;- tool_survey %&gt;% filter(str_starts(type, &quot;select_multiple &quot;)) col_select_multi &lt;- tool_select_multi$name for (i in 1:length(col_select_multi)){ if(!is.null(data_labeled[[col_select_multi[i]]])){ data_labeled[[col_select_multi[i]]] &lt;- xml2label_choices_multiple(tool_survey,tool_choices,main_dataset,col_select_multi[i]) } } # Column headers - XML to Label col_names &lt;- colnames(main_dataset) for (i in 1:length(col_names)) { colnames(data_labeled)[i] &lt;- xml2label_question(tool_survey, tool_choices, col_names[i]) } 8.4.2 change from label to xml 8.5 Dashboarding - Sharing information Html files Tableau Power BI Shiny 8.6 Outputs with hypothesis testing results "],["miscellaneous.html", "9 Miscellaneous", " 9 Miscellaneous Geocoding - stringdist R output to be used with SPSS Individual loops analysis Calculation of CI guidelines on hypothesis testing "]]
